{"version":3,"sources":["lib/util.ts","lib/index.ts","state/state.ts","state/action.ts","hooks.js","App.js","reportWebVitals.js","index.js","web3/wallet.ts"],"names":["div","a","biga","BigNumber","i","toString","multi","multipliedBy","plus","minus","getDecimalString","decimalNum","pow","lessThan","b","lt","lessThanEqual","lte","greaterThan","gt","greaterThanEqual","gte","checkFeeRate","tx","minFeeRate","size","toBuffer","length","feeRate","getFee","msg","message","error","Error","safeJsonStringify","data","JSON","parse","stringify","key","value","SCAN_URL","SCAN_URL_TESTNET","FEE_PER_KB","getSensibleApiPrefix","network","NetWork","Mainnet","isSensibleSuccess","res","status","sleep","ms","Promise","resolve","setTimeout","formatValue","decimal","util","isValidAddress","address","mvc","Address","_","generateKeysFromEmailPassword","email","pass","Testnet","s","regchars","match","regupchars","regnums","bufferS","Buffer","from","crypto","Hash","sha256","tmp","hex","privateKey","PrivateKey","toAddress","publicKey","toPublicKey","getSensibleFtHistoryUrl","genesis","codehash","test","getWocAddressUrl","url","getWocTransactionUrl","txid","signAnyTx","options","txHex","scriptHex","inputIndex","satoshis","Transaction","script","Script","fromBuffer","sig","toHex","signTx","Number","getAddressSensibleFtList","pageSize","page","getAddressSensibleFtListByPage","list","console","log","apiPrefix","axios","get","map","item","codeHash","sensibleId","tokenName","name","tokenSymbol","symbol","tokenDecimal","balance","confirmedString","unconfirmedString","statusText","getAddressMvcUtxoList","txId","outputIndex","outIndex","getAddressMvcBalance","confirmed","unconfirmed","getAddressMvcBalanceByUtxo","sum","utxoList","total","reduce","prev","cur","broadcastSensibleQeury","rawtx","apiPrefx","post","hash","mapMvcFeeError","err","getCustomSigners","findValue","customSatotxList","find","satotxList","selectNotNullSigners","signerList","signers","transferSensibleFt","senderWif","receivers","utxos","noBroadcast","customSigner","ft","SensibleFT","purse","feeb","transfer","routeCheckTx","txParseRes","parseTransaction","serialize","outputs","errMsg","isMvcAmountExceed","indexOf","isFtUtxoAmountExceed","mergeMvcUtxo","merge","Signature","sighashType","SIGHASH_ALL","SIGHASH_FORKID","unlockP2PKHInput","sigtype","prevTxId","inputs","signature","Sighash","sign","output","satoshisBN","setScript","buildPublicKeyHashIn","toDER","checkMvcReceiversSatisfied","satified","txAddressAmountMap","getKey","amount","forEach","rece","transferMvc","allUtxos","totalOutput","utxoValue","selectedUtxoList","feePerKb","dust","utxoResList","push","addInput","Input","PublicKeyHash","Output","buildPublicKeyHashOut","empty","to","change","clearOutputs","index","type","Sentry","fee","utxolist","input","ftToken","ret","addr","tokenAmount","isFt","ftDetail","tokenAddress","window","createGlobalState","account","mvcBalance","sensibleFtList","useGlobalState","getGlobalState","setGlobalState","accountStorageKey","saveAccountStorage","str","localStorage","setItem","getAccountStorage","getItem","pollingMvcTimer","pollingSensibleFtTimer","pollingMvcBalance","clearInterval","fn","setInterval","pollingSensibleFtBalance","valid_sensibleFtList","filter","saveAccount","password","top","hashdata","decodeURIComponent","location","substr","postMsg","createPostMsg","id","preAccount","preMvcBalance","preSensibleFtBalance","accountKey","emit","isMvcBalanceEqual","b1","b2","isSensibleFtBalanceEqual","sort","item1","item2","localeCompare","isAccountEqual","requestLatestData","latestAccount","latestBalance","equal","handleRequest","method","on","eventData","requestId","params","response","PublicKey","signed","useOnceCall","cb","condition","isCalledRef","useRef","useEffect","current","Option","Select","Header","useState","decodeModalVisible","setDecodeModalVisible","setRawtx","setNetwork","resultModalVisible","setResultModalVisible","className","title","content","onClick","actions","open","visible","onCancel","TextArea","rows","onChange","e","target","style","width","placeholder","LoginPanel","Form","useForm","form","bordered","layout","onFinish","Modal","confirm","href","rel","onOk","getFieldsValue","Item","rules","required","prefix","UserOutlined","min","transform","trim","Password","LockOutlined","visibilityToggle","label","htmlType","AccountInfoPanel","onWithDraw","onTransfer","handleTransfer","margin","justify","span","itemLayout","dataSource","renderItem","placement","Meta","description","height","display","alignItems","getRabinPubKeys","getRabins","rabinApis","promises","rabins","rabinApi","all","then","satotxApiPrefix","satotxPubKey","pubKey","TransferAllPanel","initDatas","onTransferCallback","loading","setLoading","values","isMvc","token","setFieldsValue","handleSubmit","receiverLists","broadcastMvc","formatReceiverList","transferRes","broadcastSensibleFt","broadcastMvcAndToken","txs","totalOutputValueFloatDuck","totalOutputValue","wif","txInfo","resItem","routeCheckTxid","routeCheckTxHex","routeCheckOutputs","mvcRawTx","amountCheckTx","amountCheckRawTx","tokenRawTx","cursor","LeftOutlined","formatBalance","canEdit","fontWeight","List","fields","add","remove","fieldKey","restField","marginBottom","align","validator","reject","disabled","shape","icon","MinusOutlined","PlusOutlined","block","TransferPanel","initReceivers","receiverList","success","App","trasfering","setTransfering","trasferSensibleFtGenesis","setTrasferSensibleFtGenesis","setInitReceivers","setInitDatas","initRabins","setRabins","initNoBroadcast","setInitNoBroadcast","handleCancelTransfer","getHashData","opener","handlePopResponseCallback","resObj","requestAccountCondition","transferMvcCondition","outputTotal","datas","v","obu","onbeforeunload","event","overflow","accountName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae459ba6.chunk.js","sourcesContent":["import BigNumber from \"bignumber.js\";\nimport {message} from 'antd'\n\n// 最大是253，那么全部用 string 吧\ntype NumberDuck = number | string\n\nexport function div (a: NumberDuck, ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.div(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function multi(a: NumberDuck,  ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.multipliedBy(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function plus(a: NumberDuck,  ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.plus(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function minus(a: NumberDuck,  ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.minus(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function getDecimalString(decimalNum: number): string {\n    return new BigNumber(10).pow(decimalNum).toString()\n}\n\nexport function lessThan(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.lt(new BigNumber(b))\n}\n\nexport function lessThanEqual(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.lte(new BigNumber(b))\n}\n\nexport function greaterThan(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.gt(new BigNumber(b))\n}\n\nexport function greaterThanEqual(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.gte(new BigNumber(b))\n}\n\nexport function equal(a: NumberDuck, b: NumberDuck): boolean {\n    let biga = new BigNumber(a)\n    return biga.eq(new BigNumber(b))\n}\n\nexport function toString(a: NumberDuck): string {\n    return new BigNumber(a).toString()\n}\n\nexport function checkFeeRate(tx: any, minFeeRate?: number) {\n    minFeeRate = minFeeRate || 1.0\n    const size = tx.toBuffer().length\n    const feeRate = tx.getFee() / size;\n    if (feeRate < minFeeRate && feeRate  < 10) {\n        const msg = `The fee rate should not be less than ${minFeeRate}, but in the end it is ${feeRate}`\n        message.error(msg)\n        throw new Error(msg)\n    }\n}\n\nexport function safeJsonStringify(data: any) {\n    return JSON.parse(JSON.stringify(data, (key, value) =>\n        typeof value === 'bigint'\n            ? value.toString()\n            : value // return everything else unchanged\n    ));\n}\n\n// 传过来 string/int -> 显示(float) -> bigint\n","import { mvc, toHex, signTx } from 'mvc-scrypt';\nimport { NetWork } from '../web3';\nimport {Key, SensibleFt, TransferReceiver, MvcUtxo} from '../state/stateType'\nimport axios from 'axios'\nimport {SensibleFT} from 'meta-contract'\nimport * as util from './util'\nimport * as Sentry from \"@sentry/react\";\nimport customSatotxList from './customSatotx.json'\n\nconst SCAN_URL = 'https://mvcscan.com'\nconst SCAN_URL_TESTNET = 'https://test.mvcscan.com'\nconst FEE_PER_KB = 1050\n\nfunction getSensibleApiPrefix(network: NetWork) {\n    if (network === NetWork.Mainnet) {\n        return 'https://mainnet.mvcapi.com'\n    } else {\n        return 'https://testnet.mvcapi.com'\n    }\n}\nfunction isSensibleSuccess(res: any) {\n    return res.status === 200\n}\n\nfunction sleep(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport function formatValue(value: number, decimal: number) {\n    // const bigNum = mvc.crypto.BN.fromNumber(value)\n    // return bigNum.div(10**decimal).toString(10)\n    // return value / (10**decimal)\n    return util.div(value, util.getDecimalString(decimal))\n}\n\nexport function isValidAddress(network: NetWork, address: string) {\n    try {\n        new mvc.Address(address, network)\n        return true\n    } catch (_) {\n        return false\n    }\n}\n\nexport function generateKeysFromEmailPassword(email: string, pass: string, network: NetWork = NetWork.Testnet): Key {\n    let s: string = email\n    s += '|'+pass+'|';\n    s += s.length+'|!@'+((pass.length*7)+email.length)*7;\n    var regchars = (pass.match(/[a-z]+/g)) ? pass.match(/[a-z]+/g)!.length : 1;\n    var regupchars = (pass.match(/[A-Z]+/g)) ? pass.match(/[A-Z]+/g)!.length : 1;\n    var regnums = (pass.match(/[0-9]+/g)) ? pass.match(/[0-9]+/g)!.length : 1;\n    s += ((regnums+regchars)+regupchars)*pass.length+'3571';\n    s += (s+''+s);\n\n    let bufferS = Buffer.from(s)\n    bufferS = mvc.crypto.Hash.sha256(bufferS)\n\tfor(let i=0;i<=49;i++){\n        const tmp = Buffer.from(bufferS.toString('hex'))\n        bufferS = mvc.crypto.Hash.sha256(tmp)\n\t}\n    const hex = mvc.crypto.Hash.sha256(Buffer.from(bufferS.toString('hex'))).toString('hex')\n    \n    const privateKey = new mvc.PrivateKey(hex, network)\n    const address = privateKey.toAddress(network).toString()\n    \n    return {\n        address,\n        privateKey: privateKey.toString(),\n        publicKey: privateKey.toPublicKey().toString()\n    }\n}\n\nexport function getSensibleFtHistoryUrl(network: NetWork, address: string, genesis: string, codehash: string) {\n    // https://sensiblequery.com/#/ft/utxo/a1961d0c0ab39f1bd0f79c2f6ae27138cca0620c/d4266deb03b5fdb7c9af39fa71f86f4b1f6390422e9bcd1556399a3f0063965f00000000/1111111111111111111114oLvT2\n    const test = network === NetWork.Mainnet ? '' : '/test'\n    return `https://sensiblequery.com${test}/#/ft/utxo/${codehash}/${genesis}/${address}`\n}\n\nexport function getWocAddressUrl(network: NetWork, address: string) {\n    let url = ''\n    if (network === NetWork.Mainnet) {\n        url = SCAN_URL + '/address/'\n    } \n    if (network === NetWork.Testnet) {\n        url = SCAN_URL_TESTNET + '/address/'\n    }\n    if (!url) {\n        return url\n    }\n    url += address\n    return url\n}\n\nexport function getWocTransactionUrl(network: NetWork, txid: string) {\n    let url = ''\n    if (network === NetWork.Mainnet) {\n        url = SCAN_URL + '/tx/'\n    } \n    if (network === NetWork.Testnet) {\n        url = SCAN_URL_TESTNET + '/tx/'\n    }\n    if (!url) {\n        return url\n    }\n    url += txid\n    return url\n}\n\nexport async function signAnyTx(options: any) {\n    const {txHex, scriptHex, inputIndex, privateKey, publicKey, satoshis} = options\n    const tx = new mvc.Transaction(txHex)\n    const script = mvc.Script.fromBuffer(Buffer.from(scriptHex, 'hex'))\n    const sig = toHex(signTx(tx, privateKey , script, Number(satoshis), inputIndex))\n    \n    return {\n        publicKey: publicKey.toString(),\n        sig,\n    }\n}\n\n// todo 分页获取\nexport async function getAddressSensibleFtList(network: NetWork, address: string): Promise<SensibleFt[]> {\n    // todo remove next line\n    let res: SensibleFt[] = []\n    const pageSize = 20\n    try {\n        for (let page = 1; ; page++) {\n            const list = await getAddressSensibleFtListByPage(network, address, page, pageSize)\n            res = [...res, ...list]\n            if (list.length < pageSize) {\n                break\n            }\n        }\n    } catch (err) {\n        console.log('getAddressSensibleFtList error')\n        console.error(err)\n    }\n    return res;\n}\n\nexport async function getAddressSensibleFtListByPage(network: NetWork, address: string, page: number, pageSize: number = 20): Promise<SensibleFt[]> {\n    const apiPrefix = getSensibleApiPrefix(network)\n\n    const res = await axios.get(`${apiPrefix}/contract/ft/address/${address}/balance`)\n    const success = isSensibleSuccess(res)\n\n    if (success) {\n        return (res.data || []).map((item: any) => {\n            return {\n                genesis: item.genesis,\n                codehash: item.codeHash,\n                sensibleId: item.sensibleId,\n                tokenName: item.name,\n                tokenSymbol: item.symbol,\n                tokenDecimal: item.decimal,\n                balance: util.plus(item.confirmedString, item.unconfirmedString),\n            }\n        })\n    }\n    throw new Error(res.statusText)\n}\n\n// 获取 mvc utxo\nexport async function getAddressMvcUtxoList(network: NetWork, address: string, page: number, pageSize: number=16): Promise<MvcUtxo[]> {\n    const apiPrefix = getSensibleApiPrefix(network)\n    const res = await axios.get(`${apiPrefix}/address/${address}/utxo`)\n    const success = isSensibleSuccess(res)\n    if (success) {\n        return (res.data || []).map((item: any) => {\n            return {\n                txId: item.txid, \n                outputIndex: item.outIndex,\n                satoshis: item.value,\n                address: address,\n            }\n        })\n    }\n\n    // const fakeUtxoList: MvcUtxo[] = [\n    //     {\n    //         txId: '6a18f5b859fb4c281affaf8f6245a2fe0813867d4b7d24948da18e099462619b',\n    //         outputIndex: 0,\n    //         satoshis: 98775,\n    //         address,\n    //     },\n    //     {\n    //         txId: 'de980facfe7b10a84bfa658130b2b7725565510f967534459d63e6c9717a08e2',\n    //         outputIndex: 0,\n    //         satoshis: 98679,\n    //         address,\n    //     },\n    //     {\n    //         txId: '8ace8ab3995de63af867d929561b3a48bb499ea8d6e64c2ecefba29c6213764f',\n    //         outputIndex: 4,\n    //         satoshis: 4939535,\n    //         address,\n    //     },\n    //     {\n    //         txId: '74bec534becb77f894bcacaf2386604642a1ea00e371838b1780f5235a12bb9d',\n    //         outputIndex: 2,\n    //         satoshis: 45033315,\n    //         address,\n    //     }\n    // ]\n    // if (page === 1) {\n    //     return fakeUtxoList\n    // }\n    // return []\n    \n    throw new Error(res.statusText)\n}\n\n// 获取mvc 余额, 这里加入了ft utxo的值，暂时不能用\nexport async function getAddressMvcBalance(network: NetWork, address: string): Promise<string> {\n    const apiPrefix = getSensibleApiPrefix(network)\n    const res = await axios.get(`${apiPrefix}/address/${address}/balance`)\n    if (res.status === 200) {\n        return util.plus(res.data.confirmed, res.data.unconfirmed)\n    }\n    throw new Error(res.statusText)\n}\n\nexport async function getAddressMvcBalanceByUtxo(network: NetWork, address: string): Promise<string> {\n    let page = 1\n    const pageSize = 16\n    let sum: string = '0'\n    for (;;) {\n        const utxoList = await getAddressMvcUtxoList(network, address, page, pageSize)\n        const total = utxoList.reduce((prev: any, cur: any) => util.plus(prev, cur.satoshis), '0')\n        sum = util.plus(sum, total)\n        if (utxoList.length < pageSize) {\n            break\n        }\n        page++\n    }\n    console.log('balance', sum)\n    return sum\n}\n\n// 获取 sensible ft 余额\nexport async function getAddressSensibleFtBalance(network: NetWork, address: string, codehash: string, genesis: string): Promise<number> {\n    const apiPrefix = getSensibleApiPrefix(network)\n    const res = await axios.get(`${apiPrefix}/contract/ft/address/${address}/balance?codeHash=${codehash}&&genesis=${genesis}`)\n    const success = isSensibleSuccess(res)\n    if (success) {\n        return Number(util.plus(res.data[0].confirmedString, res.data[0].unconfirmedString))\n    }\n    throw new Error(res.statusText)\n}\n\n// 获取 sensible 余额 地址\nexport async function getSensibleAddressUrl(network: NetWork, address: string, codehash: string, genesis: string) {\n    const test = network === NetWork.Mainnet ? '' : '/test'\n    // https://sensiblequery.com/#/ft/utxo/ac939f3cf7aba022d09f05e5448f1e635c81dbb3/598d220eaecb68cf783cbc6cc6295d042897874f/1FJCX1QG7KyaHpx1U2iVe4xoAWNVB1Wd3L\n    return `https://sensiblequery.com${test}/#/ft/utxo/${codehash}/${genesis}/${address}`\n}\n\n\n// 广播交易\nexport async function broadcastSensibleQeury(network: NetWork, rawtx: string) {\n    const apiPrefx = getSensibleApiPrefix(network)\n    console.log('broadcastSensibleQeury: ', network, rawtx)\n    const res = await axios.post(`${apiPrefx}/tx/broadcast`, {\n        hex: rawtx,\n    })\n    const success = isSensibleSuccess(res)\n    if (success) {\n        return new mvc.Transaction(rawtx).hash\n    }\n    throw new Error('broadcast failed')\n}\n\n\n// 发送 token 交易\nconst mapMvcFeeError = (err: Error) => {\n    if (err.message === \"Insufficient balance.\") {\n        // 将模糊的错误信息转换\n        return new Error('Low mvc balance to pay miners')\n    }\n    return err\n}\nconst getCustomSigners = (codehash: string, genesis: string):any[] => {\n    const findValue = customSatotxList.find(item => item.codehash === codehash && item.genesis === genesis)\n    if (findValue) {\n        return findValue.satotxList\n    }\n    return []\n}\nconst selectNotNullSigners = (...signerList: any[][]): any[] =>  {\n    for (let signers of signerList) {\n        if (signers && signers.length > 0) {\n            return signers\n        }\n    }\n    return []\n}\nexport async function transferSensibleFt(network: NetWork, signers: any[], senderWif: string, receivers: TransferReceiver[], codehash: string, genesis: string, utxos: any = false, noBroadcast: boolean = false){\n    \n    const customSigner = getCustomSigners(codehash, genesis)\n    signers = selectNotNullSigners(signers, customSigner)\n\n    console.log('signers', signers)\n    \n    const ft = new SensibleFT({\n        network: network as any,\n        purse: senderWif,\n        feeb: 1.05,\n    })\n    console.log('transferSensibleFt', receivers, network, codehash, genesis, signers)\n\n    try {\n        const {txid, tx, routeCheckTx} = await ft.transfer({\n            senderWif: senderWif,\n            receivers,\n            codehash,\n            genesis,\n            utxos: utxos,\n            noBroadcast,\n        })\n        if (noBroadcast === true) {\n            return {tx, routeCheckTx}\n        }\n        util.checkFeeRate(tx)\n        const txParseRes = parseTransaction(network, tx.serialize(true))\n        return {\n            txid,\n            outputs: txParseRes.outputs,\n        }\n    } catch (_err: any) {\n        const err = mapMvcFeeError(_err)\n        const errMsg = err.toString();\n        const isMvcAmountExceed =\n          errMsg.indexOf(\n            \"Mvc utxos should be no more than 3 in \"\n          ) > 0;\n        let isFtUtxoAmountExceed = errMsg.indexOf('Too many token-utxos') > 0;\n        console.log(\"broadcast sensible ft error\");\n        console.error(err);\n\n        if (!isMvcAmountExceed && !isFtUtxoAmountExceed) {\n            throw err;\n        }\n\n        // 如果 mvc utxo 先 merge mvc utxo\n        if (isMvcAmountExceed) {\n            try {\n                await mergeMvcUtxo(network, senderWif)\n                await sleep(3000)\n            } catch (err) {\n                console.log('merge mvc utxo fail')\n                console.error(err)\n                throw err\n            }\n\n            // merge 后重新发起 ft transfer 交易\n            try {\n                const {txid, tx} = await ft.transfer({\n                    senderWif: senderWif,\n                    receivers,\n                    codehash,\n                    genesis,\n                })\n                util.checkFeeRate(tx)\n                const txParseRes = parseTransaction(network, tx.serialize(true))\n                return {\n                    txid,\n                    outputs: txParseRes.outputs,\n                }\n            } catch (_err: any) {\n                const err = mapMvcFeeError(_err)\n                console.log('ft transfer fail after mvc utxo merge')\n                console.error(err)\n                const errMsg = err.toString()\n                isFtUtxoAmountExceed = errMsg.indexOf('Too many token-utxos') > 0;\n                if (!isFtUtxoAmountExceed) {\n                    throw err\n                }\n            }\n        }\n\n        if (isFtUtxoAmountExceed) {\n            // merge utxo\n            try {\n                //@ts-ignore\n                await ft.merge()\n                //util.checkFeeRate(tx)\n                await sleep(3000)\n            } catch (err) {\n                console.log('merge ft utxo fail')\n                console.error(err)\n                throw err\n            }\n\n            // merge 后重新发起 ft transfer 交易\n            try {\n                const {txid, tx} = await ft.transfer({\n                    senderWif: senderWif,\n                    receivers,\n                    codehash,\n                    genesis,\n                })\n                util.checkFeeRate(tx)\n                const txParseRes = parseTransaction(network, tx.serialize(true))\n                return {\n                    txid,\n                    outputs: txParseRes.outputs,\n                }\n            } catch (_err: any) {\n                const err = mapMvcFeeError(_err)\n                console.log('ft transfer fail after ft utxo merge')\n                console.error(err)\n                throw err\n            }\n        }\n    } \n}\n\nconst Signature = mvc.crypto.Signature;\nexport const sighashType = Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID;\n\n\n// p2pkh 解锁\nexport function unlockP2PKHInput(privateKey: mvc.PrivateKey, tx: mvc.Transaction, inputIndex: number, sigtype: number) {\n    const sig = new mvc.Transaction.Signature({\n      publicKey: privateKey.publicKey,\n      prevTxId: tx.inputs[inputIndex].prevTxId,\n      outputIndex: tx.inputs[inputIndex].outputIndex,\n      inputIndex,\n      signature: mvc.Transaction.Sighash.sign(\n        tx,\n        privateKey,\n        sigtype,\n        inputIndex,\n        tx.inputs[inputIndex].output.script,\n        tx.inputs[inputIndex].output.satoshisBN\n      ),\n      sigtype,\n    });\n  \n    tx.inputs[inputIndex].setScript(\n      mvc.Script.buildPublicKeyHashIn(\n        sig.publicKey,\n        sig.signature.toDER(),\n        sig.sigtype\n      )\n    );\n}\n\n// 发送 mvc 交易\nfunction checkMvcReceiversSatisfied(receivers: TransferReceiver[], tx: any, network: NetWork) {\n    let satified = true\n    const txAddressAmountMap: {[key: string]: number} = {}\n    const getKey = (address: string, amount: any) => {\n        return `${address}_${util.toString(amount)}`\n    }\n    tx.outputs.forEach((output: any) => {\n        const address = output.script.toAddress(network);\n        const amount = output.satoshis\n        const key = getKey(address, amount)\n        txAddressAmountMap[key] = (txAddressAmountMap[key] || 0) + 1\n    })\n    for (let i = 0; i < receivers.length; i++) {\n        const rece = receivers[i]\n        const key = getKey(rece.address, rece.amount)\n        if (!txAddressAmountMap[key]) {\n            satified = false\n            break\n        }\n        txAddressAmountMap[key] = txAddressAmountMap[key] - 1\n    }\n    return satified\n}\nexport async function transferMvc(network: NetWork, senderWif: string, receivers: TransferReceiver[], noBroadcast: boolean=false, allUtxos: boolean=false) {\n    // 1. 获取用户 utxo 列表\n    // 2. 判断 utxo 金额 是否 满足 receivers 金额\n    // 3. 构造交易\n    // 4. 广播交易\n    console.log('arguments', network, senderWif, receivers)\n    const address = new mvc.PrivateKey(senderWif, network).toAddress(network)\n    const balance = await getAddressMvcBalanceByUtxo(network, address)\n    const totalOutput = receivers.reduce((prev: any, cur) => util.plus(prev, cur.amount), '0')\n    if (util.lessThan(balance, totalOutput)) {\n        throw new Error('Insufficient_mvc_Balance')\n    }\n    let utxoValue: string = '0'\n    let selectedUtxoList = []\n\n    const tx = new mvc.Transaction()\n    tx.feePerKb(FEE_PER_KB)\n    const dust = 456\n\n    // input = output + fee + change\n    // 异常情况: 加上 change 后, fee 增加, 原本 input 不够了, 此时将所有输出移除, 然后，暂不考虑\n    \n    const pageSize = 16\n    for (let page = 1; ;page++) {\n        const utxoResList = await getAddressMvcUtxoList(network, address, page, pageSize)\n        for (let i = 0; i < utxoResList.length; i++) {\n            const item = utxoResList[i]\n            utxoValue = util.plus(utxoValue, item.satoshis)\n            selectedUtxoList.push(item)\n            tx.addInput(\n                new mvc.Transaction.Input.PublicKeyHash({\n                    output: new mvc.Transaction.Output({\n                        script: mvc.Script.buildPublicKeyHashOut(item.address),\n                        satoshis: item.satoshis,\n                    }),\n                    prevTxId: item.txId,\n                    outputIndex: item.outputIndex,\n                    script: mvc.Script.empty(),\n                })\n            );\n            if (!allUtxos && util.lessThanEqual(util.plus(totalOutput, dust), utxoValue)) {\n                break\n            }\n        }\n        if (!allUtxos && util.lessThanEqual(util.plus(totalOutput, dust), utxoValue)) {\n            break\n        }\n        if (utxoResList.length <= pageSize) {\n            break\n        }\n    }\n    receivers.forEach(item => {\n        tx.to(item.address, +item.amount)\n    })\n    if (util.greaterThan(util.minus(utxoValue, +totalOutput), 0)) {\n        tx.change(address)\n    }\n    // 如果 (utxo输入 - fee - 所有输出) = 找零 < dust，那么全部转出\n    if (util.lessThan(util.minus(utxoValue, tx.getFee(), totalOutput), dust)) {\n        // 全部转出\n        tx.clearOutputs()\n        receivers.forEach((item, index) => {\n            \n            if (receivers.length === index + 1) {\n                // 最后一个使用 change\n                tx.change(item.address)\n            } else {\n                tx.to(item.address, +item.amount)\n            }\n        })\n    }\n    tx.inputs.forEach((_: any, inputIndex: number) => {\n        const privateKey = new mvc.PrivateKey(senderWif)\n        unlockP2PKHInput(privateKey, tx, inputIndex, sighashType);\n    });\n    util.checkFeeRate(tx)\n    if (noBroadcast === true) {\n        return tx\n    }\n    const txid = await broadcastSensibleQeury(network, tx.serialize())\n    const txParseRes = parseTransaction(network, tx.serialize(true))\n\n    const amountSatified = checkMvcReceiversSatisfied(receivers, tx, network)\n    if (!amountSatified) {\n        console.log(util.safeJsonStringify({\n            type: 'mvcTransferAmountNotSatified',\n            txid: tx.hash,\n            receivers,\n            outputs: txParseRes.outputs,\n        }))\n        Sentry.captureMessage(`mvcTransferAmountNotSatified_${address}_${tx.hash}`);\n    }\n    return {\n        txid,\n        outputs: txParseRes.outputs,\n        fee: tx.getFee()\n    }\n}\n\n// 合并 mvc utxo, 合并一页\nexport async function mergeMvcUtxo(network: NetWork, senderWif: string) {\n    const address = new mvc.PrivateKey(senderWif, network).toAddress(network)\n    const utxolist = await getAddressMvcUtxoList(network, address, 1)\n    const tx = new mvc.Transaction()\n    tx.feePerKb(FEE_PER_KB)\n    utxolist.forEach(item => {\n        tx.addInput(new mvc.Transaction.Input.PublicKeyHash({\n            output: new mvc.Transaction.Output({\n                script: mvc.Script.buildPublicKeyHashOut(item.address),\n                satoshis: item.satoshis,\n            }),\n            prevTxId: item.txId,\n            outputIndex: item.outputIndex,\n            script: mvc.Script.empty(),\n        }))\n    })\n    tx.change(address)\n    tx.inputs.forEach((_: any, inputIndex: number) => {\n        const privateKey = new mvc.PrivateKey(senderWif)\n        unlockP2PKHInput(privateKey, tx, inputIndex, sighashType)\n    })\n    util.checkFeeRate(tx)\n    const txid = await broadcastSensibleQeury(network, tx.serialize())\n    const txParseRes = parseTransaction(network, tx.serialize(true))\n    return {\n        txid,\n        outputs: txParseRes.outputs,\n    }\n}\n\n\nconst parseTokenContractScript = function (scriptBuf: any, network: any = \"mainnet\") {\n    \n    //TODO: const parsed = SensibleFT.parseTokenScript(scriptBuf, network)\n    \n    return \n};\n\n\n\nexport function parseTransaction(network: NetWork, rawtx: string) {\n    let tx\n    try {\n        tx = new mvc.Transaction(rawtx)\n    } catch (err: any) {\n        return {\n            error: err.message\n        }\n    }\n\n    const inputs = tx.inputs.map((input: any, index: number) => {\n        const ftToken: any = parseTokenContractScript(input.script.toBuffer(), network);\n\n        let ret: any = {\n            index: index,\n            prevTxId: input.prevTxId.toString('hex'),\n            outputIndex: input.outputIndex,\n            script: input.script.toString('hex'),\n        }\n        try {\n            const addr = input.script.toAddress(network);\n            if (addr) {\n                ret.address = addr.toString()\n            }\n        } catch (err) {}\n        if (!ftToken) {\n            return ret\n        }\n        if (ftToken.tokenAmount <= 0) {\n            return ret\n        }\n        ret = {\n            ...ret,\n            isFt: true,\n            ftDetail: {\n                genesis: ftToken.genesis,\n                codehash: ftToken.codehash,\n                address: ftToken.tokenAddress,\n                decimal: ftToken.decimalNum,\n                name: ftToken.tokenName,\n                symbol: ftToken.tokenSymbol,\n                sensibleId: ftToken.sensibleId,\n            }\n        }\n        return ret\n    })\n    const outputs = tx.outputs.map((output: any, index: number) => {\n        const ftToken: any = parseTokenContractScript(output.script.toBuffer(), network);\n        let ret: any = {\n            index: index,\n            satoshis: output.satoshis,\n            script: output.script.toString('hex')\n        }\n        try {\n            const addr = output.script.toAddress(network);\n            if (addr) {\n                ret.address = addr.toString()\n            }\n        } catch (err) {}\n        if (!ftToken) {\n            return ret\n        }\n        if (ftToken.tokenAmount <= 0) {\n            return ret\n        }\n        ret = {\n            ...ret,\n            isFt: true,\n            ftDetail: {\n                genesis: ftToken.genesis,\n                codehash: ftToken.codehash,\n                address: ftToken.tokenAddress,\n                decimal: ftToken.decimalNum,\n                name: ftToken.tokenName,\n                symbol: ftToken.tokenSymbol,\n                amount: ftToken.tokenAmount,\n                sensibleId: ftToken.sensibleId,\n            }\n        }\n        return ret\n    })\n\n    return {\n        inputs: inputs,\n        outputs: outputs,\n        txid: tx.hash,\n    }\n    \n}\n\n\n(window as any).transferMvc = transferMvc;\n(window as any).signAnyTx = signAnyTx;\n","import { createGlobalState } from \"react-hooks-global-state\";\nimport {State} from './stateType'\n\n// app state\nconst initialState: State = {\n    account: null,\n    key: null,\n    mvcBalance: null,\n    sensibleFtList: [],\n};\nconst { useGlobalState, getGlobalState, setGlobalState } = createGlobalState(initialState);\n\nexport {\n    useGlobalState,\n    getGlobalState,\n    setGlobalState,\n}\n","import {setGlobalState, getGlobalState } from './state'\nimport {generateKeysFromEmailPassword, getAddressSensibleFtList, getAddressMvcBalanceByUtxo, signAnyTx, getAddressMvcBalance} from '../lib'\nimport {Account, BalanceMvc, Key, SensibleFt} from './stateType'\nimport * as createPostMsg from 'post-msg';\nimport { mvc } from 'mvc-scrypt';\n\n// local account storage\nconst accountStorageKey = 'accountStorageKey'\n// localStorage.removeItem(accountStorageKey)\nfunction saveAccountStorage(account: Account | null) {\n    const str = account ? JSON.stringify(account) : ''\n    localStorage.setItem(accountStorageKey, str)\n    // do not save account !!!\n}\nfunction getAccountStorage(): Account | null {\n    const str = localStorage.getItem(accountStorageKey)\n    if (!str) {\n        return null\n    }\n    return JSON.parse(str)\n}\n\nfunction isSupportToken(codehash: string) {\n    //return SensibleFT.isSupportedToken(codehash)\n    return true\n}\n\n// app action\nlet pollingMvcTimer = 0\nlet pollingSensibleFtTimer = 0\nexport async function pollingMvcBalance(){\n    clearInterval(pollingMvcTimer)\n    const fn = async () => {\n        const account = getGlobalState('account')\n        const key = getGlobalState('key')\n        if (!account || !key) {\n            return\n        }\n        try {\n            const balance = await getAddressMvcBalance(account.network, key.address)\n            setGlobalState('mvcBalance', {balance})\n        } catch (err) {\n            console.log('getAddressMvcBalance err', account.network, key.address, err)\n        }\n    }\n    await fn()\n    pollingMvcTimer = window.setInterval(fn, 5000)\n}\nexport async function pollingSensibleFtBalance() {\n    clearInterval(pollingSensibleFtTimer)\n    const fn = async () => {\n        const account = getGlobalState('account')\n        const key = getGlobalState('key')\n        if (!account || !key) {\n            return\n        }\n        try {\n            const sensibleFtList = await getAddressSensibleFtList(account.network, key.address)\n            const valid_sensibleFtList = sensibleFtList.filter(item => isSupportToken(item.codehash));\n            setGlobalState('sensibleFtList', valid_sensibleFtList);\n        } catch (err) {\n            console.log('getAddressSensibleFtList err', account.network, key.address, err)\n        }\n    }\n    await fn()\n    pollingSensibleFtTimer = window.setInterval(fn, 5000)\n}\n\nexport async function saveAccount(account: Account | null) {\n    saveAccountStorage(account)\n    if (account) {\n        const key = generateKeysFromEmailPassword(account.email, account.password, account.network)\n        setGlobalState('account', account)\n        setGlobalState('key', key)\n        await pollingSensibleFtBalance()\n        pollingMvcBalance()\n    } else {\n        setGlobalState(\"account\", null)\n        setGlobalState('key', null)\n    }\n}\n\nexport function recoverAccountFromStorage() {\n    const account = getAccountStorage()\n    saveAccount(account)\n}\n\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))\n\n// iframe action\nexport async function runIframeTask() {\n    if (window === window.top) {\n        return\n    }\n    const hashdata = JSON.parse(decodeURIComponent(window.location.hash.substr(1)))\n    const postMsg = createPostMsg(window.top, '*')\n    const id = hashdata.id\n\n    let preAccount: Account | null = null\n    let preMvcBalance: BalanceMvc | null = null\n    let preSensibleFtBalance: SensibleFt[] = []\n    let accountKey: Key | null = null\n    // let lastMvcBalance: \n\n    postMsg.emit(id, {\n        type: 'ready'\n    })\n\n    const isMvcBalanceEqual = (b1: BalanceMvc | null, b2: BalanceMvc | null) => {\n        if (!b1 && !b2) {\n            return true\n        }\n        return b1?.balance === b2?.balance\n    }\n    const isSensibleFtBalanceEqual = (b1: SensibleFt[], b2: SensibleFt[]) => {\n        if (b1.length !== b2.length) {\n            return false\n        }\n        b1.sort((item1, item2) => item1.genesis.localeCompare(item2.genesis))\n        b2.sort((item1, item2) => item1.genesis.localeCompare(item2.genesis))\n\n        for (let i = 0; i < b1.length; i++) {\n            const item1 = b1[i]\n            const item2 = b2[i]\n            if (item1.genesis !== item2.genesis) {\n                return false\n            }\n            if (item1.balance !== item2.balance) {\n                return false\n            }\n        }                \n        return true\n    }\n    const isAccountEqual = (b1: Account | null, b2: Account | null) => {\n        return (\n            b1?.email === b2?.email &&\n            b1?.network === b2?.network &&\n            b1?.password === b2?.password\n        )\n    }\n    const requestLatestData = async () => {\n        const latestAccount = getAccountStorage()\n        if (!(isAccountEqual(latestAccount, preAccount))) {\n            postMsg.emit(id, {\n                type: 'account',\n                data: latestAccount\n            })\n        }\n        preAccount = latestAccount;\n        if (preAccount) {\n            // get balance\n            accountKey = generateKeysFromEmailPassword(preAccount.email, preAccount.password, preAccount.network)\n            try {\n                const latestBalance = await getAddressMvcBalanceByUtxo(preAccount.network, accountKey.address)\n                const equal = isMvcBalanceEqual(preMvcBalance, {balance: latestBalance})\n                preMvcBalance = {balance: latestBalance}\n                if (!equal) {\n                    postMsg.emit(id, {\n                        type: 'mvcBalance', \n                        data: preMvcBalance,\n                    })\n                }\n            } catch (err) {}\n            try {\n                const latestBalance = await getAddressSensibleFtList(preAccount.network, accountKey.address)\n                const equal = isSensibleFtBalanceEqual(preSensibleFtBalance, latestBalance)\n                preSensibleFtBalance = latestBalance\n                if (!equal) {\n                    postMsg.emit(id, {\n                        type: 'sensibleFtBalance',\n                        data: preSensibleFtBalance\n                    })\n                }\n            } catch (err) {}\n            return true\n        } else {\n            return false\n        }\n    }\n\n    const handleRequest = (method: string, fn: Function) => {\n        postMsg.on(id, async function (_: any, eventData: any) {\n            const {type, data} = eventData\n            if (type === 'request' && data?.method === method) {\n                const requestId = data.requestId\n                try {\n                    const res = await fn(data.params)\n                    postMsg.emit(id, {\n                        type: 'response',\n                        data: {\n                            requestId,\n                            method,\n                            response: res,\n                        }\n                    })\n                } catch (err: any) {\n                    postMsg.emit(id, {\n                        type: 'response',\n                        data: {\n                            requestId,\n                            method,\n                            error: err.toString()\n                        }\n                    })\n                }\n            }\n        })\n    }\n\n    handleRequest('getAccount', async () => {\n        await requestLatestData()\n        if (!preAccount) {\n            return null\n        }\n        return {\n            name: preAccount.email,\n            email: preAccount.email,\n            network: preAccount.network,\n        }\n    });\n    handleRequest('getMvcBalance', async () => {\n        await requestLatestData()\n        return preMvcBalance\n    })\n    handleRequest('getSensibleFtBalance', async () => {\n        await requestLatestData()\n        return preSensibleFtBalance\n    })\n    handleRequest('getAddress', async () => {\n        await requestLatestData()\n        if (!accountKey) {\n            return null\n        }\n        return accountKey.address\n    })\n    handleRequest('signTx', async (options: any) => {\n        // 参数 (address + sighash)\n        // sighash: tx, sigtype, inputIndex, input.output.script, input.output,satoshisBN\n\n        // mvc-scrypt: signTx(tx, privateKey, lockingScriptASM: string, inputAmount: number, inputIndex: number, sighashType = DEFAULT_SIGHASH_TYPE, flags=DEFAULT_FLAGS): Signature.toTxFormat()\n\n        // mvc: mvc.Transaction.sighash.sign(tx: Transaction, privateKey: PrivateKey, sighashType: number, inputIndex: string, subscript: Script, satoshisBN: BN): Signature\n\n        // sCrypt params: tx(Transaciton object), inputIndex(number), sigHashType(SigType), onlySig?(boolean) 成功返回 unlockingScript 或者 Signature string\n\n        // options: {txHex, scriptHex, inputIndex, privateKey, publicKey, address, satoshis}\n\n        const {address} = options\n        if (!accountKey) {\n            throw new Error('not_login')\n        }\n        if (address !== accountKey.address) {\n            throw new Error('not_my_address')\n        }\n        return signAnyTx({\n            ...options,\n            privateKey: new mvc.PrivateKey(accountKey.privateKey, preAccount?.network ),\n            publicKey: new mvc.PublicKey(accountKey.publicKey, preAccount?.network)\n        })\n    })\n    handleRequest('logout', async () => {\n        saveAccountStorage(null)\n    })\n    handleRequest('ping', () => {\n        return null;\n    })\n\n    for (;;) {\n        const signed = await requestLatestData()\n        await sleep(signed ? 3000 : 500)\n    }\n\n}","import { useRef, useEffect } from \"react\";\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    let id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport function useOnceCall(cb, condition = true) {\n  const isCalledRef = useRef(false);\n  useEffect(() => {\n    if (condition && !isCalledRef.current) {\n      isCalledRef.current = true;\n      cb();\n    }\n  }, [cb, condition]);\n}\n","import {\n  Button,\n  Popover,\n  Card,\n  Form,\n  Input,\n  Select,\n  List,\n  Row,\n  Col,\n  message,\n  InputNumber,\n  Space,\n  Modal,\n} from \"antd\";\nimport {\n  UserOutlined,\n  LockOutlined,\n  MinusOutlined,\n  PlusOutlined,\n  LeftOutlined,\n} from \"@ant-design/icons\";\nimport { useState, useEffect } from \"react\";\nimport * as QRCode from \"qrcode.react\";\nimport { mvc } from \"mvc-scrypt\";\nimport {\n  getWocAddressUrl,\n  formatValue,\n  isValidAddress,\n  transferMvc,\n  transferSensibleFt,\n  getWocTransactionUrl,\n  getSensibleFtHistoryUrl,\n  parseTransaction,\n  broadcastSensibleQeury,\n} from \"./lib\";\nimport * as createPostMsg from \"post-msg\";\nimport { useGlobalState } from \"./state/state\";\nimport * as actions from \"./state/action\";\nimport { useOnceCall } from \"./hooks\";\nimport \"./App.css\";\nimport * as util from \"./lib/util\";\nimport * as Sentry from \"@sentry/react\";\nimport axios from \"axios\";\n\n//const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst { Option } = Select;\n\nfunction Header() {\n  const [account] = useGlobalState(\"account\");\n  const [key] = useGlobalState(\"key\");\n  const [decodeModalVisible, setDecodeModalVisible] = useState(false);\n  const [rawtx, setRawtx] = useState(\"\");\n  const [network, setNetwork] = useState(\"\");\n  const [resultModalVisible, setResultModalVisible] = useState(false);\n\n  const handleLogout = () => {\n    actions.saveAccount(null);\n  };\n  const handleHistory = () => {\n    let url = getWocAddressUrl(account.network, key.address);\n    window.open(url);\n  };\n  const handleSourceCode = () => {\n    window.open(\"https://github.com/mvc-swap/web-wallet\");\n  };\n\n  const decodeTx = () => {\n    const res = parseTransaction(network, rawtx);\n    console.log(\"decodeTx res\", res);\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"logo\">Web Wallet</div>\n      {account && (\n        <Popover\n          title=\"\"\n          content={\n            <>\n              <Button type=\"link\" onClick={handleLogout}>\n                Logout\n              </Button>\n              <br />\n              <Button type=\"link\" onClick={handleHistory}>\n                History\n              </Button>\n              <br />\n              <Button type=\"link\" onClick={handleSourceCode}>\n                Source Code\n              </Button>\n              <br />\n              <Button type=\"link\" onClick={() => setDecodeModalVisible(true)}>\n                decode rawtx\n              </Button>\n            </>\n          }\n        >\n          <Button type=\"link\">{account.email}</Button>\n        </Popover>\n      )}\n      <Modal\n        visible={decodeModalVisible}\n        onCancel={() => setDecodeModalVisible(false)}\n      >\n        <Input.TextArea\n          rows={4}\n          value={rawtx}\n          onChange={(e) => setRawtx(e.target.value)}\n        ></Input.TextArea>\n        <Select\n          style={{ width: 180 }}\n          placeholder=\"Select network\"\n          value={network}\n          onChange={(value) => setNetwork(value)}\n        >\n          <Option value=\"mainnet\">mainnet</Option>\n          <Option value=\"testnet\">testnet</Option>\n        </Select>\n        <Button type=\"primary\" onClick={decodeTx}>\n          decode\n        </Button>\n      </Modal>\n      <Modal\n        visible={resultModalVisible}\n        onCancel={() => setResultModalVisible(false)}\n      ></Modal>\n    </div>\n  );\n}\n\nfunction LoginPanel() {\n  const [account] = useGlobalState(\"account\");\n  const [form] = Form.useForm();\n\n  const handleOnFinish = () => {\n    Modal.confirm({\n      title: \"Attention\",\n      content: (\n        <div>\n          The private key of the web wallet is calculated in real-time through the user's email address and password, and will not be uploaded to the server or stored locally (see&nbsp; \n          <a\n            href=\"https://github.com/mvc-swap/web-wallet\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            github\n          </a>\n          &nbsp;for the code). It is only for the convenience of user testing and is not suitable for depositing a large number of funds. It is recommended that users keep the email + password combination properly to prevent the loss of funds or transfer the remaining funds after use. Loss of mailbox + password combination (forgotten, stolen, etc.) will lead to asset loss.\n        </div>\n      ),\n      onOk: () => {\n        const account = form.getFieldsValue();\n        actions.saveAccount(account);\n      },\n    });\n  };\n  if (account) {\n    return null;\n  }\n\n  return (\n    <Card className=\"card\" title=\"Login\" bordered={false}>\n      <Form form={form} layout=\"vertical\" onFinish={handleOnFinish}>\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              type: \"email\",\n              required: true,\n              message: \"Please input a valid Email!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Email\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[\n            { required: true, message: \"Please input your Password!\" },\n            {\n              min: 6,\n              message: \"Password at least 6 chars\",\n              transform: (value) => value && value.trim(),\n            },\n          ]}\n        >\n          <Input.Password\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            type=\"password\"\n            visibilityToggle={true}\n            placeholder=\"Password\"\n          />\n        </Form.Item>\n        <Form.Item name=\"network\" label=\"Network\" rules={[{ required: true }]}>\n          <Select placeholder=\"Select network\">\n            <Option value=\"mainnet\">mainnet</Option>\n            <Option value=\"testnet\">testnet</Option>\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          Note: The private key of the web wallet is calculated in real time through the user's email address and password (no registration required), and the same private key can be calculated every time you enter the same email address and password to log in. The private key will not be uploaded to the server, nor will it Saved locally, it is only for the convenience of users for testing, and is not suitable for storing large amounts of funds. It is recommended that users keep the email + password combination properly to prevent loss of funds. \n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            Log in\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nfunction AccountInfoPanel({ onWithDraw, onTransfer }) {\n  const [key] = useGlobalState(\"key\");\n  const [account] = useGlobalState(\"account\");\n  const [mvcBalance] = useGlobalState(\"mvcBalance\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n\n  if (!key || !account) {\n    return null;\n  }\n  const handleHistory = () => {\n    let url = getWocAddressUrl(account.network, key.address);\n    window.open(url);\n  };\n  const handleTransfer = (genesis) => {\n    if (!genesis) {\n      return onTransfer(\"\");\n    }\n    // if (!satotxConfigMap.has(genesis)) {\n    //   return message.error(\"rabin api not set or found\");\n    // }\n    return onTransfer(genesis);\n  };\n  return [\n    <Card\n      className=\"card\"\n      title=\"Account Info\"\n      bordered={false}\n      actions={\n        <>\n          <Button type=\"link\" onClick={handleHistory}>\n            history\n          </Button>\n          ,\n          <Button type=\"link\" onClick={onWithDraw}>\n            withdraw\n          </Button>\n          ,\n        </>\n      }\n    >\n      <Form layout=\"vertical\">\n        <Form.Item label={`${account.network} address`}>\n          <Input value={key.address} />\n          <div style={{ margin: 20 }}>\n            <QRCode value={key.address} />\n          </div>\n        </Form.Item>\n        <Form.Item label=\"privateKey\">\n          <Input.Password visibilityToggle={true} value={key.privateKey} />\n        </Form.Item>\n      </Form>\n    </Card>,\n    <Card className=\"card\" title=\"Asset\" bordered={false}>\n      <Form layout=\"vertical\">\n        {mvcBalance && (\n          <Form.Item label=\"SPACE balance\">\n            <Row justify=\"space-between\">\n              <Col span={16}>\n                <div>{formatValue(mvcBalance.balance, 8)}</div>\n              </Col>\n              <Col span={7}>\n                <Button type=\"link\" onClick={() => handleTransfer(\"\")}>\n                  Transfer SPACE\n                </Button>\n              </Col>\n            </Row>\n          </Form.Item>\n        )}\n        {sensibleFtList.length > 0 && (\n          <Form.Item label=\"Fungible Token\">\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={sensibleFtList}\n              renderItem={(item) => {\n                return (\n                  <List.Item\n                    key={item.genesis}\n                    actions={\n                      <>\n                        <Popover\n                          placement=\"topRight\"\n                          content={\n                            <>\n                              <div>codehash: {item.codehash}</div>,\n                              <div>genesis: {item.genesis}</div>,\n                            </>\n                          }\n                        >\n                          <a\n                            key=\"list-loadmore-more\"\n                            href={getSensibleFtHistoryUrl(\n                              account.network,\n                              key.address,\n                              item.genesis,\n                              item.codehash\n                            )}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                          >\n                            more info\n                          </a>\n                        </Popover>\n                      </>\n                    }\n                  >\n                    <List.Item.Meta\n                      title={item.tokenSymbol}\n                      description={item.tokenName}\n                    />\n                    <Row>\n                      <Col>\n                        <div\n                          style={{\n                            height: \"100%\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          Balance:{\" \"}\n                          {formatValue(item.balance, item.tokenDecimal)}\n                        </div>\n                      </Col>\n                      <Col>\n                        <Button\n                          type=\"link\"\n                          onClick={() => handleTransfer(item.genesis)}\n                        >\n                          Go Transfer\n                        </Button>\n                      </Col>\n                    </Row>\n                  </List.Item>\n                );\n              }}\n            ></List>\n          </Form.Item>\n        )}\n      </Form>\n    </Card>,\n  ];\n}\n\nfunction getRabinPubKeys(url) {\n  return axios.get(url);\n}\n\nasync function getRabins(rabinApis = []) {\n  let promises = [],\n    rabins = [];\n  rabinApis.forEach((rabinApi) => {\n    promises.push(getRabinPubKeys(rabinApi));\n  });\n  return new Promise((resolve) => {\n    axios.all(promises).then((res) => {\n      // console.log(res);\n      res.forEach((item, index) => {\n        rabins.push({\n          satotxApiPrefix: rabinApis[index],\n          satotxPubKey: item.data.data.pubKey,\n        });\n      });\n\n      resolve(rabins);\n    });\n  });\n}\n\nfunction TransferAllPanel({ initDatas = [], onCancel, onTransferCallback }) {\n  const [key] = useGlobalState(\"key\");\n  const [mvcBalance] = useGlobalState(\"mvcBalance\");\n  const [account] = useGlobalState(\"account\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  useOnceCall(() => {\n    const values = {};\n    initDatas.forEach((data, index) => {\n      const isMvc = !data.genesis;\n      const token = sensibleFtList.find(\n        (item) => item.genesis === data.genesis\n      );\n      const decimal = isMvc ? 8 : token.tokenDecimal;\n      values[`receiverList${index}`] = data.receivers.map((item) => {\n        return {\n          address: item.address,\n          amount: util.div(item.amount, util.getDecimalString(decimal)),\n        };\n      });\n    });\n    form.setFieldsValue(values);\n  }, key && mvcBalance);\n\n  if (!key) {\n    return null;\n  }\n  if (!mvcBalance) {\n    return null;\n  }\n\n  const handleSubmit = async () => {\n    const receiverLists = form.getFieldsValue();\n\n    const broadcastMvc = async ({ formatReceiverList, noBroadcast }) => {\n      setLoading(true);\n      let transferRes;\n      let txid = \"\";\n      try {\n        if (noBroadcast === true) {\n          const allUtxos = true;\n          const tx = await await transferMvc(\n            account.network,\n            key.privateKey,\n            formatReceiverList,\n            noBroadcast,\n            allUtxos\n          );\n          return tx;\n        }\n        const res = await await transferMvc(\n          account.network,\n          key.privateKey,\n          formatReceiverList\n        );\n        transferRes = res;\n        txid = res.txid;\n      } catch (err) {\n        const msg = \"broadcast error: \" + err.toString();\n        Sentry.captureException(err);\n        Sentry.captureMessage(`mvcTransferFail_${key.address}`);\n        onTransferCallback({\n          error: msg,\n        });\n        console.log(\"broadcast mvc error \");\n        console.error(err);\n        message.error(err.toString());\n      }\n      Sentry.captureMessage(`mvcTransferSuccess_${key.address}_${txid}`);\n      return transferRes;\n    };\n\n    const broadcastSensibleFt = async ({\n      formatReceiverList,\n      token,\n      decimal,\n      genesis,\n      rabinApis,\n      utxos,\n      noBroadcast,\n    }) => {\n      setLoading(true);\n      let transferRes;\n      try {\n        const rabins = await getRabins(rabinApis);\n        const res = await transferSensibleFt(\n          account.network,\n          // signers,\n          rabins,\n          key.privateKey,\n          formatReceiverList,\n          token.codehash,\n          token.genesis,\n          utxos,\n          noBroadcast || false\n        );\n        transferRes = res;\n      } catch (err) {\n        Sentry.captureException(err);\n        Sentry.captureMessage(\n          `ftTransferFail_${key.address}_${token.genesis}_${token.genesis}`\n        );\n        onTransferCallback({\n          error: \"broadcast sensible ft error, \" + err.toString(),\n        });\n        console.log(\"broadcast sensible ft error \");\n        console.error(err);\n        message.error(err.toString());\n      }\n      return transferRes;\n    };\n\n    const broadcastMvcAndToken = async () => {\n      const txs = [];\n      const transferRes = [];\n      let utxos = [];\n      // mvc transaction must be the first one\n      for (let i = 0; i < initDatas.length; i++) {\n        const data = initDatas[i];\n        const isMvc = !data.genesis;\n        const token = sensibleFtList.find(\n          (item) => item.genesis === data.genesis\n        );\n        const decimal = isMvc ? 8 : token.tokenDecimal;\n        const balance = isMvc ? mvcBalance.balance : token.balance;\n        const rabinApis = data.rabinApis;\n        const totalOutputValueFloatDuck = receiverLists[\n          `receiverList${i}`\n        ].reduce((prev, cur) => util.plus(prev, cur.amount), 0);\n\n        const totalOutputValue = util.multi(\n          totalOutputValueFloatDuck,\n          util.getDecimalString(decimal)\n        );\n        if (util.lessThan(balance, totalOutputValue)) {\n          const msg = \"Insufficient ft balance\";\n          onTransferCallback({\n            error: msg,\n          });\n          return message.error(msg);\n        }\n        const formatReceiverList = data.receivers.map((item) => {\n          return {\n            address: item.address,\n            // amount: util.multi(item.amount, util.getDecimalString(decimal)),\n            amount: item.amount,\n          };\n        });\n        if (isMvc) {\n          const tx = await broadcastMvc({\n            formatReceiverList,\n            noBroadcast: true,\n          });\n          const outputIndex = tx.outputs.length - 1;\n          //TODO: check res outputs\n          if (outputIndex !== 1) {\n            const msg = \"Insufficient ft balance\";\n            onTransferCallback({\n              error: msg,\n            });\n            return message.error(msg);\n          }\n          const output = tx.outputs[outputIndex];\n          txs.push({\n            tx: tx,\n            isMvc: true,\n            noBroadcast: !!data.noBroadcast,\n          });\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new mvc.PrivateKey(\n              key.privateKey,\n              account.network\n            ).toAddress(account.network),\n          });\n        } else {\n          const { routeCheckTx, tx } = await broadcastSensibleFt({\n            formatReceiverList,\n            token,\n            decimal,\n            genesis: data.genesis,\n            rabinApis,\n            utxos,\n            noBroadcast: true,\n          });\n          txs.push({\n            tx,\n            routeCheckTx,\n            isMvc: false,\n            noBroadcast: !!data.noBroadcast,\n          });\n          const outputIndex = tx.outputs.length - 1;\n          const output = tx.outputs[outputIndex];\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new mvc.PrivateKey(\n              key.privateKey,\n              account.network\n            ).toAddress(account.network),\n          });\n        }\n      }\n\n      for (const txInfo of txs) {\n        if (!txInfo.noBroadcast) {\n          if (txInfo.routeCheckTx) {\n            await broadcastSensibleQeury(\n              account.network,\n              txInfo.routeCheckTx.serialize(true)\n            );\n          }\n          if (txInfo.tx) {\n            await broadcastSensibleQeury(\n              account.network,\n              txInfo.tx.serialize(true)\n            );\n          }\n        }\n\n        var resItem = {\n          txid: txInfo.tx.hash,\n          outputs: parseTransaction(account.network, txInfo.tx.serialize(true))\n            .outputs,\n          fee: txInfo.tx.getFee(),\n          isMvc: txInfo.isMvc,\n          txHex: txInfo.tx.serialize(true),\n        };\n        if (!resItem.isMvc) {\n          resItem.routeCheckTxid = txInfo.routeCheckTx.hash;\n          resItem.routeCheckTxHex = txInfo.routeCheckTx.serialize(true);\n          resItem.routeCheckOutputs = parseTransaction(\n            account.network,\n            txInfo.routeCheckTx.serialize(true)\n          ).outputs;\n        }\n\n        transferRes.push(resItem);\n      }\n\n      setLoading(false);\n      onTransferCallback({\n        response: {\n          ...transferRes,\n        },\n      });\n    };\n\n    const buildMvcAndTokenTx = async () => {\n      const txs = {};\n      let utxos = [];\n      // mvc transaction must be the first one\n      for (let i = 0; i < initDatas.length; i++) {\n        const data = initDatas[i];\n        const isMvc = !data.genesis;\n        const token = sensibleFtList.find(\n          (item) => item.genesis === data.genesis\n        );\n        const decimal = isMvc ? 8 : token.tokenDecimal;\n        const balance = isMvc ? mvcBalance.balance : token.balance;\n        const rabinApis = data.rabinApis;\n        const totalOutputValueFloatDuck = receiverLists[\n          `receiverList${i}`\n        ].reduce((prev, cur) => util.plus(prev, cur.amount), 0);\n\n        const totalOutputValue = util.multi(\n          totalOutputValueFloatDuck,\n          util.getDecimalString(decimal)\n        );\n        if (util.lessThan(balance, totalOutputValue)) {\n          const msg = \"Insufficient ft balance\";\n          onTransferCallback({\n            error: msg,\n          });\n          return message.error(msg);\n        }\n        const formatReceiverList = data.receivers.map((item) => {\n          return {\n            address: item.address,\n            // amount: util.multi(item.amount, util.getDecimalString(decimal)),\n            amount: item.amount,\n          };\n        });\n        if (isMvc) {\n          const tx = await broadcastMvc({\n            formatReceiverList,\n            noBroadcast: true,\n          });\n          const outputIndex = tx.outputs.length - 1;\n          //TODO: check res outputs\n          if (outputIndex !== 1) {\n            const msg = \"Insufficient ft balance\";\n            onTransferCallback({\n              error: msg,\n            });\n            return message.error(msg);\n          }\n          const output = tx.outputs[outputIndex];\n          txs.mvcRawTx = tx.toString();\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new mvc.PrivateKey(\n              key.privateKey,\n              account.network\n            ).toAddress(account.network),\n          });\n        } else {\n          const { amountCheckTx, tx } = await broadcastSensibleFt({\n            formatReceiverList,\n            token,\n            decimal,\n            genesis: data.genesis,\n            rabinApis,\n            utxos,\n            noBroadcast: true,\n          });\n          txs.amountCheckRawTx = amountCheckTx.toString();\n          txs.tokenRawTx = tx.toString();\n          const outputIndex = tx.outputs.length - 1;\n          const output = tx.outputs[outputIndex];\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new mvc.PrivateKey(\n              key.privateKey,\n              account.network\n            ).toAddress(account.network),\n          });\n        }\n      }\n\n      setLoading(false);\n      onTransferCallback({\n        response: txs,\n      });\n    };\n\n    Modal.confirm({\n      title: \"Confirm the transaction\",\n      onOk: () => {\n        //broadcastAll();\n        broadcastMvcAndToken();\n      },\n    });\n  };\n  const handleBack = () => {\n    onCancel();\n  };\n  return (\n    <Card\n      className=\"card\"\n      title={\n        <div style={{ cursor: \"pointer\" }} onClick={handleBack}>\n          <LeftOutlined />\n          Transfer\n        </div>\n      }\n      loading={loading}\n      bordered={false}\n    >\n      <Form form={form} layout=\"vertical\" onFinish={handleSubmit}>\n        {initDatas.map((data, index) => {\n          const isMvc = !data.genesis;\n          const token = sensibleFtList.find(\n            (item) => item.genesis === data.genesis\n          );\n\n          if (!isMvc && !token) {\n            return null;\n          }\n          const tokenSymbol = isMvc ? \"SPACE\" : token.tokenSymbol;\n          const decimal = isMvc ? 8 : token.tokenDecimal;\n          const balance = isMvc ? mvcBalance.balance : token.balance;\n          const formatBalance = formatValue(balance, decimal);\n          const canEdit = !(data.receivers.length > 0);\n          return (\n            <div key={index}>\n              <div className=\"transfer-line\">\n                {isMvc ? `Coin: ${tokenSymbol}` : `Token: ${tokenSymbol}`}\n              </div>\n              {!isMvc && (\n                <div className=\"transfer-line\">Genesis: {token.genesis}</div>\n              )}\n              {!isMvc && (\n                <div className=\"transfer-line\">Codehash: {token.codehash}</div>\n              )}\n              <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n                <Col span={14}>\n                  <div style={{ fontWeight: 700 }}>Input</div>\n                </Col>\n              </Row>\n              <div className=\"transfer-line\">{`Balance: ${formatBalance}`}</div>\n              <div className=\"transfer-line\">{`From Address: ${key.address}`}</div>\n              <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n                <Col span={14}>\n                  <div style={{ fontWeight: 700 }}>Output</div>\n                </Col>\n              </Row>\n              <Form.List name={`receiverList${index}`}>\n                {(fields, { add, remove }) => (\n                  <>\n                    {fields.map((key, name, fieldKey, ...restField) => {\n                      return (\n                        <Space\n                          key={key.fieldKey}\n                          style={{ display: \"flex\", marginBottom: 8 }}\n                          align=\"baseline\"\n                        >\n                          <Form.Item\n                            {...restField}\n                            name={[name, \"address\"]}\n                            fieldKey={[fieldKey, \"address\"]}\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Please input the address\",\n                              },\n                              {\n                                message: \"invalid address\",\n                                validator: (_, value) =>\n                                  isValidAddress(account.network, value)\n                                    ? Promise.resolve()\n                                    : Promise.reject(),\n                              },\n                            ]}\n                          >\n                            <Input\n                              placeholder=\"Input the address\"\n                              disabled={!canEdit}\n                            />\n                          </Form.Item>\n                          <Form.Item\n                            {...restField}\n                            name={[name, \"amount\"]}\n                            fieldKey={[fieldKey, \"amount\"]}\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Please input amount\",\n                              },\n                            ]}\n                          >\n                            <InputNumber\n                              placeholder=\"Amount\"\n                              min={0}\n                              disabled={!canEdit}\n                            />\n                          </Form.Item>\n                          <Button\n                            disabled={!canEdit}\n                            size=\"small\"\n                            onClick={() => remove(name)}\n                            shape=\"circle\"\n                            icon={<MinusOutlined />}\n                          />\n                        </Space>\n                      );\n                    })}\n\n                    <Form.Item>\n                      <Button\n                        type=\"dashed\"\n                        onClick={() => add()}\n                        icon={<PlusOutlined />}\n                        disabled={!canEdit}\n                      >\n                        Add Output\n                      </Button>\n                    </Form.Item>\n                  </>\n                )}\n              </Form.List>\n            </div>\n          );\n        })}\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" block>\n            Transfer\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nfunction TransferPanel({\n  genesis = \"\",\n  initReceivers = [],\n  rabinApis = [],\n  onCancel,\n  onTransferCallback,\n  noBroadcast,\n}) {\n  const [key] = useGlobalState(\"key\");\n  const [mvcBalance] = useGlobalState(\"mvcBalance\");\n  const [account] = useGlobalState(\"account\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const canEdit = !(initReceivers.length > 0);\n\n  useOnceCall(() => {\n    const isMvc = genesis === \"\";\n    const token = sensibleFtList.find((item) => item.genesis === genesis);\n    const decimal = isMvc ? 8 : token.tokenDecimal;\n    console.log(\n      \"initReceivers\",\n      initReceivers,\n      initReceivers.map((item) => {\n        return {\n          address: item.address,\n          amount: util.multi(item.amount, util.getDecimalString(decimal)),\n        };\n      })\n    );\n    form.setFieldsValue({\n      receiverList: initReceivers.map((item) => {\n        return {\n          address: item.address,\n          amount: util.div(item.amount, util.getDecimalString(decimal)),\n        };\n      }),\n    });\n  }, key && mvcBalance && initReceivers.length);\n\n  if (!key) {\n    return null;\n  }\n  if (!mvcBalance) {\n    return null;\n  }\n  if (genesis && !sensibleFtList.length) {\n    return null;\n  }\n\n  const isMvc = genesis === \"\";\n  const token = sensibleFtList.find((item) => item.genesis === genesis);\n\n  if (!isMvc && !token) {\n    return null;\n  }\n  const tokenSymbol = isMvc ? \"SPACE\" : token.tokenSymbol;\n  const decimal = isMvc ? 8 : token.tokenDecimal;\n  const balance = isMvc ? mvcBalance.balance : token.balance;\n  const formatBalance = formatValue(balance, decimal);\n\n  const handleSubmit = async () => {\n    const { receiverList } = form.getFieldsValue();\n    const totalOutputValueFloatDuck = receiverList.reduce(\n      (prev, cur) => util.plus(prev, cur.amount),\n      0\n    );\n\n    const totalOutputValue = util.multi(\n      totalOutputValueFloatDuck,\n      util.getDecimalString(decimal)\n    );\n    if (util.lessThan(balance, totalOutputValue)) {\n      const msg = \"Insufficient ft balance\";\n      onTransferCallback({\n        error: msg,\n      });\n      return message.error(msg);\n    }\n    const formatReceiverList = receiverList.map((item) => {\n      return {\n        address: item.address,\n        amount: util.multi(item.amount, util.getDecimalString(decimal)),\n      };\n    });\n\n    const broadcastMvc = async () => {\n      setLoading(true);\n      let txid = \"\";\n      let transferRes;\n      try {\n        const res = await transferMvc(\n          account.network,\n          key.privateKey,\n          formatReceiverList,\n          noBroadcast\n        );\n        if (noBroadcast) {\n          transferRes = {\n            txid: res.hash,\n            txHex: res.serialize(true),\n            outputs: parseTransaction(account.network, res.serialize(true))\n              .outputs,\n            fee: res.getFee(),\n          };\n          txid = res.hash;\n        } else {\n          transferRes = res;\n          txid = res.txid;\n        }\n      } catch (err) {\n        const msg = \"broadcast error: \" + err.toString();\n        console.log(\n          util.safeJsonStringify({\n            type: \"mvcTransferFail\",\n            msg,\n            account: {\n              network: account.network,\n              address: key.address,\n            },\n            receivers: formatReceiverList,\n          })\n        );\n        Sentry.captureException(err);\n        Sentry.captureMessage(`mvcTransferFail_${key.address}`);\n        onTransferCallback({\n          error: msg,\n        });\n        console.log(\"broadcast mvc error \");\n        console.error(err);\n        message.error(err.toString());\n      }\n      setLoading(false);\n      if (txid) {\n        console.log(\n          util.safeJsonStringify({\n            type: \"mvcTransferSuccess\",\n            account: {\n              network: account.network,\n              address: key.address,\n            },\n            receivers: formatReceiverList,\n            txid,\n            ...transferRes,\n          })\n        );\n        Sentry.captureMessage(`mvcTransferSuccess_${key.address}_${txid}`);\n        onTransferCallback({\n          response: {\n            ...transferRes,\n          },\n        });\n        Modal.success({\n          title: \"Transaction broadcast success\",\n          content: (\n            <div>\n              txid:{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={getWocTransactionUrl(account.network, txid)}\n              >\n                {txid}\n              </a>\n            </div>\n          ),\n        });\n      }\n    };\n\n    const broadcastSensibleFt = async () => {\n      setLoading(true);\n      let txid = \"\";\n      let transferRes;\n      try {\n        const rabins = await getRabins(rabinApis);\n\n        const res = await transferSensibleFt(\n          account.network,\n          // signers,\n          rabins,\n          key.privateKey,\n          formatReceiverList,\n          token.codehash,\n          token.genesis,\n          false,\n          noBroadcast\n        );\n        if (noBroadcast) {\n          transferRes = {\n            txid: res.tx.hash,\n            outputs: parseTransaction(account.network, res.tx.serialize(true))\n              .outputs,\n            fee: res.tx.getFee(),\n            routeCheckTxid: res.routeCheckTx.hash,\n            txHex: res.tx.serialize(true),\n            routeCheckTxHex: res.routeCheckTx.serialize(true),\n            routeCheckOutputs: parseTransaction(\n              account.network,\n              res.routeCheckTx.serialize(true)\n            ).outputs,\n          };\n          txid = res.tx.hash;\n        } else {\n          transferRes = res;\n          txid = res.txid;\n        }\n      } catch (err) {\n        console.log(\"broadcast sensible ft error \");\n        console.error(err);\n        message.error(err.toString());\n        console.log(\n          util.safeJsonStringify({\n            type: \"ftTransferFail\",\n            msg: util.safeJsonStringify(err.message),\n            account: {\n              network: account.network,\n              address: key.address,\n            },\n            genesis: token.genesis,\n            codehash: token.codehash,\n            receivers: formatReceiverList,\n          })\n        );\n        Sentry.captureException(err);\n        Sentry.captureMessage(\n          `ftTransferFail_${key.address}_${token.genesis}_${token.genesis}`\n        );\n        onTransferCallback({\n          error: err.toString(),\n        });\n      }\n      setLoading(false);\n      if (txid) {\n        console.log(\n          util.safeJsonStringify({\n            type: \"ftTransferSuccess,\",\n            account: {\n              network: account.network,\n              address: key.address,\n              genesis: token.genesis,\n              codehash: token.codehash,\n            },\n            receivers: formatReceiverList,\n            txid,\n            ...transferRes,\n          })\n        );\n        Sentry.captureMessage(`ftTransferSuccess_${key.address}_${txid}`);\n        onTransferCallback({\n          response: {\n            ...transferRes,\n          },\n        });\n        Modal.success({\n          title: \"Transaction broadcast success\",\n          content: (\n            <div>\n              txid:{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={getWocTransactionUrl(account.network, txid)}\n              >\n                {txid}\n              </a>\n            </div>\n          ),\n        });\n      }\n    };\n\n    Modal.confirm({\n      title: \"Confirm the transaction\",\n      onOk: () => {\n        isMvc ? broadcastMvc() : broadcastSensibleFt();\n      },\n    });\n  };\n  const handleBack = () => {\n    onCancel();\n  };\n\n  return (\n    <Card\n      className=\"card\"\n      title={\n        <div style={{ cursor: \"pointer\" }} onClick={handleBack}>\n          <LeftOutlined />\n          Transfer\n        </div>\n      }\n      loading={loading}\n      bordered={false}\n    >\n      <Form form={form} layout=\"vertical\" onFinish={handleSubmit}>\n        <div className=\"transfer-line\">\n          {isMvc ? `Coin: ${tokenSymbol}` : `Token: ${tokenSymbol}`}\n        </div>\n        {!isMvc && (\n          <div className=\"transfer-line\">Genesis: {token.genesis}</div>\n        )}\n        {!isMvc && (\n          <div className=\"transfer-line\">Codehash: {token.codehash}</div>\n        )}\n        {!isMvc && (\n          <div className=\"transfer-line\">SensibleId: {token.sensibleId}</div>\n        )}\n        <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n          <Col span={14}>\n            <div style={{ fontWeight: 700 }}>Input</div>\n          </Col>\n        </Row>\n        <div className=\"transfer-line\">{`Balance: ${formatBalance}`}</div>\n        <div className=\"transfer-line\">{`From Address: ${key.address}`}</div>\n        <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n          <Col span={14}>\n            <div style={{ fontWeight: 700 }}>Output</div>\n          </Col>\n        </Row>\n        <Form.List name=\"receiverList\">\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map((key, name, fieldKey, ...restField) => {\n                return (\n                  <Space\n                    key={key.fieldKey}\n                    style={{ display: \"flex\", marginBottom: 8 }}\n                    align=\"baseline\"\n                  >\n                    <Form.Item\n                      {...restField}\n                      name={[name, \"address\"]}\n                      fieldKey={[fieldKey, \"address\"]}\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please input the address\",\n                        },\n                        {\n                          message: \"invalid address\",\n                          validator: (_, value) =>\n                            isValidAddress(account.network, value)\n                              ? Promise.resolve()\n                              : Promise.reject(),\n                        },\n                      ]}\n                    >\n                      <Input\n                        placeholder=\"Input the address\"\n                        disabled={!canEdit}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      {...restField}\n                      name={[name, \"amount\"]}\n                      fieldKey={[fieldKey, \"amount\"]}\n                      rules={[\n                        { required: true, message: \"Please input amount\" },\n                      ]}\n                    >\n                      <InputNumber\n                        placeholder=\"Amount\"\n                        min={0}\n                        disabled={!canEdit}\n                      />\n                    </Form.Item>\n                    <Button\n                      disabled={!canEdit}\n                      size=\"small\"\n                      onClick={() => remove(name)}\n                      shape=\"circle\"\n                      icon={<MinusOutlined />}\n                    />\n                  </Space>\n                );\n              })}\n\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => add()}\n                  icon={<PlusOutlined />}\n                  disabled={!canEdit}\n                >\n                  Add Output\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" block>\n            Transfer\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    actions.recoverAccountFromStorage();\n  }, []);\n\n  const [trasfering, setTransfering] = useState(false);\n  const [trasferSensibleFtGenesis, setTrasferSensibleFtGenesis] = useState(\"\");\n  const [account] = useGlobalState(\"account\");\n  const [key] = useGlobalState(\"key\");\n  const [mvcBalance] = useGlobalState(\"mvcBalance\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n  const [initReceivers, setInitReceivers] = useState([]);\n  const [initDatas, setInitDatas] = useState([]);\n  const [initRabins, setRabins] = useState([]);\n  const [initNoBroadcast, setInitNoBroadcast] = useState(false);\n\n  const handleTransfer = (genesis) => {\n    setTransfering(true);\n    genesis && setTrasferSensibleFtGenesis(genesis);\n  };\n  const handleCancelTransfer = () => {\n    setTransfering(false);\n    setTrasferSensibleFtGenesis(\"\");\n  };\n\n  const getHashData = () => {\n    if (!window.opener) {\n      return null;\n    }\n    const hash = window.location.hash.substr(1);\n    try {\n      const data = JSON.parse(decodeURIComponent(hash));\n      if (data.type === \"popup\") {\n        if (typeof data.data === \"object\") {\n          return data;\n        }\n      }\n    } catch (err) {}\n    return null;\n  };\n  const handlePopResponseCallback = (resObj) => {\n    const data = getHashData();\n    if (!data) {\n      return;\n    }\n    const postMsg = createPostMsg(window.opener, \"*\");\n    postMsg.emit(data.id, {\n      type: \"response\",\n      data: {\n        ...data.data.data,\n        ...resObj,\n      },\n    });\n  };\n\n  // todo 数值计算 使用 bignumber\n  // todo 此处接收 postMessage 消息，处理登录,transfer\n  const requestAccountCondition = key?.address && account?.network;\n  const transferMvcCondition =\n    requestAccountCondition &&\n    mvcBalance &&\n    util.greaterThanEqual(mvcBalance.balance, 0);\n  useOnceCall(() => {\n    const data = getHashData();\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"requestAccount\") {\n      return;\n    }\n    Modal.confirm({\n      title: \"Connect\",\n      content: (\n        <div>\n          Allow <b>{params.name}</b> to connect your web wallet\n        </div>\n      ),\n      onOk: () => {\n        handlePopResponseCallback({ response: true });\n      },\n      onCancel: () => {\n        handlePopResponseCallback({ error: \"user reject\" });\n      },\n    });\n  }, !!requestAccountCondition);\n  useOnceCall(() => {\n    const data = getHashData();\n    console.log(\"mvc hash data\", data);\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"transferMvc\") {\n      return;\n    }\n    // balance check\n    const outputTotal = params.receivers.reduce(\n      (prev, cur) => util.plus(prev, cur.amount),\n      0\n    );\n    if (util.greaterThan(outputTotal, mvcBalance.balance)) {\n      handlePopResponseCallback({ error: \"insufficient mvc balance\" });\n      return;\n    }\n    setTransfering(true);\n    setInitReceivers(params.receivers);\n    setInitNoBroadcast(params.noBroadcast);\n  }, !!transferMvcCondition);\n  useOnceCall(() => {\n    const data = getHashData();\n    console.log(\"hashdata\", data);\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"transferSensibleFt\") {\n      return;\n    }\n    // sensibleft balance check\n    const outputTotal = params.receivers.reduce(\n      (prev, cur) => util.plus(prev, cur.amount),\n      0\n    );\n    console.log(\"outputTotal\", outputTotal);\n    const ft = sensibleFtList.find((item) => item.genesis === params.genesis);\n    console.log(\"ft\", ft);\n    if (!ft) {\n      handlePopResponseCallback({ error: \"insufficient ft balance\" });\n      return;\n    }\n    if (util.greaterThan(outputTotal, ft.balance)) {\n      handlePopResponseCallback({ error: \"insufficient ft balance\" });\n      return;\n    }\n    setTransfering(true);\n    setTrasferSensibleFtGenesis(params.genesis);\n    setInitReceivers(params.receivers);\n    setRabins(params.rabinApis);\n    setInitNoBroadcast(params.noBroadcast);\n  }, !!transferMvcCondition);\n  useOnceCall(() => {\n    const data = getHashData();\n    console.log(\"mvc hash data\", data);\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"transferAll\") {\n      return;\n    }\n    // balance check\n    params.datas.forEach((item) => {\n      // balance check\n      const isMvc = !item.genesis;\n      const ft = sensibleFtList.find((v) => v.genesis === item.genesis);\n\n      const outputTotal = item.receivers.reduce(\n        (prev, cur) => util.plus(prev, cur.amount),\n        0\n      );\n      if (isMvc && util.greaterThan(outputTotal, mvcBalance.balance)) {\n        handlePopResponseCallback({ error: \"insufficient mvc balance\" });\n        return;\n      }\n      if (ft && util.greaterThan(outputTotal, ft.balance)) {\n        handlePopResponseCallback({ error: \"insufficient ft balance\" });\n        return;\n      }\n      setTransfering(true);\n      setInitDatas(params.datas);\n    });\n  }, !!transferMvcCondition);\n  useEffect(() => {\n    const obu = window.onbeforeunload;\n    window.onbeforeunload = function (event) {\n      handlePopResponseCallback({ error: \"use closed\" });\n      return obu && obu(event);\n    };\n  });\n  return (\n    <div className=\"App\" style={{ overflow: \"hidden\" }}>\n      <Header accountName=\"harry\" />\n      <LoginPanel />\n      {!trasfering && <AccountInfoPanel onTransfer={handleTransfer} />}\n      {trasfering &&\n        (!initDatas || initDatas.length < 1 ? (\n          <TransferPanel\n            genesis={trasferSensibleFtGenesis}\n            rabinApis={initRabins}\n            onCancel={handleCancelTransfer}\n            onTransferCallback={handlePopResponseCallback}\n            initReceivers={initReceivers}\n            noBroadcast={initNoBroadcast}\n          />\n        ) : (\n          <TransferAllPanel\n            onCancel={handleCancelTransfer}\n            onTransferCallback={handlePopResponseCallback}\n            initDatas={initDatas}\n          />\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as actions from \"./state/action\";\n\n(function () {\n  /*const originBroadcast = SensibleApi.prototype.broadcast;\n  SensibleApi.prototype.broadcast = async function (hex) {\n    const txid = new mvc.Transaction(hex).hash;\n    const txMsg = `txid: ${txid}; rawtx: ${hex}`;\n    console.log(\"meta-contract 广播\", txMsg);\n    try {\n      const res = await originBroadcast.call(this, hex);\n      return res;\n    } catch (err) {\n      console.log(\"meta-contract 广播错误\", txMsg);\n      const newError = new Error(\n        `${err.message} meta-contract 广播错误 ${txMsg}`\n      );\n      setTimeout(() => {\n        throw newError;\n      }, 0);\n      throw err;\n    }\n  };*/\n})();\n\nconst isIframe = window === window.top;\n\n/*Sentry.init({\n  dsn: \"https://d223c2a1d1bf44b6a657051ac9a99b16@o877284.ingest.sentry.io/5827823\",\n  integrations: [new Integrations.BrowserTracing()],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n});*/\n\nif (isIframe) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n} else {\n  actions.runIframeTask();\n}\n\n// delete account when page/iframe exit\n(function () {\n  const obu = window.onbeforeunload;\n  window.onbeforeunload = function (event) {\n    const isPopup = !!window.opener;\n    if (!isPopup) {\n      actions.saveAccount(null);\n    }\n    return obu && obu(event);\n  };\n})();\n\n// alert(window === window.top);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\nexport enum NetWork {\n  Testnet = 'testnet',\n  Mainnet = 'mainnet',\n  STN = 'STN'\n}\n\n"],"sourceRoot":""}