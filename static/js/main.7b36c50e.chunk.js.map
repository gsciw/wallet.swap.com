{"version":3,"sources":["lib/util.ts","lib/index.ts","state/state.ts","state/action.ts","hooks.js","App.js","reportWebVitals.js","index.js","web3/wallet.ts"],"names":["div","a","biga","BigNumber","i","toString","multi","multipliedBy","plus","minus","getDecimalString","decimalNum","pow","lessThan","b","lt","lessThanEqual","lte","greaterThan","gt","greaterThanEqual","gte","checkFeeRate","tx","minFeeRate","size","toBuffer","length","feeRate","getFee","msg","message","error","Error","safeJsonStringify","data","JSON","parse","stringify","key","value","SCAN_URL","SCAN_URL_TESTNET","getSensibleApiPrefix","network","test","NetWork","Mainnet","isSensibleSuccess","res","status","sleep","ms","Promise","resolve","setTimeout","formatValue","decimal","util","isValidAddress","address","mvc","Address","_","generateKeysFromEmailPassword","email","pass","Testnet","s","regchars","match","regupchars","bufferS","Buffer","from","crypto","Hash","sha256","tmp","hex","privateKey","PrivateKey","toAddress","publicKey","toPublicKey","getSensibleFtHistoryUrl","genesis","codehash","getWocAddressUrl","url","getWocTransactionUrl","txid","signAnyTx","options","txHex","scriptHex","inputIndex","satoshis","Transaction","script","Script","fromBuffer","sig","toHex","signTx","toASM","Number","getAddressSensibleFtList","pageSize","page","getAddressSensibleFtListByPage","list","console","log","apiPrefix","axios","get","map","item","codeHash","tokenName","name","tokenSymbol","symbol","tokenDecimal","balance","confirmedString","unconfirmedString","statusText","getAddressBsvUtxoList","txId","outputIndex","outIndex","getAddressBsvBalanceByUtxo","sum","utxoList","total","reduce","prev","cur","broadcastSensibleQeury","rawtx","apiPrefx","post","hash","mapBsvFeeError","err","getCustomSigners","findValue","customSatotxList","find","satotxList","selectNotNullSigners","signerList","signers","transferSensibleFt","senderWif","receivers","utxos","noBroadcast","customSigner","ft","SensibleFT","purse","feeb","transfer","routeCheckTx","txParseRes","parseTransaction","serialize","outputs","errMsg","isBsvAmountExceed","indexOf","isFtUtxoAmountExceed","mergeBsvUtxo","merge","Signature","sighashType","SIGHASH_ALL","SIGHASH_FORKID","unlockP2PKHInput","sigtype","prevTxId","inputs","signature","Sighash","sign","output","satoshisBN","setScript","buildPublicKeyHashIn","toDER","checkBsvReceiversSatisfied","satified","txAddressAmountMap","getKey","amount","forEach","rece","transferBsv","allUtxos","totalOutput","utxoValue","selectedUtxoList","feePerKb","dust","utxoResList","push","addInput","Input","PublicKeyHash","Output","buildPublicKeyHashOut","empty","to","change","clearOutputs","index","type","Sentry","fee","utxolist","parseTokenContractScript","scriptBuf","input","ftToken","ret","addr","tokenAmount","isFt","ftDetail","tokenAddress","window","defaultSatotx","satotxApiPrefix","satotxPubKey","initialState","account","bsvBalance","sensibleFtList","satotxConfigMap","Map","set","createGlobalState","useGlobalState","getGlobalState","setGlobalState","accountStorageKey","saveAccountStorage","str","localStorage","setItem","getAccountStorage","getItem","pollingBsvTimer","pollingSensibleFtTimer","pollingBsvBalance","clearInterval","fn","setInterval","pollingSensibleFtBalance","valid_sensibleFtList","filter","saveAccount","password","top","hashdata","decodeURIComponent","location","substr","postMsg","createPostMsg","id","preAccount","preBsvBalance","preSensibleFtBalance","accountKey","emit","isBsvBalanceEqual","b1","b2","isSensibleFtBalanceEqual","sort","item1","item2","localeCompare","isAccountEqual","requestLatestData","latestAccount","latestBalance","equal","handleRequest","method","on","eventData","requestId","params","response","PublicKey","signed","useOnceCall","cb","condition","isCalledRef","useRef","useEffect","current","Option","Select","Header","useState","decodeModalVisible","setDecodeModalVisible","setRawtx","setNetwork","resultModalVisible","setResultModalVisible","className","title","content","onClick","actions","open","visible","onCancel","TextArea","rows","onChange","e","target","style","width","placeholder","LoginPanel","Form","useForm","form","bordered","layout","onFinish","Modal","confirm","href","rel","onOk","getFieldsValue","Item","rules","required","prefix","UserOutlined","min","transform","trim","Password","LockOutlined","visibilityToggle","label","htmlType","AccountInfoPanel","onWithDraw","onTransfer","handleTransfer","margin","justify","span","itemLayout","dataSource","renderItem","placement","Meta","description","height","display","alignItems","getRabins","promises","rabins","rabinApis","rabinApi","all","then","pubKey","TransferAllPanel","initDatas","onTransferCallback","loading","setLoading","values","isBsv","token","setFieldsValue","handleSubmit","receiverLists","broadcastBsv","formatReceiverList","transferRes","broadcastSensibleFt","broadcastBsvAndToken","txs","totalOutputValueFloatDuck","totalOutputValue","wif","txInfo","resItem","routeCheckTxid","routeCheckTxHex","routeCheckOutputs","bsvRawTx","amountCheckTx","amountCheckRawTx","tokenRawTx","cursor","LeftOutlined","formatBalance","canEdit","fontWeight","List","fields","add","remove","fieldKey","restField","marginBottom","align","validator","reject","disabled","shape","icon","MinusOutlined","PlusOutlined","block","TransferPanel","initReceivers","receiverList","success","App","trasfering","setTransfering","trasferSensibleFtGenesis","setTrasferSensibleFtGenesis","setInitReceivers","setInitDatas","initRabins","setRabins","initNoBroadcast","setInitNoBroadcast","handleCancelTransfer","getHashData","opener","handlePopResponseCallback","resObj","requestAccountCondition","transferBsvCondition","outputTotal","datas","v","obu","onbeforeunload","event","overflow","accountName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isIframe","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b36c50e.chunk.js","sourcesContent":["import BigNumber from \"bignumber.js\";\nimport {message} from 'antd'\n\n// 最大是253，那么全部用 string 吧\ntype NumberDuck = number | string\n\nexport function div (a: NumberDuck, ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.div(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function multi(a: NumberDuck,  ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.multipliedBy(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function plus(a: NumberDuck,  ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.plus(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function minus(a: NumberDuck,  ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.minus(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function getDecimalString(decimalNum: number): string {\n    return new BigNumber(10).pow(decimalNum).toString()\n}\n\nexport function lessThan(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.lt(new BigNumber(b))\n}\n\nexport function lessThanEqual(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.lte(new BigNumber(b))\n}\n\nexport function greaterThan(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.gt(new BigNumber(b))\n}\n\nexport function greaterThanEqual(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.gte(new BigNumber(b))\n}\n\nexport function equal(a: NumberDuck, b: NumberDuck): boolean {\n    let biga = new BigNumber(a)\n    return biga.eq(new BigNumber(b))\n}\n\nexport function toString(a: NumberDuck): string {\n    return new BigNumber(a).toString()\n}\n\nexport function checkFeeRate(tx: any, minFeeRate?: number) {\n    minFeeRate = minFeeRate || 0.5\n    const size = tx.toBuffer().length\n    const feeRate = tx.getFee() / size;\n    if (feeRate < minFeeRate) {\n        const msg = `The fee rate should not be less than ${minFeeRate}, but in the end it is ${feeRate}`\n        message.error(msg)\n        throw new Error(msg)\n    }\n}\n\nexport function safeJsonStringify(data: any) {\n    return JSON.parse(JSON.stringify(data, (key, value) =>\n        typeof value === 'bigint'\n            ? value.toString()\n            : value // return everything else unchanged\n    ));\n}\n\n// 传过来 string/int -> 显示(float) -> bigint\n","import { mvc, toHex, signTx } from 'mvc-scrypt';\nimport { NetWork } from '../web3';\nimport {Key, SensibleFt, SensibleSatotx, TransferReceiver, BsvUtxo} from '../state/stateType'\nimport axios from 'axios'\nimport {SensibleFT} from 'meta-contract'\nimport * as util from './util'\nimport * as Sentry from \"@sentry/react\";\nimport customSatotxList from './customSatotx.json'\n\nconst SCAN_URL = 'https://mvcscan.com'\nconst SCAN_URL_TESTNET = 'https://mvcscan.com'\n\nfunction getSensibleApiPrefix(network: NetWork) {\n    const test = network === NetWork.Mainnet ? '' : '-testnet'\n    return `https://api-mvc${test}.metasv.com`\n}\nfunction isSensibleSuccess(res: any) {\n    return res.status === 200\n}\n\nfunction sleep(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport function formatValue(value: number, decimal: number) {\n    // const bigNum = mvc.crypto.BN.fromNumber(value)\n    // return bigNum.div(10**decimal).toString(10)\n    // return value / (10**decimal)\n    return util.div(value, util.getDecimalString(decimal))\n}\n\nexport function isValidAddress(network: NetWork, address: string) {\n    try {\n        new mvc.Address(address, network)\n        return true\n    } catch (_) {\n        return false\n    }\n}\n\nexport function generateKeysFromEmailPassword(email: string, pass: string, network: NetWork = NetWork.Testnet): Key {\n    let s: string = email\n    s += '|'+pass+'|';\n    s += s.length+'|!@'+((pass.length*7)+email.length)*7;\n    var regchars = (pass.match(/[a-z]+/g)) ? pass.match(/[a-z]+/g)!.length : 1;\n    var regupchars = (pass.match(/[A-Z]+/g)) ? pass.match(/[A-Z]+/g)!.length : 1;\n    var regnums = (pass.match(/[0-9]+/g)) ? pass.match(/[0-9]+/g)!.length : 1;\n    s += ((regnums+regchars)+regupchars)*pass.length+'3571';\n    s += (s+''+s);\n\n    let bufferS = Buffer.from(s)\n    bufferS = mvc.crypto.Hash.sha256(bufferS)\n\tfor(let i=0;i<=49;i++){\n        const tmp = Buffer.from(bufferS.toString('hex'))\n        bufferS = mvc.crypto.Hash.sha256(tmp)\n\t}\n    const hex = mvc.crypto.Hash.sha256(Buffer.from(bufferS.toString('hex'))).toString('hex')\n    \n    const privateKey = new mvc.PrivateKey(hex, network)\n    const address = privateKey.toAddress(network).toString()\n    \n    return {\n        address,\n        privateKey: privateKey.toString(),\n        publicKey: privateKey.toPublicKey().toString()\n    }\n}\n\nexport function getSensibleFtHistoryUrl(network: NetWork, address: string, genesis: string, codehash: string) {\n    // https://sensiblequery.com/#/ft/utxo/a1961d0c0ab39f1bd0f79c2f6ae27138cca0620c/d4266deb03b5fdb7c9af39fa71f86f4b1f6390422e9bcd1556399a3f0063965f00000000/1111111111111111111114oLvT2\n    const test = network === NetWork.Mainnet ? '' : '/test'\n    return `https://sensiblequery.com${test}/#/ft/utxo/${codehash}/${genesis}/${address}`\n}\n\nexport function getWocAddressUrl(network: NetWork, address: string) {\n    let url = ''\n    if (network === NetWork.Mainnet) {\n        url = SCAN_URL + '/address/'\n    } \n    if (network === NetWork.Testnet) {\n        url = SCAN_URL_TESTNET + '/address/'\n    }\n    if (!url) {\n        return url\n    }\n    url += address\n    return url\n}\n\nexport function getWocTransactionUrl(network: NetWork, txid: string) {\n    let url = ''\n    if (network === NetWork.Mainnet) {\n        url = SCAN_URL + '/tx/'\n    } \n    if (network === NetWork.Testnet) {\n        url = SCAN_URL_TESTNET + '/tx/'\n    }\n    if (!url) {\n        return url\n    }\n    url += txid\n    return url\n}\n\nexport async function signAnyTx(options: any) {\n    const {txHex, scriptHex, inputIndex, privateKey, publicKey, satoshis} = options\n    const tx = new mvc.Transaction(txHex)\n    const script = mvc.Script.fromBuffer(Buffer.from(scriptHex, 'hex'))\n    const sig = toHex(signTx(tx, privateKey , script.toASM(), Number(satoshis), inputIndex))\n    \n    return {\n        publicKey: publicKey.toString(),\n        sig,\n    }\n}\n\n// todo 分页获取\nexport async function getAddressSensibleFtList(network: NetWork, address: string): Promise<SensibleFt[]> {\n    // todo remove next line\n    let res: SensibleFt[] = []\n    const pageSize = 20\n    try {\n        for (let page = 1; ; page++) {\n            const list = await getAddressSensibleFtListByPage(network, address, page, pageSize)\n            res = [...res, ...list]\n            if (list.length < pageSize) {\n                break\n            }\n        }\n    } catch (err) {\n        console.log('getAddressSensibleFtList error')\n        console.error(err)\n    }\n    return res;\n}\n\nexport async function getAddressSensibleFtListByPage(network: NetWork, address: string, page: number, pageSize: number = 20): Promise<SensibleFt[]> {\n    const apiPrefix = getSensibleApiPrefix(network)\n\n    const res = await axios.get(`${apiPrefix}/contract/ft/address/${address}/balance`)\n    const success = isSensibleSuccess(res)\n\n    if (success) {\n        return (res.data || []).map((item: any) => {\n            return {\n                genesis: item.genesis,\n                codehash: item.codeHash,\n                tokenName: item.name,\n                tokenSymbol: item.symbol,\n                tokenDecimal: item.decimal,\n                balance: util.plus(item.confirmedString, item.unconfirmedString),\n            }\n        })\n    }\n    throw new Error(res.statusText)\n}\n\n// 获取 mvc utxo\nexport async function getAddressBsvUtxoList(network: NetWork, address: string, page: number, pageSize: number=16): Promise<BsvUtxo[]> {\n    const cursor = (page - 1) * pageSize\n    const apiPrefix = getSensibleApiPrefix(network)\n    const res = await axios.get(`${apiPrefix}/address/${address}/utxo`)\n    const success = isSensibleSuccess(res)\n    if (success) {\n        return (res.data || []).map((item: any) => {\n            return {\n                txId: item.txid, \n                outputIndex: item.outIndex,\n                satoshis: item.value,\n                address: address,\n            }\n        })\n    }\n\n    // const fakeUtxoList: BsvUtxo[] = [\n    //     {\n    //         txId: '6a18f5b859fb4c281affaf8f6245a2fe0813867d4b7d24948da18e099462619b',\n    //         outputIndex: 0,\n    //         satoshis: 98775,\n    //         address,\n    //     },\n    //     {\n    //         txId: 'de980facfe7b10a84bfa658130b2b7725565510f967534459d63e6c9717a08e2',\n    //         outputIndex: 0,\n    //         satoshis: 98679,\n    //         address,\n    //     },\n    //     {\n    //         txId: '8ace8ab3995de63af867d929561b3a48bb499ea8d6e64c2ecefba29c6213764f',\n    //         outputIndex: 4,\n    //         satoshis: 4939535,\n    //         address,\n    //     },\n    //     {\n    //         txId: '74bec534becb77f894bcacaf2386604642a1ea00e371838b1780f5235a12bb9d',\n    //         outputIndex: 2,\n    //         satoshis: 45033315,\n    //         address,\n    //     }\n    // ]\n    // if (page === 1) {\n    //     return fakeUtxoList\n    // }\n    // return []\n    \n    throw new Error(res.statusText)\n}\n\n// 获取bsv 余额, 这里加入了ft utxo的值，暂时不能用\nexport async function getAddressBsvBalance(network: NetWork, address: string): Promise<number | string> {\n    const apiPrefix = getSensibleApiPrefix(network)\n    const res = await axios.get(`${apiPrefix}/address/${address}/balance`)\n    const success = isSensibleSuccess(res)\n    if (success) {\n        return util.plus(res.data.confirmed, res.data.unconfirmed)\n    }\n    throw new Error(res.statusText)\n}\n\nexport async function getAddressBsvBalanceByUtxo(network: NetWork, address: string): Promise<string> {\n    let page = 1\n    const pageSize = 16\n    let sum: string = '0'\n    for (;;) {\n        const utxoList = await getAddressBsvUtxoList(network, address, page, pageSize)\n        const total = utxoList.reduce((prev: any, cur: any) => util.plus(prev, cur.satoshis), '0')\n        sum = util.plus(sum, total)\n        if (utxoList.length < pageSize) {\n            break\n        }\n        page++\n    }\n    console.log('balance', sum)\n    return sum\n}\n\n// 获取 sensible ft 余额\nexport async function getAddressSensibleFtBalance(network: NetWork, address: string, codehash: string, genesis: string): Promise<number> {\n    const apiPrefix = getSensibleApiPrefix(network)\n    const res = await axios.get(`${apiPrefix}/contract/ft/address/${address}/balance?codeHash=${codehash}&&genesis=${genesis}`)\n    const success = isSensibleSuccess(res)\n    if (success) {\n        return Number(util.plus(res.data[0].confirmedString, res.data[0].unconfirmedString))\n    }\n    throw new Error(res.statusText)\n}\n\n// 获取 sensible 余额 地址\nexport async function getSensibleAddressUrl(network: NetWork, address: string, codehash: string, genesis: string) {\n    const test = network === NetWork.Mainnet ? '' : '/test'\n    // https://sensiblequery.com/#/ft/utxo/ac939f3cf7aba022d09f05e5448f1e635c81dbb3/598d220eaecb68cf783cbc6cc6295d042897874f/1FJCX1QG7KyaHpx1U2iVe4xoAWNVB1Wd3L\n    return `https://sensiblequery.com${test}/#/ft/utxo/${codehash}/${genesis}/${address}`\n}\n\n\n// 广播交易\nexport async function broadcastSensibleQeury(network: NetWork, rawtx: string) {\n    const apiPrefx = getSensibleApiPrefix(network)\n    console.log('sensible 交易广播', network, rawtx)\n    const res = await axios.post(`${apiPrefx}/tx/broadcast`, {\n        hex: rawtx,\n    })\n    const success = isSensibleSuccess(res)\n    if (success) {\n        return new mvc.Transaction(rawtx).hash\n    }\n    throw new Error('broadcast failed')\n}\n\n\n// 发送 token 交易\nconst mapBsvFeeError = (err: Error) => {\n    if (err.message === \"Insufficient balance.\") {\n        // 将模糊的错误信息转换\n        return new Error('Low mvc balance to pay miners')\n    }\n    return err\n}\nconst getCustomSigners = (codehash: string, genesis: string):SensibleSatotx[] => {\n    const findValue = customSatotxList.find(item => item.codehash === codehash && item.genesis === genesis)\n    if (findValue) {\n        return findValue.satotxList\n    }\n    return []\n}\nconst selectNotNullSigners = (...signerList: SensibleSatotx[][]): SensibleSatotx[] =>  {\n    for (let signers of signerList) {\n        if (signers && signers.length > 0) {\n            return signers\n        }\n    }\n    return []\n}\nexport async function transferSensibleFt(network: NetWork, signers: SensibleSatotx[], senderWif: string, receivers: TransferReceiver[], codehash: string, genesis: string, utxos: any = false, noBroadcast: boolean = false){\n    \n    const customSigner = getCustomSigners(codehash, genesis)\n    signers = selectNotNullSigners(signers, customSigner)\n\n    console.log('signers', signers)\n    \n    const ft = new SensibleFT({\n        network: network as any,\n        purse: senderWif,\n        feeb: 1.0,\n    })\n    console.log('transferSensibleFt', receivers, network, codehash, genesis, signers)\n\n    try {\n        const {txid, tx, routeCheckTx} = await ft.transfer({\n            senderWif: senderWif,\n            receivers,\n            codehash,\n            genesis,\n            utxos: utxos,\n            noBroadcast,\n        })\n        if (noBroadcast === true) {\n            return {tx, routeCheckTx}\n        }\n        util.checkFeeRate(tx)\n        const txParseRes = parseTransaction(network, tx.serialize(true))\n        return {\n            txid,\n            outputs: txParseRes.outputs,\n        }\n    } catch (_err: any) {\n        const err = mapBsvFeeError(_err)\n        const errMsg = err.toString();\n        const isBsvAmountExceed =\n          errMsg.indexOf(\n            \"Mvc utxos should be no more than 3 in \"\n          ) > 0;\n        let isFtUtxoAmountExceed = errMsg.indexOf('Too many token-utxos') > 0;\n        console.log(\"broadcast sensible ft error\");\n        console.error(err);\n\n        if (!isBsvAmountExceed && !isFtUtxoAmountExceed) {\n            throw err;\n        }\n\n        // 如果 mvc utxo 先 merge mvc utxo\n        if (isBsvAmountExceed) {\n            try {\n                await mergeBsvUtxo(network, senderWif)\n                await sleep(3000)\n            } catch (err) {\n                console.log('merge mvc utxo fail')\n                console.error(err)\n                throw err\n            }\n\n            // merge 后重新发起 ft transfer 交易\n            try {\n                const {txid, tx} = await ft.transfer({\n                    senderWif: senderWif,\n                    receivers,\n                    codehash,\n                    genesis,\n                })\n                util.checkFeeRate(tx)\n                const txParseRes = parseTransaction(network, tx.serialize(true))\n                return {\n                    txid,\n                    outputs: txParseRes.outputs,\n                }\n            } catch (_err: any) {\n                const err = mapBsvFeeError(_err)\n                console.log('ft transfer fail after mvc utxo merge')\n                console.error(err)\n                const errMsg = err.toString()\n                isFtUtxoAmountExceed = errMsg.indexOf('Too many token-utxos') > 0;\n                if (!isFtUtxoAmountExceed) {\n                    throw err\n                }\n            }\n        }\n\n        if (isFtUtxoAmountExceed) {\n            // merge utxo\n            try {\n                //@ts-ignore\n                await ft.merge()\n                //util.checkFeeRate(tx)\n                await sleep(3000)\n            } catch (err) {\n                console.log('merge ft utxo fail')\n                console.error(err)\n                throw err\n            }\n\n            // merge 后重新发起 ft transfer 交易\n            try {\n                const {txid, tx} = await ft.transfer({\n                    senderWif: senderWif,\n                    receivers,\n                    codehash,\n                    genesis,\n                })\n                util.checkFeeRate(tx)\n                const txParseRes = parseTransaction(network, tx.serialize(true))\n                return {\n                    txid,\n                    outputs: txParseRes.outputs,\n                }\n            } catch (_err: any) {\n                const err = mapBsvFeeError(_err)\n                console.log('ft transfer fail after ft utxo merge')\n                console.error(err)\n                throw err\n            }\n        }\n    } \n}\n\nconst Signature = mvc.crypto.Signature;\nexport const sighashType = Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID;\n\n\n// p2pkh 解锁\nexport function unlockP2PKHInput(privateKey: mvc.PrivateKey, tx: mvc.Transaction, inputIndex: number, sigtype: number) {\n    const sig = new mvc.Transaction.Signature({\n      publicKey: privateKey.publicKey,\n      prevTxId: tx.inputs[inputIndex].prevTxId,\n      outputIndex: tx.inputs[inputIndex].outputIndex,\n      inputIndex,\n      signature: mvc.Transaction.Sighash.sign(\n        tx,\n        privateKey,\n        sigtype,\n        inputIndex,\n        tx.inputs[inputIndex].output.script,\n        tx.inputs[inputIndex].output.satoshisBN\n      ),\n      sigtype,\n    });\n  \n    tx.inputs[inputIndex].setScript(\n      mvc.Script.buildPublicKeyHashIn(\n        sig.publicKey,\n        sig.signature.toDER(),\n        sig.sigtype\n      )\n    );\n}\n\n// 发送 mvc 交易\nfunction checkBsvReceiversSatisfied(receivers: TransferReceiver[], tx: any, network: NetWork) {\n    let satified = true\n    const txAddressAmountMap: {[key: string]: number} = {}\n    const getKey = (address: string, amount: any) => {\n        return `${address}_${util.toString(amount)}`\n    }\n    tx.outputs.forEach((output: any) => {\n        const address = output.script.toAddress(network);\n        const amount = output.satoshis\n        const key = getKey(address, amount)\n        txAddressAmountMap[key] = (txAddressAmountMap[key] || 0) + 1\n    })\n    for (let i = 0; i < receivers.length; i++) {\n        const rece = receivers[i]\n        const key = getKey(rece.address, rece.amount)\n        if (!txAddressAmountMap[key]) {\n            satified = false\n            break\n        }\n        txAddressAmountMap[key] = txAddressAmountMap[key] - 1\n    }\n    return satified\n}\nexport async function transferBsv(network: NetWork, senderWif: string, receivers: TransferReceiver[], noBroadcast: boolean=false, allUtxos: boolean=false) {\n    // 1. 获取用户 utxo 列表\n    // 2. 判断 utxo 金额 是否 满足 receivers 金额\n    // 3. 构造交易\n    // 4. 广播交易\n    console.log('arguments', network, senderWif, receivers)\n    const address = new mvc.PrivateKey(senderWif, network).toAddress(network)\n    const balance = await getAddressBsvBalanceByUtxo(network, address)\n    const totalOutput = receivers.reduce((prev: any, cur) => util.plus(prev, cur.amount), '0')\n    if (util.lessThan(balance, totalOutput)) {\n        throw new Error('Insufficient_bsv_Balance')\n    }\n    let utxoValue: string = '0'\n    let selectedUtxoList = []\n\n    const tx = new mvc.Transaction()\n    tx.feePerKb(500)\n    const dust = 456\n\n    // input = output + fee + change\n    // 异常情况: 加上 change 后, fee 增加, 原本 input 不够了, 此时将所有输出移除, 然后，暂不考虑\n    \n    const pageSize = 16\n    for (let page = 1; ;page++) {\n        const utxoResList = await getAddressBsvUtxoList(network, address, page, pageSize)\n        for (let i = 0; i < utxoResList.length; i++) {\n            const item = utxoResList[i]\n            utxoValue = util.plus(utxoValue, item.satoshis)\n            selectedUtxoList.push(item)\n            tx.addInput(\n                new mvc.Transaction.Input.PublicKeyHash({\n                    output: new mvc.Transaction.Output({\n                        script: mvc.Script.buildPublicKeyHashOut(item.address),\n                        satoshis: item.satoshis,\n                    }),\n                    prevTxId: item.txId,\n                    outputIndex: item.outputIndex,\n                    script: mvc.Script.empty(),\n                })\n            );\n            if (!allUtxos && util.lessThanEqual(util.plus(totalOutput, dust), utxoValue)) {\n                break\n            }\n        }\n        if (!allUtxos && util.lessThanEqual(util.plus(totalOutput, dust), utxoValue)) {\n            break\n        }\n        if (utxoResList.length <= pageSize) {\n            break\n        }\n    }\n    receivers.forEach(item => {\n        tx.to(item.address, +item.amount)\n    })\n    if (util.greaterThan(util.minus(utxoValue, +totalOutput), 0)) {\n        tx.change(address)\n    }\n    // 如果 (utxo输入 - fee - 所有输出) = 找零 < dust，那么全部转出\n    if (util.lessThan(util.minus(utxoValue, tx.getFee(), totalOutput), dust)) {\n        // 全部转出\n        tx.clearOutputs()\n        receivers.forEach((item, index) => {\n            \n            if (receivers.length === index + 1) {\n                // 最后一个使用 change\n                tx.change(item.address)\n            } else {\n                tx.to(item.address, +item.amount)\n            }\n        })\n    }\n    tx.inputs.forEach((_: any, inputIndex: number) => {\n        const privateKey = new mvc.PrivateKey(senderWif)\n        unlockP2PKHInput(privateKey, tx, inputIndex, sighashType);\n    });\n    util.checkFeeRate(tx)\n    if (noBroadcast === true) {\n        return tx\n    }\n    const txid = await broadcastSensibleQeury(network, tx.serialize())\n    const txParseRes = parseTransaction(network, tx.serialize(true))\n\n    const amountSatified = checkBsvReceiversSatisfied(receivers, tx, network)\n    if (!amountSatified) {\n        console.log(util.safeJsonStringify({\n            type: 'bsvTransferAmountNotSatified',\n            txid: tx.hash,\n            receivers,\n            outputs: txParseRes.outputs,\n        }))\n        Sentry.captureMessage(`bsvTransferAmountNotSatified_${address}_${tx.hash}`);\n    }\n    return {\n        txid,\n        outputs: txParseRes.outputs,\n        fee: tx.getFee()\n    }\n}\n\n// 合并 mvc utxo, 合并一页\nexport async function mergeBsvUtxo(network: NetWork, senderWif: string) {\n    const address = new mvc.PrivateKey(senderWif, network).toAddress(network)\n    const utxolist = await getAddressBsvUtxoList(network, address, 1)\n    const tx = new mvc.Transaction()\n    tx.feePerKb(500)\n    utxolist.forEach(item => {\n        tx.addInput(new mvc.Transaction.Input.PublicKeyHash({\n            output: new mvc.Transaction.Output({\n                script: mvc.Script.buildPublicKeyHashOut(item.address),\n                satoshis: item.satoshis,\n            }),\n            prevTxId: item.txId,\n            outputIndex: item.outputIndex,\n            script: mvc.Script.empty(),\n        }))\n    })\n    tx.change(address)\n    tx.inputs.forEach((_: any, inputIndex: number) => {\n        const privateKey = new mvc.PrivateKey(senderWif)\n        unlockP2PKHInput(privateKey, tx, inputIndex, sighashType)\n    })\n    util.checkFeeRate(tx)\n    const txid = await broadcastSensibleQeury(network, tx.serialize())\n    const txParseRes = parseTransaction(network, tx.serialize(true))\n    return {\n        txid,\n        outputs: txParseRes.outputs,\n    }\n}\n\n\nconst parseTokenContractScript = function (scriptBuf: any, network: any = \"mainnet\") {\n    \n    //TODO: const parsed = SensibleFT.parseTokenScript(scriptBuf, network)\n    \n    return \n};\n\n\n\nexport function parseTransaction(network: NetWork, rawtx: string) {\n    let tx\n    try {\n        tx = new mvc.Transaction(rawtx)\n    } catch (err: any) {\n        return {\n            error: err.message\n        }\n    }\n\n    const inputs = tx.inputs.map((input: any, index: number) => {\n        const ftToken: any = parseTokenContractScript(input.script.toBuffer(), network);\n\n        let ret: any = {\n            index: index,\n            prevTxId: input.prevTxId.toString('hex'),\n            outputIndex: input.outputIndex,\n            script: input.script.toString('hex'),\n        }\n        try {\n            const addr = input.script.toAddress(network);\n            if (addr) {\n                ret.address = addr.toString()\n            }\n        } catch (err) {}\n        if (!ftToken) {\n            return ret\n        }\n        if (ftToken.tokenAmount <= 0) {\n            return ret\n        }\n        ret = {\n            ...ret,\n            isFt: true,\n            ftDetail: {\n                genesis: ftToken.genesis,\n                codehash: ftToken.codehash,\n                address: ftToken.tokenAddress,\n                decimal: ftToken.decimalNum,\n                name: ftToken.tokenName,\n                symbol: ftToken.tokenSymbol,\n            }\n        }\n        return ret\n    })\n    const outputs = tx.outputs.map((output: any, index: number) => {\n        const ftToken: any = parseTokenContractScript(output.script.toBuffer(), network);\n        let ret: any = {\n            index: index,\n            satoshis: output.satoshis,\n            script: output.script.toString('hex')\n        }\n        try {\n            const addr = output.script.toAddress(network);\n            if (addr) {\n                ret.address = addr.toString()\n            }\n        } catch (err) {}\n        if (!ftToken) {\n            return ret\n        }\n        if (ftToken.tokenAmount <= 0) {\n            return ret\n        }\n        ret = {\n            ...ret,\n            isFt: true,\n            ftDetail: {\n                genesis: ftToken.genesis,\n                codehash: ftToken.codehash,\n                address: ftToken.tokenAddress,\n                decimal: ftToken.decimalNum,\n                name: ftToken.tokenName,\n                symbol: ftToken.tokenSymbol,\n                amount: ftToken.tokenAmount,\n            }\n        }\n        return ret\n    })\n\n    return {\n        inputs: inputs,\n        outputs: outputs,\n        txid: tx.hash,\n    }\n    \n}\n\n\n(window as any).transferBsv = transferBsv;\n(window as any).signAnyTx = signAnyTx;","import { createGlobalState } from \"react-hooks-global-state\";\nimport {State, SensibleSatotx} from './stateType'\n\nconst defaultSatotx: SensibleSatotx = {\n    satotxApiPrefix: 'https://api.satotx.com', \n    satotxPubKey: '25108ec89eb96b99314619eb5b124f11f00307a833cda48f5ab1865a04d4cfa567095ea4dd47cdf5c7568cd8efa77805197a67943fe965b0a558216011c374aa06a7527b20b0ce9471e399fa752e8c8b72a12527768a9fc7092f1a7057c1a1514b59df4d154df0d5994ff3b386a04d819474efbd99fb10681db58b1bd857f6d5'\n}\n\n// app state\nconst initialState: State = {\n    account: null,\n    key: null,\n    bsvBalance: null,\n    sensibleFtList: [],\n    satotxConfigMap: new Map()\n};\ninitialState.satotxConfigMap.set(\n    '5b3bfa8e7600d701e70551075573ea28fd16c25a39fe2bdafdc3e08b11ca76b800000000', \n    [defaultSatotx, defaultSatotx, defaultSatotx]\n)\nconst { useGlobalState, getGlobalState, setGlobalState } = createGlobalState(initialState);\n\nexport {\n    useGlobalState,\n    getGlobalState,\n    setGlobalState,\n    defaultSatotx,\n}\n","import {setGlobalState, getGlobalState } from './state'\nimport {generateKeysFromEmailPassword, getAddressSensibleFtList, getAddressBsvBalanceByUtxo, signAnyTx} from '../lib'\nimport {Account, BalanceBsv, Key, SensibleFt} from './stateType'\nimport * as createPostMsg from 'post-msg';\nimport { SensibleFT } from 'meta-contract';\nimport { signTx, mvc, toHex } from 'mvc-scrypt';\n\n// local account storage\nconst accountStorageKey = 'accountStorageKey'\n// localStorage.removeItem(accountStorageKey)\nfunction saveAccountStorage(account: Account | null) {\n    const str = account ? JSON.stringify(account) : ''\n    localStorage.setItem(accountStorageKey, str)\n    // do not save account !!!\n}\nfunction getAccountStorage(): Account | null {\n    const str = localStorage.getItem(accountStorageKey)\n    if (!str) {\n        return null\n    }\n    return JSON.parse(str)\n}\n\nfunction isSupportToken(codehash: string) {\n    //return SensibleFT.isSupportedToken(codehash)\n    return true\n}\n\n// app action\nlet pollingBsvTimer = 0\nlet pollingSensibleFtTimer = 0\nexport async function pollingBsvBalance(){\n    clearInterval(pollingBsvTimer)\n    const fn = async () => {\n        const account = getGlobalState('account')\n        const key = getGlobalState('key')\n        if (!account || !key) {\n            return\n        }\n        try {\n            const balance = await getAddressBsvBalanceByUtxo(account.network, key.address)\n            setGlobalState('bsvBalance', {balance})\n        } catch (err) {\n            console.log('getAddressBsvBalance err', account.network, key.address, err)\n        }\n    }\n    await fn()\n    pollingBsvTimer = window.setInterval(fn, 5000)\n}\nexport async function pollingSensibleFtBalance() {\n    clearInterval(pollingSensibleFtTimer)\n    const fn = async () => {\n        const account = getGlobalState('account')\n        const key = getGlobalState('key')\n        if (!account || !key) {\n            return\n        }\n        try {\n            const sensibleFtList = await getAddressSensibleFtList(account.network, key.address)\n            const valid_sensibleFtList = sensibleFtList.filter(item => isSupportToken(item.codehash));\n            setGlobalState('sensibleFtList', valid_sensibleFtList);\n        } catch (err) {\n            console.log('getAddressSensibleFtList err', account.network, key.address, err)\n        }\n    }\n    await fn()\n    pollingSensibleFtTimer = window.setInterval(fn, 5000)\n}\n\nexport async function saveAccount(account: Account | null) {\n    saveAccountStorage(account)\n    if (account) {\n        const key = generateKeysFromEmailPassword(account.email, account.password, account.network)\n        setGlobalState('account', account)\n        setGlobalState('key', key)\n        await pollingSensibleFtBalance()\n        pollingBsvBalance()\n    } else {\n        setGlobalState(\"account\", null)\n        setGlobalState('key', null)\n    }\n}\n\nexport function recoverAccountFromStorage() {\n    const account = getAccountStorage()\n    saveAccount(account)\n}\n\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))\n\n// iframe action\nexport async function runIframeTask() {\n    if (window === window.top) {\n        return\n    }\n    const hashdata = JSON.parse(decodeURIComponent(window.location.hash.substr(1)))\n    const postMsg = createPostMsg(window.top, '*')\n    const id = hashdata.id\n\n    let preAccount: Account | null = null\n    let preBsvBalance: BalanceBsv | null = null\n    let preSensibleFtBalance: SensibleFt[] = []\n    let accountKey: Key | null = null\n    // let lastBsvBalance: \n\n    postMsg.emit(id, {\n        type: 'ready'\n    })\n\n    const isBsvBalanceEqual = (b1: BalanceBsv | null, b2: BalanceBsv | null) => {\n        if (!b1 && !b2) {\n            return true\n        }\n        return b1?.balance === b2?.balance\n    }\n    const isSensibleFtBalanceEqual = (b1: SensibleFt[], b2: SensibleFt[]) => {\n        if (b1.length !== b2.length) {\n            return false\n        }\n        b1.sort((item1, item2) => item1.genesis.localeCompare(item2.genesis))\n        b2.sort((item1, item2) => item1.genesis.localeCompare(item2.genesis))\n\n        for (let i = 0; i < b1.length; i++) {\n            const item1 = b1[i]\n            const item2 = b2[i]\n            if (item1.genesis !== item2.genesis) {\n                return false\n            }\n            if (item1.balance !== item2.balance) {\n                return false\n            }\n        }                \n        return true\n    }\n    const isAccountEqual = (b1: Account | null, b2: Account | null) => {\n        return (\n            b1?.email === b2?.email &&\n            b1?.network === b2?.network &&\n            b1?.password === b2?.password\n        )\n    }\n    const requestLatestData = async () => {\n        const latestAccount = getAccountStorage()\n        if (!(isAccountEqual(latestAccount, preAccount))) {\n            postMsg.emit(id, {\n                type: 'account',\n                data: latestAccount\n            })\n        }\n        preAccount = latestAccount;\n        if (preAccount) {\n            // get balance\n            accountKey = generateKeysFromEmailPassword(preAccount.email, preAccount.password, preAccount.network)\n            try {\n                const latestBalance = await getAddressBsvBalanceByUtxo(preAccount.network, accountKey.address)\n                const equal = isBsvBalanceEqual(preBsvBalance, {balance: latestBalance})\n                preBsvBalance = {balance: latestBalance}\n                if (!equal) {\n                    postMsg.emit(id, {\n                        type: 'bsvBalance', \n                        data: preBsvBalance,\n                    })\n                }\n            } catch (err) {}\n            try {\n                const latestBalance = await getAddressSensibleFtList(preAccount.network, accountKey.address)\n                const equal = isSensibleFtBalanceEqual(preSensibleFtBalance, latestBalance)\n                preSensibleFtBalance = latestBalance\n                if (!equal) {\n                    postMsg.emit(id, {\n                        type: 'sensibleFtBalance',\n                        data: preSensibleFtBalance\n                    })\n                }\n            } catch (err) {}\n            return true\n        } else {\n            return false\n        }\n    }\n\n    const handleRequest = (method: string, fn: Function) => {\n        postMsg.on(id, async function (_: any, eventData: any) {\n            const {type, data} = eventData\n            if (type === 'request' && data?.method === method) {\n                const requestId = data.requestId\n                try {\n                    const res = await fn(data.params)\n                    postMsg.emit(id, {\n                        type: 'response',\n                        data: {\n                            requestId,\n                            method,\n                            response: res,\n                        }\n                    })\n                } catch (err: any) {\n                    postMsg.emit(id, {\n                        type: 'response',\n                        data: {\n                            requestId,\n                            method,\n                            error: err.toString()\n                        }\n                    })\n                }\n            }\n        })\n    }\n\n    handleRequest('getAccount', async () => {\n        await requestLatestData()\n        if (!preAccount) {\n            return null\n        }\n        return {\n            name: preAccount.email,\n            email: preAccount.email,\n            network: preAccount.network,\n        }\n    });\n    handleRequest('getBsvBalance', async () => {\n        await requestLatestData()\n        return preBsvBalance\n    })\n    handleRequest('getSensibleFtBalance', async () => {\n        await requestLatestData()\n        return preSensibleFtBalance\n    })\n    handleRequest('getAddress', async () => {\n        await requestLatestData()\n        if (!accountKey) {\n            return null\n        }\n        return accountKey.address\n    })\n    handleRequest('signTx', async (options: any) => {\n        // 参数 (address + sighash)\n        // sighash: tx, sigtype, inputIndex, input.output.script, input.output,satoshisBN\n\n        // mvc-scrypt: signTx(tx, privateKey, lockingScriptASM: string, inputAmount: number, inputIndex: number, sighashType = DEFAULT_SIGHASH_TYPE, flags=DEFAULT_FLAGS): Signature.toTxFormat()\n\n        // mvc: mvc.Transaction.sighash.sign(tx: Transaction, privateKey: PrivateKey, sighashType: number, inputIndex: string, subscript: Script, satoshisBN: BN): Signature\n\n        // sCrypt params: tx(Transaciton object), inputIndex(number), sigHashType(SigType), onlySig?(boolean) 成功返回 unlockingScript 或者 Signature string\n\n        // options: {txHex, scriptHex, inputIndex, privateKey, publicKey, address, satoshis}\n\n        const {address} = options\n        if (!accountKey) {\n            throw new Error('not_login')\n        }\n        if (address !== accountKey.address) {\n            throw new Error('not_my_address')\n        }\n        return signAnyTx({\n            ...options,\n            privateKey: new mvc.PrivateKey(accountKey.privateKey, preAccount?.network ),\n            publicKey: new mvc.PublicKey(accountKey.publicKey, preAccount?.network)\n        })\n    })\n    handleRequest('logout', async () => {\n        saveAccountStorage(null)\n    })\n    handleRequest('ping', () => {\n        return null;\n    })\n\n    for (;;) {\n        const signed = await requestLatestData()\n        await sleep(signed ? 3000 : 500)\n    }\n\n}","import { useRef, useEffect } from \"react\";\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    let id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport function useOnceCall(cb, condition = true) {\n  const isCalledRef = useRef(false);\n  useEffect(() => {\n    if (condition && !isCalledRef.current) {\n      isCalledRef.current = true;\n      cb();\n    }\n  }, [cb, condition]);\n}\n","import {\n  Button,\n  Popover,\n  Card,\n  Form,\n  Input,\n  Select,\n  List,\n  Row,\n  Col,\n  message,\n  InputNumber,\n  Space,\n  Modal,\n} from \"antd\";\nimport {\n  UserOutlined,\n  LockOutlined,\n  MinusOutlined,\n  PlusOutlined,\n  LeftOutlined,\n} from \"@ant-design/icons\";\nimport { useState, useEffect } from \"react\";\nimport * as QRCode from \"qrcode.react\";\nimport { mvc } from \"mvc-scrypt\";\nimport {\n  getWocAddressUrl,\n  formatValue,\n  isValidAddress,\n  transferBsv,\n  transferSensibleFt,\n  getWocTransactionUrl,\n  getSensibleFtHistoryUrl,\n  parseTransaction,\n  broadcastSensibleQeury,\n} from \"./lib\";\nimport * as createPostMsg from \"post-msg\";\nimport { useGlobalState } from \"./state/state\";\nimport * as actions from \"./state/action\";\nimport { useOnceCall } from \"./hooks\";\nimport \"./App.css\";\nimport * as util from \"./lib/util\";\nimport * as Sentry from \"@sentry/react\";\nimport axios from \"axios\";\n\n//const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst { Option } = Select;\n\nfunction Header() {\n  const [account] = useGlobalState(\"account\");\n  const [key] = useGlobalState(\"key\");\n  const [decodeModalVisible, setDecodeModalVisible] = useState(false);\n  const [rawtx, setRawtx] = useState(\"\");\n  const [network, setNetwork] = useState(\"\");\n  const [resultModalVisible, setResultModalVisible] = useState(false);\n\n  const handleLogout = () => {\n    actions.saveAccount(null);\n  };\n  const handleHistory = () => {\n    let url = getWocAddressUrl(account.network, key.address);\n    window.open(url);\n  };\n  const handleSourceCode = () => {\n    window.open(\"http://github.com\");\n  };\n\n  const decodeTx = () => {\n    const res = parseTransaction(network, rawtx);\n    console.log(\"decodeTx res\", res);\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"logo\">Web Wallet</div>\n      {account && (\n        <Popover\n          title=\"\"\n          content={\n            <>\n              <Button type=\"link\" onClick={handleLogout}>\n                Logout\n              </Button>\n              <br />\n              <Button type=\"link\" onClick={handleHistory}>\n                History\n              </Button>\n              <br />\n              <Button type=\"link\" onClick={handleSourceCode}>\n                Source Code\n              </Button>\n              <br />\n              <Button type=\"link\" onClick={() => setDecodeModalVisible(true)}>\n                decode rawtx\n              </Button>\n            </>\n          }\n        >\n          <Button type=\"link\">{account.email}</Button>\n        </Popover>\n      )}\n      <Modal\n        visible={decodeModalVisible}\n        onCancel={() => setDecodeModalVisible(false)}\n      >\n        <Input.TextArea\n          rows={4}\n          value={rawtx}\n          onChange={(e) => setRawtx(e.target.value)}\n        ></Input.TextArea>\n        <Select\n          style={{ width: 180 }}\n          placeholder=\"Select network\"\n          value={network}\n          onChange={(value) => setNetwork(value)}\n        >\n          <Option value=\"mainnet\">mainnet</Option>\n          <Option value=\"testnet\">testnet</Option>\n        </Select>\n        <Button type=\"primary\" onClick={decodeTx}>\n          decode\n        </Button>\n      </Modal>\n      <Modal\n        visible={resultModalVisible}\n        onCancel={() => setResultModalVisible(false)}\n      ></Modal>\n    </div>\n  );\n}\n\nfunction LoginPanel() {\n  const [account] = useGlobalState(\"account\");\n  const [form] = Form.useForm();\n\n  const handleOnFinish = () => {\n    Modal.confirm({\n      title: \"安全注意\",\n      content: (\n        <div>\n          Web钱包的私钥是通过用户的邮箱和密码实时计算得到，不会上传服务器，也不会保存在本地(代码见\n          <a\n            href=\"https://github.com/klouskingsley/mvc-web-wallet\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            github\n          </a>\n          )。仅供方便用户测试之用，不适合存放大量资金，建议用户妥善保管邮箱+密码组合以防资金丢失，或在使用完成之后将剩余资金转移。邮箱+密码组合丢失(忘记，被盗等情形)会导致资产丢失\n        </div>\n      ),\n      onOk: () => {\n        const account = form.getFieldsValue();\n        actions.saveAccount(account);\n      },\n    });\n  };\n  if (account) {\n    return null;\n  }\n\n  return (\n    <Card className=\"card\" title=\"Login\" bordered={false}>\n      <Form form={form} layout=\"vertical\" onFinish={handleOnFinish}>\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              type: \"email\",\n              required: true,\n              message: \"Please input a valid Email!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Email\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[\n            { required: true, message: \"Please input your Password!\" },\n            {\n              min: 6,\n              message: \"Password at least 6 chars\",\n              transform: (value) => value && value.trim(),\n            },\n          ]}\n        >\n          <Input.Password\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            type=\"password\"\n            visibilityToggle={true}\n            placeholder=\"Password\"\n          />\n        </Form.Item>\n        <Form.Item name=\"network\" label=\"Network\" rules={[{ required: true }]}>\n          <Select placeholder=\"Select network\">\n            <Option value=\"mainnet\">mainnet</Option>\n            <Option value=\"testnet\">testnet</Option>\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          说明：Web钱包的私钥是通过用户的邮箱和密码实时计算得到(无需注册)，每次输入相同的邮箱和密码登录即可计算出相同的私钥，私钥不会上传服务器，也不会保存在本地，仅供方便用户测试之用，不适合存放大量资金，建议用户妥善保管邮箱+密码组合以防资金丢失。\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            Log in\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nfunction AccountInfoPanel({ onWithDraw, onTransfer }) {\n  const [key] = useGlobalState(\"key\");\n  const [account] = useGlobalState(\"account\");\n  const [bsvBalance] = useGlobalState(\"bsvBalance\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n\n  if (!key || !account) {\n    return null;\n  }\n  const handleHistory = () => {\n    let url = getWocAddressUrl(account.network, key.address);\n    window.open(url);\n  };\n  const handleTransfer = (genesis) => {\n    if (!genesis) {\n      return onTransfer(\"\");\n    }\n    // if (!satotxConfigMap.has(genesis)) {\n    //   return message.error(\"rabin api not set or found\");\n    // }\n    return onTransfer(genesis);\n  };\n  return [\n    <Card\n      className=\"card\"\n      title=\"Account Info\"\n      bordered={false}\n      actions={\n        <>\n          <Button type=\"link\" onClick={handleHistory}>\n            history\n          </Button>\n          ,\n          <Button type=\"link\" onClick={onWithDraw}>\n            withdraw\n          </Button>\n          ,\n        </>\n      }\n    >\n      <Form layout=\"vertical\">\n        <Form.Item label={`${account.network} address`}>\n          <Input value={key.address} />\n          <div style={{ margin: 20 }}>\n            <QRCode value={key.address} />\n          </div>\n        </Form.Item>\n        <Form.Item label=\"privateKey\">\n          <Input.Password visibilityToggle={true} value={key.privateKey} />\n        </Form.Item>\n      </Form>\n    </Card>,\n    <Card className=\"card\" title=\"Asset\" bordered={false}>\n      <Form layout=\"vertical\">\n        {bsvBalance && (\n          <Form.Item label=\"SPACE balance\">\n            <Row justify=\"space-between\">\n              <Col span={16}>\n                <div>{formatValue(bsvBalance.balance, 8)}</div>\n              </Col>\n              <Col span={7}>\n                <Button type=\"link\" onClick={() => handleTransfer(\"\")}>\n                  Transfer SPACE\n                </Button>\n              </Col>\n            </Row>\n          </Form.Item>\n        )}\n        {sensibleFtList.length > 0 && (\n          <Form.Item label=\"Fungible Token\">\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={sensibleFtList}\n              renderItem={(item) => {\n                return (\n                  <List.Item\n                    key={item.genesis}\n                    actions={\n                      <>\n                        <Popover\n                          placement=\"topRight\"\n                          content={\n                            <>\n                              <div>codehash: {item.codehash}</div>,\n                              <div>genesis: {item.genesis}</div>,\n                            </>\n                          }\n                        >\n                          <a\n                            key=\"list-loadmore-more\"\n                            href={getSensibleFtHistoryUrl(\n                              account.network,\n                              key.address,\n                              item.genesis,\n                              item.codehash\n                            )}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                          >\n                            more info\n                          </a>\n                        </Popover>\n                      </>\n                    }\n                  >\n                    <List.Item.Meta\n                      title={item.tokenSymbol}\n                      description={item.tokenName}\n                    />\n                    <Row>\n                      <Col>\n                        <div\n                          style={{\n                            height: \"100%\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          Balance:{\" \"}\n                          {formatValue(item.balance, item.tokenDecimal)}\n                        </div>\n                      </Col>\n                      <Col>\n                        <Button\n                          type=\"link\"\n                          onClick={() => handleTransfer(item.genesis)}\n                        >\n                          Go Transfer\n                        </Button>\n                      </Col>\n                    </Row>\n                  </List.Item>\n                );\n              }}\n            ></List>\n          </Form.Item>\n        )}\n      </Form>\n    </Card>,\n  ];\n}\n\nfunction getRabinPubKeys(url) {\n  return axios.get(url);\n}\n\nasync function getRabins(rabinApis = []) {\n  let promises = [],\n    rabins = [];\n  rabinApis.forEach((rabinApi) => {\n    promises.push(getRabinPubKeys(rabinApi));\n  });\n  return new Promise((resolve) => {\n    axios.all(promises).then((res) => {\n      // console.log(res);\n      res.forEach((item, index) => {\n        rabins.push({\n          satotxApiPrefix: rabinApis[index],\n          satotxPubKey: item.data.data.pubKey,\n        });\n      });\n\n      resolve(rabins);\n    });\n  });\n}\n\nfunction TransferAllPanel({ initDatas = [], onCancel, onTransferCallback }) {\n  const [key] = useGlobalState(\"key\");\n  const [bsvBalance] = useGlobalState(\"bsvBalance\");\n  const [account] = useGlobalState(\"account\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  useOnceCall(() => {\n    const values = {};\n    initDatas.forEach((data, index) => {\n      const isBsv = !data.genesis;\n      const token = sensibleFtList.find(\n        (item) => item.genesis === data.genesis\n      );\n      const decimal = isBsv ? 8 : token.tokenDecimal;\n      values[`receiverList${index}`] = data.receivers.map((item) => {\n        return {\n          address: item.address,\n          amount: util.div(item.amount, util.getDecimalString(decimal)),\n        };\n      });\n    });\n    form.setFieldsValue(values);\n  }, key && bsvBalance);\n\n  if (!key) {\n    return null;\n  }\n  if (!bsvBalance) {\n    return null;\n  }\n\n  const handleSubmit = async () => {\n    const receiverLists = form.getFieldsValue();\n\n    const broadcastBsv = async ({ formatReceiverList, noBroadcast }) => {\n      setLoading(true);\n      let transferRes;\n      let txid = \"\";\n      try {\n        if (noBroadcast === true) {\n          const allUtxos = true;\n          const tx = await await transferBsv(\n            account.network,\n            key.privateKey,\n            formatReceiverList,\n            noBroadcast,\n            allUtxos\n          );\n          return tx;\n        }\n        const res = await await transferBsv(\n          account.network,\n          key.privateKey,\n          formatReceiverList\n        );\n        transferRes = res;\n        txid = res.txid;\n      } catch (err) {\n        const msg = \"broadcast error: \" + err.toString();\n        Sentry.captureException(err);\n        Sentry.captureMessage(`bsvTransferFail_${key.address}`);\n        onTransferCallback({\n          error: msg,\n        });\n        console.log(\"broadcast mvc error \");\n        console.error(err);\n        message.error(err.toString());\n      }\n      Sentry.captureMessage(`bsvTransferSuccess_${key.address}_${txid}`);\n      return transferRes;\n    };\n\n    const broadcastSensibleFt = async ({\n      formatReceiverList,\n      token,\n      decimal,\n      genesis,\n      rabinApis,\n      utxos,\n      noBroadcast,\n    }) => {\n      setLoading(true);\n      let transferRes;\n      try {\n        const rabins = await getRabins(rabinApis);\n        const res = await transferSensibleFt(\n          account.network,\n          // signers,\n          rabins,\n          key.privateKey,\n          formatReceiverList,\n          token.codehash,\n          token.genesis,\n          utxos,\n          noBroadcast || false\n        );\n        transferRes = res;\n      } catch (err) {\n        Sentry.captureException(err);\n        Sentry.captureMessage(\n          `ftTransferFail_${key.address}_${token.genesis}_${token.genesis}`\n        );\n        onTransferCallback({\n          error: \"broadcast sensible ft error, \" + err.toString(),\n        });\n        console.log(\"broadcast sensible ft error \");\n        console.error(err);\n        message.error(err.toString());\n      }\n      return transferRes;\n    };\n\n    const broadcastBsvAndToken = async () => {\n      const txs = [];\n      const transferRes = [];\n      let utxos = [];\n      // mvc transaction must be the first one\n      for (let i = 0; i < initDatas.length; i++) {\n        const data = initDatas[i];\n        const isBsv = !data.genesis;\n        const token = sensibleFtList.find(\n          (item) => item.genesis === data.genesis\n        );\n        const decimal = isBsv ? 8 : token.tokenDecimal;\n        const balance = isBsv ? bsvBalance.balance : token.balance;\n        const rabinApis = data.rabinApis;\n        const totalOutputValueFloatDuck = receiverLists[\n          `receiverList${i}`\n        ].reduce((prev, cur) => util.plus(prev, cur.amount), 0);\n\n        const totalOutputValue = util.multi(\n          totalOutputValueFloatDuck,\n          util.getDecimalString(decimal)\n        );\n        if (util.lessThan(balance, totalOutputValue)) {\n          const msg = \"Insufficient ft balance\";\n          onTransferCallback({\n            error: msg,\n          });\n          return message.error(msg);\n        }\n        const formatReceiverList = data.receivers.map((item) => {\n          return {\n            address: item.address,\n            // amount: util.multi(item.amount, util.getDecimalString(decimal)),\n            amount: item.amount,\n          };\n        });\n        if (isBsv) {\n          const tx = await broadcastBsv({\n            formatReceiverList,\n            noBroadcast: true,\n          });\n          const outputIndex = tx.outputs.length - 1;\n          //TODO: check res outputs\n          if (outputIndex !== 1) {\n            const msg = \"Insufficient ft balance\";\n            onTransferCallback({\n              error: msg,\n            });\n            return message.error(msg);\n          }\n          const output = tx.outputs[outputIndex];\n          txs.push({\n            tx: tx,\n            isBsv: true,\n            noBroadcast: !!data.noBroadcast,\n          });\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new mvc.PrivateKey(\n              key.privateKey,\n              account.network\n            ).toAddress(account.network),\n          });\n        } else {\n          const { routeCheckTx, tx } = await broadcastSensibleFt({\n            formatReceiverList,\n            token,\n            decimal,\n            genesis: data.genesis,\n            rabinApis,\n            utxos,\n            noBroadcast: true,\n          });\n          txs.push({\n            tx,\n            routeCheckTx,\n            isBsv: false,\n            noBroadcast: !!data.noBroadcast,\n          });\n          const outputIndex = tx.outputs.length - 1;\n          const output = tx.outputs[outputIndex];\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new mvc.PrivateKey(\n              key.privateKey,\n              account.network\n            ).toAddress(account.network),\n          });\n        }\n      }\n\n      for (const txInfo of txs) {\n        if (!txInfo.noBroadcast) {\n          if (txInfo.routeCheckTx) {\n            await broadcastSensibleQeury(\n              account.network,\n              txInfo.routeCheckTx.serialize(true)\n            );\n          }\n          if (txInfo.tx) {\n            await broadcastSensibleQeury(\n              account.network,\n              txInfo.tx.serialize(true)\n            );\n          }\n        }\n\n        var resItem = {\n          txid: txInfo.tx.hash,\n          outputs: parseTransaction(account.network, txInfo.tx.serialize(true))\n            .outputs,\n          fee: txInfo.tx.getFee(),\n          isBsv: txInfo.isBsv,\n          txHex: txInfo.tx.serialize(true),\n        };\n        if (!resItem.isBsv) {\n          resItem.routeCheckTxid = txInfo.routeCheckTx.hash;\n          resItem.routeCheckTxHex = txInfo.routeCheckTx.serialize(true);\n          resItem.routeCheckOutputs = parseTransaction(\n            account.network,\n            txInfo.routeCheckTx.serialize(true)\n          ).outputs;\n        }\n\n        transferRes.push(resItem);\n      }\n\n      setLoading(false);\n      onTransferCallback({\n        response: {\n          ...transferRes,\n        },\n      });\n    };\n\n    const buildBsvAndTokenTx = async () => {\n      const txs = {};\n      let utxos = [];\n      // mvc transaction must be the first one\n      for (let i = 0; i < initDatas.length; i++) {\n        const data = initDatas[i];\n        const isBsv = !data.genesis;\n        const token = sensibleFtList.find(\n          (item) => item.genesis === data.genesis\n        );\n        const decimal = isBsv ? 8 : token.tokenDecimal;\n        const balance = isBsv ? bsvBalance.balance : token.balance;\n        const rabinApis = data.rabinApis;\n        const totalOutputValueFloatDuck = receiverLists[\n          `receiverList${i}`\n        ].reduce((prev, cur) => util.plus(prev, cur.amount), 0);\n\n        const totalOutputValue = util.multi(\n          totalOutputValueFloatDuck,\n          util.getDecimalString(decimal)\n        );\n        if (util.lessThan(balance, totalOutputValue)) {\n          const msg = \"Insufficient ft balance\";\n          onTransferCallback({\n            error: msg,\n          });\n          return message.error(msg);\n        }\n        const formatReceiverList = data.receivers.map((item) => {\n          return {\n            address: item.address,\n            // amount: util.multi(item.amount, util.getDecimalString(decimal)),\n            amount: item.amount,\n          };\n        });\n        if (isBsv) {\n          const tx = await broadcastBsv({\n            formatReceiverList,\n            noBroadcast: true,\n          });\n          const outputIndex = tx.outputs.length - 1;\n          //TODO: check res outputs\n          if (outputIndex !== 1) {\n            const msg = \"Insufficient ft balance\";\n            onTransferCallback({\n              error: msg,\n            });\n            return message.error(msg);\n          }\n          const output = tx.outputs[outputIndex];\n          txs.bsvRawTx = tx.toString();\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new mvc.PrivateKey(\n              key.privateKey,\n              account.network\n            ).toAddress(account.network),\n          });\n        } else {\n          const { amountCheckTx, tx } = await broadcastSensibleFt({\n            formatReceiverList,\n            token,\n            decimal,\n            genesis: data.genesis,\n            rabinApis,\n            utxos,\n            noBroadcast: true,\n          });\n          txs.amountCheckRawTx = amountCheckTx.toString();\n          txs.tokenRawTx = tx.toString();\n          const outputIndex = tx.outputs.length - 1;\n          const output = tx.outputs[outputIndex];\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new mvc.PrivateKey(\n              key.privateKey,\n              account.network\n            ).toAddress(account.network),\n          });\n        }\n      }\n\n      setLoading(false);\n      onTransferCallback({\n        response: txs,\n      });\n    };\n\n    Modal.confirm({\n      title: \"Confirm the transaction\",\n      onOk: () => {\n        //broadcastAll();\n        broadcastBsvAndToken();\n      },\n    });\n  };\n  const handleBack = () => {\n    onCancel();\n  };\n  return (\n    <Card\n      className=\"card\"\n      title={\n        <div style={{ cursor: \"pointer\" }} onClick={handleBack}>\n          <LeftOutlined />\n          Transfer\n        </div>\n      }\n      loading={loading}\n      bordered={false}\n    >\n      <Form form={form} layout=\"vertical\" onFinish={handleSubmit}>\n        {initDatas.map((data, index) => {\n          const isBsv = !data.genesis;\n          const token = sensibleFtList.find(\n            (item) => item.genesis === data.genesis\n          );\n\n          if (!isBsv && !token) {\n            return null;\n          }\n          const tokenSymbol = isBsv ? \"SPACE\" : token.tokenSymbol;\n          const decimal = isBsv ? 8 : token.tokenDecimal;\n          const balance = isBsv ? bsvBalance.balance : token.balance;\n          const formatBalance = formatValue(balance, decimal);\n          const canEdit = !(data.receivers.length > 0);\n          return (\n            <div key={index}>\n              <div className=\"transfer-line\">\n                {isBsv ? `Coin: ${tokenSymbol}` : `Token: ${tokenSymbol}`}\n              </div>\n              {!isBsv && (\n                <div className=\"transfer-line\">Genesis: {token.genesis}</div>\n              )}\n              {!isBsv && (\n                <div className=\"transfer-line\">Codehash: {token.codehash}</div>\n              )}\n              <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n                <Col span={14}>\n                  <div style={{ fontWeight: 700 }}>Input</div>\n                </Col>\n              </Row>\n              <div className=\"transfer-line\">{`Balance: ${formatBalance}`}</div>\n              <div className=\"transfer-line\">{`From Address: ${key.address}`}</div>\n              <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n                <Col span={14}>\n                  <div style={{ fontWeight: 700 }}>Output</div>\n                </Col>\n              </Row>\n              <Form.List name={`receiverList${index}`}>\n                {(fields, { add, remove }) => (\n                  <>\n                    {fields.map((key, name, fieldKey, ...restField) => {\n                      return (\n                        <Space\n                          key={key.fieldKey}\n                          style={{ display: \"flex\", marginBottom: 8 }}\n                          align=\"baseline\"\n                        >\n                          <Form.Item\n                            {...restField}\n                            name={[name, \"address\"]}\n                            fieldKey={[fieldKey, \"address\"]}\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Please input the address\",\n                              },\n                              {\n                                message: \"invalid address\",\n                                validator: (_, value) =>\n                                  isValidAddress(account.network, value)\n                                    ? Promise.resolve()\n                                    : Promise.reject(),\n                              },\n                            ]}\n                          >\n                            <Input\n                              placeholder=\"Input the address\"\n                              disabled={!canEdit}\n                            />\n                          </Form.Item>\n                          <Form.Item\n                            {...restField}\n                            name={[name, \"amount\"]}\n                            fieldKey={[fieldKey, \"amount\"]}\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Please input amount\",\n                              },\n                            ]}\n                          >\n                            <InputNumber\n                              placeholder=\"Amount\"\n                              min={0}\n                              disabled={!canEdit}\n                            />\n                          </Form.Item>\n                          <Button\n                            disabled={!canEdit}\n                            size=\"small\"\n                            onClick={() => remove(name)}\n                            shape=\"circle\"\n                            icon={<MinusOutlined />}\n                          />\n                        </Space>\n                      );\n                    })}\n\n                    <Form.Item>\n                      <Button\n                        type=\"dashed\"\n                        onClick={() => add()}\n                        icon={<PlusOutlined />}\n                        disabled={!canEdit}\n                      >\n                        Add Output\n                      </Button>\n                    </Form.Item>\n                  </>\n                )}\n              </Form.List>\n            </div>\n          );\n        })}\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" block>\n            Transfer\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nfunction TransferPanel({\n  genesis = \"\",\n  initReceivers = [],\n  rabinApis = [],\n  onCancel,\n  onTransferCallback,\n  noBroadcast,\n}) {\n  const [key] = useGlobalState(\"key\");\n  const [bsvBalance] = useGlobalState(\"bsvBalance\");\n  const [account] = useGlobalState(\"account\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const canEdit = !(initReceivers.length > 0);\n\n  useOnceCall(() => {\n    const isBsv = genesis === \"\";\n    const token = sensibleFtList.find((item) => item.genesis === genesis);\n    const decimal = isBsv ? 8 : token.tokenDecimal;\n    console.log(\n      \"initReceivers\",\n      initReceivers,\n      initReceivers.map((item) => {\n        return {\n          address: item.address,\n          amount: util.multi(item.amount, util.getDecimalString(decimal)),\n        };\n      })\n    );\n    form.setFieldsValue({\n      receiverList: initReceivers.map((item) => {\n        return {\n          address: item.address,\n          amount: util.div(item.amount, util.getDecimalString(decimal)),\n        };\n      }),\n    });\n  }, key && bsvBalance && initReceivers.length);\n\n  if (!key) {\n    return null;\n  }\n  if (!bsvBalance) {\n    return null;\n  }\n  if (genesis && !sensibleFtList.length) {\n    return null;\n  }\n\n  const isBsv = genesis === \"\";\n  const token = sensibleFtList.find((item) => item.genesis === genesis);\n\n  if (!isBsv && !token) {\n    return null;\n  }\n  const tokenSymbol = isBsv ? \"SPACE\" : token.tokenSymbol;\n  const decimal = isBsv ? 8 : token.tokenDecimal;\n  const balance = isBsv ? bsvBalance.balance : token.balance;\n  const formatBalance = formatValue(balance, decimal);\n\n  const handleSubmit = async () => {\n    const { receiverList } = form.getFieldsValue();\n    const totalOutputValueFloatDuck = receiverList.reduce(\n      (prev, cur) => util.plus(prev, cur.amount),\n      0\n    );\n\n    const totalOutputValue = util.multi(\n      totalOutputValueFloatDuck,\n      util.getDecimalString(decimal)\n    );\n    if (util.lessThan(balance, totalOutputValue)) {\n      const msg = \"Insufficient ft balance\";\n      onTransferCallback({\n        error: msg,\n      });\n      return message.error(msg);\n    }\n    const formatReceiverList = receiverList.map((item) => {\n      return {\n        address: item.address,\n        amount: util.multi(item.amount, util.getDecimalString(decimal)),\n      };\n    });\n\n    const broadcastBsv = async () => {\n      setLoading(true);\n      let txid = \"\";\n      let transferRes;\n      try {\n        const res = await transferBsv(\n          account.network,\n          key.privateKey,\n          formatReceiverList,\n          noBroadcast\n        );\n        if (noBroadcast) {\n          transferRes = {\n            txid: res.hash,\n            txHex: res.serialize(true),\n            outputs: parseTransaction(account.network, res.serialize(true))\n              .outputs,\n            fee: res.getFee(),\n          };\n          txid = res.hash;\n        } else {\n          transferRes = res;\n          txid = res.txid;\n        }\n      } catch (err) {\n        const msg = \"broadcast error: \" + err.toString();\n        console.log(\n          util.safeJsonStringify({\n            type: \"bsvTransferFail\",\n            msg,\n            account: {\n              network: account.network,\n              address: key.address,\n            },\n            receivers: formatReceiverList,\n          })\n        );\n        Sentry.captureException(err);\n        Sentry.captureMessage(`bsvTransferFail_${key.address}`);\n        onTransferCallback({\n          error: msg,\n        });\n        console.log(\"broadcast mvc error \");\n        console.error(err);\n        message.error(err.toString());\n      }\n      setLoading(false);\n      if (txid) {\n        console.log(\n          util.safeJsonStringify({\n            type: \"bsvTransferSuccess\",\n            account: {\n              network: account.network,\n              address: key.address,\n            },\n            receivers: formatReceiverList,\n            txid,\n            ...transferRes,\n          })\n        );\n        Sentry.captureMessage(`bsvTransferSuccess_${key.address}_${txid}`);\n        onTransferCallback({\n          response: {\n            ...transferRes,\n          },\n        });\n        Modal.success({\n          title: \"Transaction broadcast success\",\n          content: (\n            <div>\n              txid:{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={getWocTransactionUrl(account.network, txid)}\n              >\n                {txid}\n              </a>\n            </div>\n          ),\n        });\n      }\n    };\n\n    const broadcastSensibleFt = async () => {\n      setLoading(true);\n      let txid = \"\";\n      let transferRes;\n      try {\n        const rabins = await getRabins(rabinApis);\n\n        const res = await transferSensibleFt(\n          account.network,\n          // signers,\n          rabins,\n          key.privateKey,\n          formatReceiverList,\n          token.codehash,\n          token.genesis,\n          false,\n          noBroadcast\n        );\n        if (noBroadcast) {\n          transferRes = {\n            txid: res.tx.hash,\n            outputs: parseTransaction(account.network, res.tx.serialize(true))\n              .outputs,\n            fee: res.tx.getFee(),\n            routeCheckTxid: res.routeCheckTx.hash,\n            txHex: res.tx.serialize(true),\n            routeCheckTxHex: res.routeCheckTx.serialize(true),\n            routeCheckOutputs: parseTransaction(\n              account.network,\n              res.routeCheckTx.serialize(true)\n            ).outputs,\n          };\n          txid = res.tx.hash;\n        } else {\n          transferRes = res;\n          txid = res.txid;\n        }\n      } catch (err) {\n        console.log(\"broadcast sensible ft error \");\n        console.error(err);\n        message.error(err.toString());\n        console.log(\n          util.safeJsonStringify({\n            type: \"ftTransferFail\",\n            msg: util.safeJsonStringify(err.message),\n            account: {\n              network: account.network,\n              address: key.address,\n            },\n            genesis: token.genesis,\n            codehash: token.codehash,\n            receivers: formatReceiverList,\n          })\n        );\n        Sentry.captureException(err);\n        Sentry.captureMessage(\n          `ftTransferFail_${key.address}_${token.genesis}_${token.genesis}`\n        );\n        onTransferCallback({\n          error: err.toString(),\n        });\n      }\n      setLoading(false);\n      if (txid) {\n        console.log(\n          util.safeJsonStringify({\n            type: \"ftTransferSuccess,\",\n            account: {\n              network: account.network,\n              address: key.address,\n              genesis: token.genesis,\n              codehash: token.codehash,\n            },\n            receivers: formatReceiverList,\n            txid,\n            ...transferRes,\n          })\n        );\n        Sentry.captureMessage(`ftTransferSuccess_${key.address}_${txid}`);\n        onTransferCallback({\n          response: {\n            ...transferRes,\n          },\n        });\n        Modal.success({\n          title: \"Transaction broadcast success\",\n          content: (\n            <div>\n              txid:{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={getWocTransactionUrl(account.network, txid)}\n              >\n                {txid}\n              </a>\n            </div>\n          ),\n        });\n      }\n    };\n\n    Modal.confirm({\n      title: \"Confirm the transaction\",\n      onOk: () => {\n        isBsv ? broadcastBsv() : broadcastSensibleFt();\n      },\n    });\n  };\n  const handleBack = () => {\n    onCancel();\n  };\n\n  return (\n    <Card\n      className=\"card\"\n      title={\n        <div style={{ cursor: \"pointer\" }} onClick={handleBack}>\n          <LeftOutlined />\n          Transfer\n        </div>\n      }\n      loading={loading}\n      bordered={false}\n    >\n      <Form form={form} layout=\"vertical\" onFinish={handleSubmit}>\n        <div className=\"transfer-line\">\n          {isBsv ? `Coin: ${tokenSymbol}` : `Token: ${tokenSymbol}`}\n        </div>\n        {!isBsv && (\n          <div className=\"transfer-line\">Genesis: {token.genesis}</div>\n        )}\n        {!isBsv && (\n          <div className=\"transfer-line\">Codehash: {token.codehash}</div>\n        )}\n        <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n          <Col span={14}>\n            <div style={{ fontWeight: 700 }}>Input</div>\n          </Col>\n        </Row>\n        <div className=\"transfer-line\">{`Balance: ${formatBalance}`}</div>\n        <div className=\"transfer-line\">{`From Address: ${key.address}`}</div>\n        <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n          <Col span={14}>\n            <div style={{ fontWeight: 700 }}>Output</div>\n          </Col>\n        </Row>\n        <Form.List name=\"receiverList\">\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map((key, name, fieldKey, ...restField) => {\n                return (\n                  <Space\n                    key={key.fieldKey}\n                    style={{ display: \"flex\", marginBottom: 8 }}\n                    align=\"baseline\"\n                  >\n                    <Form.Item\n                      {...restField}\n                      name={[name, \"address\"]}\n                      fieldKey={[fieldKey, \"address\"]}\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please input the address\",\n                        },\n                        {\n                          message: \"invalid address\",\n                          validator: (_, value) =>\n                            isValidAddress(account.network, value)\n                              ? Promise.resolve()\n                              : Promise.reject(),\n                        },\n                      ]}\n                    >\n                      <Input\n                        placeholder=\"Input the address\"\n                        disabled={!canEdit}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      {...restField}\n                      name={[name, \"amount\"]}\n                      fieldKey={[fieldKey, \"amount\"]}\n                      rules={[\n                        { required: true, message: \"Please input amount\" },\n                      ]}\n                    >\n                      <InputNumber\n                        placeholder=\"Amount\"\n                        min={0}\n                        disabled={!canEdit}\n                      />\n                    </Form.Item>\n                    <Button\n                      disabled={!canEdit}\n                      size=\"small\"\n                      onClick={() => remove(name)}\n                      shape=\"circle\"\n                      icon={<MinusOutlined />}\n                    />\n                  </Space>\n                );\n              })}\n\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => add()}\n                  icon={<PlusOutlined />}\n                  disabled={!canEdit}\n                >\n                  Add Output\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" block>\n            Transfer\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    actions.recoverAccountFromStorage();\n  }, []);\n\n  const [trasfering, setTransfering] = useState(false);\n  const [trasferSensibleFtGenesis, setTrasferSensibleFtGenesis] = useState(\"\");\n  const [account] = useGlobalState(\"account\");\n  const [key] = useGlobalState(\"key\");\n  const [bsvBalance] = useGlobalState(\"bsvBalance\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n  const [initReceivers, setInitReceivers] = useState([]);\n  const [initDatas, setInitDatas] = useState([]);\n  const [initRabins, setRabins] = useState([]);\n  const [initNoBroadcast, setInitNoBroadcast] = useState(false);\n\n  const handleTransfer = (genesis) => {\n    setTransfering(true);\n    genesis && setTrasferSensibleFtGenesis(genesis);\n  };\n  const handleCancelTransfer = () => {\n    setTransfering(false);\n    setTrasferSensibleFtGenesis(\"\");\n  };\n\n  const getHashData = () => {\n    if (!window.opener) {\n      return null;\n    }\n    const hash = window.location.hash.substr(1);\n    try {\n      const data = JSON.parse(decodeURIComponent(hash));\n      if (data.type === \"popup\") {\n        if (typeof data.data === \"object\") {\n          return data;\n        }\n      }\n    } catch (err) {}\n    return null;\n  };\n  const handlePopResponseCallback = (resObj) => {\n    const data = getHashData();\n    if (!data) {\n      return;\n    }\n    const postMsg = createPostMsg(window.opener, \"*\");\n    postMsg.emit(data.id, {\n      type: \"response\",\n      data: {\n        ...data.data.data,\n        ...resObj,\n      },\n    });\n  };\n\n  // todo 数值计算 使用 bignumber\n  // todo 此处接收 postMessage 消息，处理登录,transfer\n  const requestAccountCondition = key?.address && account?.network;\n  const transferBsvCondition =\n    requestAccountCondition &&\n    bsvBalance &&\n    util.greaterThanEqual(bsvBalance.balance, 0);\n  useOnceCall(() => {\n    const data = getHashData();\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"requestAccount\") {\n      return;\n    }\n    Modal.confirm({\n      title: \"Connect\",\n      content: (\n        <div>\n          Allow <b>{params.name}</b> to connect your web wallet\n        </div>\n      ),\n      onOk: () => {\n        handlePopResponseCallback({ response: true });\n      },\n      onCancel: () => {\n        handlePopResponseCallback({ error: \"user reject\" });\n      },\n    });\n  }, !!requestAccountCondition);\n  useOnceCall(() => {\n    const data = getHashData();\n    console.log(\"mvc hash data\", data);\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"transferBsv\") {\n      return;\n    }\n    // balance check\n    const outputTotal = params.receivers.reduce(\n      (prev, cur) => util.plus(prev, cur.amount),\n      0\n    );\n    if (util.greaterThan(outputTotal, bsvBalance.balance)) {\n      handlePopResponseCallback({ error: \"insufficient mvc balance\" });\n      return;\n    }\n    setTransfering(true);\n    setInitReceivers(params.receivers);\n    setInitNoBroadcast(params.noBroadcast);\n  }, !!transferBsvCondition);\n  useOnceCall(() => {\n    const data = getHashData();\n    console.log(\"hashdata\", data);\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"transferSensibleFt\") {\n      return;\n    }\n    // sensibleft balance check\n    const outputTotal = params.receivers.reduce(\n      (prev, cur) => util.plus(prev, cur.amount),\n      0\n    );\n    console.log(\"outputTotal\", outputTotal);\n    const ft = sensibleFtList.find((item) => item.genesis === params.genesis);\n    console.log(\"ft\", ft);\n    if (!ft) {\n      handlePopResponseCallback({ error: \"insufficient ft balance\" });\n      return;\n    }\n    if (util.greaterThan(outputTotal, ft.balance)) {\n      handlePopResponseCallback({ error: \"insufficient ft balance\" });\n      return;\n    }\n    setTransfering(true);\n    setTrasferSensibleFtGenesis(params.genesis);\n    setInitReceivers(params.receivers);\n    setRabins(params.rabinApis);\n    setInitNoBroadcast(params.noBroadcast);\n  }, !!transferBsvCondition);\n  useOnceCall(() => {\n    const data = getHashData();\n    console.log(\"mvc hash data\", data);\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"transferAll\") {\n      return;\n    }\n    // balance check\n    params.datas.forEach((item) => {\n      // balance check\n      const isBsv = !item.genesis;\n      const ft = sensibleFtList.find((v) => v.genesis === item.genesis);\n\n      const outputTotal = item.receivers.reduce(\n        (prev, cur) => util.plus(prev, cur.amount),\n        0\n      );\n      if (isBsv && util.greaterThan(outputTotal, bsvBalance.balance)) {\n        handlePopResponseCallback({ error: \"insufficient mvc balance\" });\n        return;\n      }\n      if (ft && util.greaterThan(outputTotal, ft.balance)) {\n        handlePopResponseCallback({ error: \"insufficient ft balance\" });\n        return;\n      }\n      setTransfering(true);\n      setInitDatas(params.datas);\n    });\n  }, !!transferBsvCondition);\n  useEffect(() => {\n    const obu = window.onbeforeunload;\n    window.onbeforeunload = function (event) {\n      handlePopResponseCallback({ error: \"use closed\" });\n      return obu && obu(event);\n    };\n  });\n  return (\n    <div className=\"App\" style={{ overflow: \"hidden\" }}>\n      <Header accountName=\"harry\" />\n      <LoginPanel />\n      {!trasfering && <AccountInfoPanel onTransfer={handleTransfer} />}\n      {trasfering &&\n        (!initDatas || initDatas.length < 1 ? (\n          <TransferPanel\n            genesis={trasferSensibleFtGenesis}\n            rabinApis={initRabins}\n            onCancel={handleCancelTransfer}\n            onTransferCallback={handlePopResponseCallback}\n            initReceivers={initReceivers}\n            noBroadcast={initNoBroadcast}\n          />\n        ) : (\n          <TransferAllPanel\n            onCancel={handleCancelTransfer}\n            onTransferCallback={handlePopResponseCallback}\n            initDatas={initDatas}\n          />\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as actions from \"./state/action\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\nimport { SensibleApi } from \"meta-contract\";\nimport { mvc } from \"mvc-scrypt\";\n\n(function () {\n  /*const originBroadcast = SensibleApi.prototype.broadcast;\n  SensibleApi.prototype.broadcast = async function (hex) {\n    const txid = new mvc.Transaction(hex).hash;\n    const txMsg = `txid: ${txid}; rawtx: ${hex}`;\n    console.log(\"meta-contract 广播\", txMsg);\n    try {\n      const res = await originBroadcast.call(this, hex);\n      return res;\n    } catch (err) {\n      console.log(\"meta-contract 广播错误\", txMsg);\n      const newError = new Error(\n        `${err.message} meta-contract 广播错误 ${txMsg}`\n      );\n      setTimeout(() => {\n        throw newError;\n      }, 0);\n      throw err;\n    }\n  };*/\n})();\n\nconst isIframe = window === window.top;\n\nSentry.init({\n  dsn: \"https://d223c2a1d1bf44b6a657051ac9a99b16@o877284.ingest.sentry.io/5827823\",\n  integrations: [new Integrations.BrowserTracing()],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n});\n\nif (isIframe) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n} else {\n  actions.runIframeTask();\n}\n\n// delete account when page/iframe exit\n(function () {\n  const obu = window.onbeforeunload;\n  window.onbeforeunload = function (event) {\n    const isPopup = !!window.opener;\n    if (!isPopup) {\n      actions.saveAccount(null);\n    }\n    return obu && obu(event);\n  };\n})();\n\n// alert(window === window.top);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\nexport enum NetWork {\n  Testnet = 'testnet',\n  Mainnet = 'mainnet',\n  STN = 'STN'\n}\n\n"],"sourceRoot":""}