{"version":3,"sources":["lib/util.ts","lib/index.ts","state/state.ts","state/action.ts","hooks.js","App.js","reportWebVitals.js","index.js","web3/wallet.ts"],"names":["div","a","biga","BigNumber","i","arguments","length","undefined","toString","multi","multipliedBy","plus","minus","getDecimalString","decimalNum","pow","lessThan","b","lt","lessThanEqual","lte","greaterThan","gt","greaterThanEqual","gte","checkFeeRate","tx","minFeeRate","size","toBuffer","feeRate","getFee","msg","concat","message","error","Error","safeJsonStringify","data","JSON","parse","stringify","key","value","SCAN_URL","SCAN_URL_TESTNET","getSensibleApiPrefix","network","test","NetWork","Mainnet","isSensibleSuccess","res","status","sleep","ms","Promise","resolve","setTimeout","formatValue","decimal","util","isValidAddress","address","mvc","Address","_","generateKeysFromEmailPassword","email","pass","Testnet","s","regchars","match","regupchars","bufferS","Buffer","from","crypto","Hash","sha256","tmp","hex","privateKey","PrivateKey","toAddress","publicKey","toPublicKey","getSensibleFtHistoryUrl","genesis","codehash","getWocAddressUrl","url","getWocTransactionUrl","txid","signAnyTx","_x","_signAnyTx","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","txHex","scriptHex","inputIndex","satoshis","script","sig","wrap","_context","prev","next","Transaction","Script","fromBuffer","toHex","signTx","toASM","Number","abrupt","stop","getAddressSensibleFtList","_x2","_x3","_getAddressSensibleFtList","_callee2","pageSize","page","list","_context2","getAddressSensibleFtListByPage","sent","_toConsumableArray","t0","console","log","_x4","_x5","_x6","_getAddressSensibleFtListByPage","_callee3","apiPrefix","_args3","_context3","axios","get","map","item","codeHash","tokenName","name","tokenSymbol","symbol","tokenDecimal","balance","confirmedString","unconfirmedString","statusText","getAddressBsvUtxoList","_x7","_x8","_x9","_getAddressBsvUtxoList","_callee4","_args4","_context4","txId","outputIndex","outIndex","getAddressBsvBalanceByUtxo","_x12","_x13","_getAddressBsvBalanceByUtxo","_callee6","sum","utxoList","total","_context6","reduce","cur","broadcastSensibleQeury","_x22","_x23","_broadcastSensibleQeury","_callee9","rawtx","apiPrefx","_context9","post","hash","mapBsvFeeError","err","getCustomSigners","findValue","customSatotxList","find","satotxList","selectNotNullSigners","_len","signerList","Array","_key","_i","_signerList","signers","transferSensibleFt","_x24","_x25","_x26","_x27","_x28","_x29","_transferSensibleFt","_callee10","senderWif","receivers","utxos","noBroadcast","customSigner","ft","_yield$ft$transfer","routeCheckTx","txParseRes","errMsg","isBsvAmountExceed","isFtUtxoAmountExceed","_yield$ft$transfer2","_txid","_tx","_txParseRes","_err2","_errMsg","_yield$ft$transfer3","_txid2","_tx2","_txParseRes2","_err3","_args10","_context10","SensibleFT","purse","feeb","transfer","parseTransaction","serialize","outputs","indexOf","mergeBsvUtxo","t1","t2","merge","t3","t4","Signature","sighashType","SIGHASH_ALL","SIGHASH_FORKID","unlockP2PKHInput","sigtype","prevTxId","inputs","signature","Sighash","sign","output","satoshisBN","setScript","buildPublicKeyHashIn","toDER","checkBsvReceiversSatisfied","satified","txAddressAmountMap","getKey","amount","forEach","rece","transferBsv","_x30","_x31","_x32","_transferBsv","_callee11","allUtxos","totalOutput","utxoValue","selectedUtxoList","dust","utxoResList","_args11","_context11","feePerKb","push","addInput","Input","PublicKeyHash","Output","buildPublicKeyHashOut","empty","to","change","clearOutputs","index","type","Sentry","fee","_x33","_x34","_mergeBsvUtxo","_callee12","utxolist","_context12","parseTokenContractScript","scriptBuf","input","ftToken","ret","addr","tokenAmount","_objectSpread","isFt","ftDetail","tokenAddress","window","defaultSatotx","satotxApiPrefix","satotxPubKey","initialState","account","bsvBalance","sensibleFtList","satotxConfigMap","Map","set","_createGlobalState","createGlobalState","useGlobalState","getGlobalState","setGlobalState","accountStorageKey","saveAccountStorage","str","localStorage","setItem","getAccountStorage","getItem","pollingBsvTimer","pollingSensibleFtTimer","pollingBsvBalance","_pollingBsvBalance","fn","clearInterval","_ref","setInterval","pollingSensibleFtBalance","_pollingSensibleFtBalance","_ref2","valid_sensibleFtList","filter","saveAccount","_saveAccount","_callee5","_context5","password","_runIframeTask","_callee14","hashdata","postMsg","id","preAccount","preBsvBalance","preSensibleFtBalance","accountKey","isBsvBalanceEqual","isSensibleFtBalanceEqual","isAccountEqual","requestLatestData","handleRequest","signed","_context14","top","decodeURIComponent","location","substr","createPostMsg","emit","b1","b2","sort","item1","item2","localeCompare","_ref3","latestAccount","latestBalance","equal","_latestBalance","_equal","method","on","_ref4","_callee7","eventData","requestId","_context7","params","response","_callee8","_context8","_ref9","_preAccount","_preAccount2","PublicKey","_callee13","_context13","useOnceCall","cb","condition","isCalledRef","useRef","useEffect","current","Option","Select","Header","_useGlobalState","_slicedToArray","_useGlobalState3","_useState","useState","_useState2","decodeModalVisible","setDecodeModalVisible","_useState3","_useState4","setRawtx","_useState5","_useState6","setNetwork","_useState7","_useState8","resultModalVisible","setResultModalVisible","_jsxs","className","children","_jsx","Popover","title","content","_Fragment","Button","onClick","actions","open","Modal","visible","onCancel","TextArea","rows","onChange","e","target","style","width","placeholder","LoginPanel","_useGlobalState5","_Form$useForm","Form","useForm","form","Card","bordered","layout","onFinish","confirm","href","rel","onOk","getFieldsValue","Item","rules","required","prefix","UserOutlined","min","transform","trim","Password","LockOutlined","visibilityToggle","label","htmlType","AccountInfoPanel","onWithDraw","onTransfer","_useGlobalState7","_useGlobalState9","_useGlobalState11","_useGlobalState13","handleTransfer","margin","QRCode","Row","justify","Col","span","List","itemLayout","dataSource","renderItem","placement","Meta","description","height","display","alignItems","getRabins","_getRabins","rabinApis","promises","rabins","rabinApi","all","then","pubKey","TransferAllPanel","_ref2$initDatas","initDatas","onTransferCallback","_useGlobalState15","_useGlobalState17","_useGlobalState19","_useGlobalState21","_Form$useForm3","_useState9","_useState10","loading","setLoading","values","isBsv","token","setFieldsValue","handleSubmit","receiverLists","broadcastBsv","broadcastSensibleFt","broadcastBsvAndToken","_ref5","formatReceiverList","transferRes","_ref7","_ref6","_ref8","txs","_loop","_ret","_txs","txInfo","resItem","totalOutputValueFloatDuck","totalOutputValue","_msg","_yield$broadcastSensi","_outputIndex","_output","v","wif","delegateYield","routeCheckTxid","routeCheckTxHex","routeCheckOutputs","_loop2","_ret2","_msg2","_yield$broadcastSensi2","amountCheckTx","_outputIndex2","_output2","bsvRawTx","amountCheckRawTx","tokenRawTx","cursor","LeftOutlined","formatBalance","canEdit","fontWeight","fields","_ref10","add","remove","fieldKey","restField","Space","marginBottom","align","validator","reject","disabled","InputNumber","shape","icon","MinusOutlined","PlusOutlined","block","TransferPanel","_ref11","_ref11$genesis","_ref11$initReceivers","initReceivers","_ref11$rabinApis","_useGlobalState23","_useGlobalState25","_useGlobalState27","_useGlobalState29","_Form$useForm5","_useState11","_useState12","receiverList","_ref12","_form$getFieldsValue","_ref13","_msg3","success","_ref14","_ref15","_len2","_key2","App","_useState13","_useState14","trasfering","setTransfering","_useState15","_useState16","trasferSensibleFtGenesis","setTrasferSensibleFtGenesis","_useGlobalState31","_useGlobalState33","_useGlobalState35","_useGlobalState37","_useState17","_useState18","setInitReceivers","_useState19","_useState20","setInitDatas","_useState21","_useState22","initRabins","setRabins","_useState23","_useState24","initNoBroadcast","setInitNoBroadcast","handleCancelTransfer","getHashData","opener","handlePopResponseCallback","resObj","requestAccountCondition","transferBsvCondition","_data$data$data","_data$data$data2","outputTotal","_data$data$data3","_data$data$data4","datas","obu","onbeforeunload","event","overflow","accountName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isIframe","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70f11be1.chunk.js","sourcesContent":["import BigNumber from \"bignumber.js\";\nimport {message} from 'antd'\n\n// 最大是253，那么全部用 string 吧\ntype NumberDuck = number | string\n\nexport function div (a: NumberDuck, ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.div(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function multi(a: NumberDuck,  ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.multipliedBy(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function plus(a: NumberDuck,  ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.plus(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function minus(a: NumberDuck,  ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.minus(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function getDecimalString(decimalNum: number): string {\n    return new BigNumber(10).pow(decimalNum).toString()\n}\n\nexport function lessThan(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.lt(new BigNumber(b))\n}\n\nexport function lessThanEqual(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.lte(new BigNumber(b))\n}\n\nexport function greaterThan(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.gt(new BigNumber(b))\n}\n\nexport function greaterThanEqual(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.gte(new BigNumber(b))\n}\n\nexport function equal(a: NumberDuck, b: NumberDuck): boolean {\n    let biga = new BigNumber(a)\n    return biga.eq(new BigNumber(b))\n}\n\nexport function toString(a: NumberDuck): string {\n    return new BigNumber(a).toString()\n}\n\nexport function checkFeeRate(tx: any, minFeeRate?: number) {\n    minFeeRate = minFeeRate || 0.5\n    const size = tx.toBuffer().length\n    const feeRate = tx.getFee() / size;\n    if (feeRate < minFeeRate) {\n        const msg = `The fee rate should not be less than ${minFeeRate}, but in the end it is ${feeRate}`\n        message.error(msg)\n        throw new Error(msg)\n    }\n}\n\nexport function safeJsonStringify(data: any) {\n    return JSON.parse(JSON.stringify(data, (key, value) =>\n        typeof value === 'bigint'\n            ? value.toString()\n            : value // return everything else unchanged\n    ));\n}\n\n// 传过来 string/int -> 显示(float) -> bigint\n","import { mvc, toHex, signTx } from 'mvc-scrypt';\nimport { NetWork } from '../web3';\nimport {Key, SensibleFt, SensibleSatotx, TransferReceiver, BsvUtxo} from '../state/stateType'\nimport axios from 'axios'\nimport {SensibleFT} from 'meta-contract'\nimport * as util from './util'\nimport * as Sentry from \"@sentry/react\";\nimport customSatotxList from './customSatotx.json'\n\nconst SCAN_URL = 'https://mvcscan.com'\nconst SCAN_URL_TESTNET = 'https://mvcscan.com'\n\nfunction getSensibleApiPrefix(network: NetWork) {\n    const test = network === NetWork.Mainnet ? '' : '-testnet'\n    return `https://api-mvc${test}.metasv.com`\n}\nfunction isSensibleSuccess(res: any) {\n    return res.status === 200\n}\n\nfunction sleep(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport function formatValue(value: number, decimal: number) {\n    // const bigNum = mvc.crypto.BN.fromNumber(value)\n    // return bigNum.div(10**decimal).toString(10)\n    // return value / (10**decimal)\n    return util.div(value, util.getDecimalString(decimal))\n}\n\nexport function isValidAddress(network: NetWork, address: string) {\n    try {\n        new mvc.Address(address, network)\n        return true\n    } catch (_) {\n        return false\n    }\n}\n\nexport function generateKeysFromEmailPassword(email: string, pass: string, network: NetWork = NetWork.Testnet): Key {\n    let s: string = email\n    s += '|'+pass+'|';\n    s += s.length+'|!@'+((pass.length*7)+email.length)*7;\n    var regchars = (pass.match(/[a-z]+/g)) ? pass.match(/[a-z]+/g)!.length : 1;\n    var regupchars = (pass.match(/[A-Z]+/g)) ? pass.match(/[A-Z]+/g)!.length : 1;\n    var regnums = (pass.match(/[0-9]+/g)) ? pass.match(/[0-9]+/g)!.length : 1;\n    s += ((regnums+regchars)+regupchars)*pass.length+'3571';\n    s += (s+''+s);\n\n    let bufferS = Buffer.from(s)\n    bufferS = mvc.crypto.Hash.sha256(bufferS)\n\tfor(let i=0;i<=49;i++){\n        const tmp = Buffer.from(bufferS.toString('hex'))\n        bufferS = mvc.crypto.Hash.sha256(tmp)\n\t}\n    const hex = mvc.crypto.Hash.sha256(Buffer.from(bufferS.toString('hex'))).toString('hex')\n    \n    const privateKey = new mvc.PrivateKey(hex, network)\n    const address = privateKey.toAddress(network).toString()\n    \n    return {\n        address,\n        privateKey: privateKey.toString(),\n        publicKey: privateKey.toPublicKey().toString()\n    }\n}\n\nexport function getSensibleFtHistoryUrl(network: NetWork, address: string, genesis: string, codehash: string) {\n    // https://sensiblequery.com/#/ft/utxo/a1961d0c0ab39f1bd0f79c2f6ae27138cca0620c/d4266deb03b5fdb7c9af39fa71f86f4b1f6390422e9bcd1556399a3f0063965f00000000/1111111111111111111114oLvT2\n    const test = network === NetWork.Mainnet ? '' : '/test'\n    return `https://sensiblequery.com${test}/#/ft/utxo/${codehash}/${genesis}/${address}`\n}\n\nexport function getWocAddressUrl(network: NetWork, address: string) {\n    let url = ''\n    if (network === NetWork.Mainnet) {\n        url = SCAN_URL + '/address/'\n    } \n    if (network === NetWork.Testnet) {\n        url = SCAN_URL_TESTNET + '/address/'\n    }\n    if (!url) {\n        return url\n    }\n    url += address\n    return url\n}\n\nexport function getWocTransactionUrl(network: NetWork, txid: string) {\n    let url = ''\n    if (network === NetWork.Mainnet) {\n        url = SCAN_URL + '/tx/'\n    } \n    if (network === NetWork.Testnet) {\n        url = SCAN_URL_TESTNET + '/tx/'\n    }\n    if (!url) {\n        return url\n    }\n    url += txid\n    return url\n}\n\nexport async function signAnyTx(options: any) {\n    const {txHex, scriptHex, inputIndex, privateKey, publicKey, satoshis} = options\n    const tx = new mvc.Transaction(txHex)\n    const script = mvc.Script.fromBuffer(Buffer.from(scriptHex, 'hex'))\n    const sig = toHex(signTx(tx, privateKey , script.toASM(), Number(satoshis), inputIndex))\n    \n    return {\n        publicKey: publicKey.toString(),\n        sig,\n    }\n}\n\n// todo 分页获取\nexport async function getAddressSensibleFtList(network: NetWork, address: string): Promise<SensibleFt[]> {\n    // todo remove next line\n    let res: SensibleFt[] = []\n    const pageSize = 20\n    try {\n        for (let page = 1; ; page++) {\n            const list = await getAddressSensibleFtListByPage(network, address, page, pageSize)\n            res = [...res, ...list]\n            if (list.length < pageSize) {\n                break\n            }\n        }\n    } catch (err) {\n        console.log('getAddressSensibleFtList error')\n        console.error(err)\n    }\n    return res;\n}\n\nexport async function getAddressSensibleFtListByPage(network: NetWork, address: string, page: number, pageSize: number = 20): Promise<SensibleFt[]> {\n    const apiPrefix = getSensibleApiPrefix(network)\n\n    const res = await axios.get(`${apiPrefix}/contract/ft/address/${address}/balance`)\n    const success = isSensibleSuccess(res)\n\n    if (success) {\n        return (res.data || []).map((item: any) => {\n            return {\n                genesis: item.genesis,\n                codehash: item.codeHash,\n                tokenName: item.name,\n                tokenSymbol: item.symbol,\n                tokenDecimal: item.decimal,\n                balance: util.plus(item.confirmedString, item.unconfirmedString),\n            }\n        })\n    }\n    throw new Error(res.statusText)\n}\n\n// 获取 mvc utxo\nexport async function getAddressBsvUtxoList(network: NetWork, address: string, page: number, pageSize: number=16): Promise<BsvUtxo[]> {\n    const cursor = (page - 1) * pageSize\n    const apiPrefix = getSensibleApiPrefix(network)\n    const res = await axios.get(`${apiPrefix}/address/${address}/utxo`)\n    const success = isSensibleSuccess(res)\n    if (success) {\n        return (res.data || []).map((item: any) => {\n            return {\n                txId: item.txid, \n                outputIndex: item.outIndex,\n                satoshis: item.value,\n                address: address,\n            }\n        })\n    }\n\n    // const fakeUtxoList: BsvUtxo[] = [\n    //     {\n    //         txId: '6a18f5b859fb4c281affaf8f6245a2fe0813867d4b7d24948da18e099462619b',\n    //         outputIndex: 0,\n    //         satoshis: 98775,\n    //         address,\n    //     },\n    //     {\n    //         txId: 'de980facfe7b10a84bfa658130b2b7725565510f967534459d63e6c9717a08e2',\n    //         outputIndex: 0,\n    //         satoshis: 98679,\n    //         address,\n    //     },\n    //     {\n    //         txId: '8ace8ab3995de63af867d929561b3a48bb499ea8d6e64c2ecefba29c6213764f',\n    //         outputIndex: 4,\n    //         satoshis: 4939535,\n    //         address,\n    //     },\n    //     {\n    //         txId: '74bec534becb77f894bcacaf2386604642a1ea00e371838b1780f5235a12bb9d',\n    //         outputIndex: 2,\n    //         satoshis: 45033315,\n    //         address,\n    //     }\n    // ]\n    // if (page === 1) {\n    //     return fakeUtxoList\n    // }\n    // return []\n    \n    throw new Error(res.statusText)\n}\n\n// 获取bsv 余额, 这里加入了ft utxo的值，暂时不能用\nexport async function getAddressBsvBalance(network: NetWork, address: string): Promise<number | string> {\n    const apiPrefix = getSensibleApiPrefix(network)\n    const res = await axios.get(`${apiPrefix}/address/${address}/balance`)\n    const success = isSensibleSuccess(res)\n    if (success) {\n        return util.plus(res.data.confirmed, res.data.unconfirmed)\n    }\n    throw new Error(res.statusText)\n}\n\nexport async function getAddressBsvBalanceByUtxo(network: NetWork, address: string): Promise<string> {\n    let page = 1\n    const pageSize = 16\n    let sum: string = '0'\n    for (;;) {\n        const utxoList = await getAddressBsvUtxoList(network, address, page, pageSize)\n        const total = utxoList.reduce((prev: any, cur: any) => util.plus(prev, cur.satoshis), '0')\n        sum = util.plus(sum, total)\n        if (utxoList.length < pageSize) {\n            break\n        }\n        page++\n    }\n    console.log('balance', sum)\n    return sum\n}\n\n// 获取 sensible ft 余额\nexport async function getAddressSensibleFtBalance(network: NetWork, address: string, codehash: string, genesis: string): Promise<number> {\n    const apiPrefix = getSensibleApiPrefix(network)\n    const res = await axios.get(`${apiPrefix}/contract/ft/address/${address}/balance?codeHash=${codehash}&&genesis=${genesis}`)\n    const success = isSensibleSuccess(res)\n    if (success) {\n        return Number(util.plus(res.data[0].confirmedString, res.data[0].unconfirmedString))\n    }\n    throw new Error(res.statusText)\n}\n\n// 获取 sensible 余额 地址\nexport async function getSensibleAddressUrl(network: NetWork, address: string, codehash: string, genesis: string) {\n    const test = network === NetWork.Mainnet ? '' : '/test'\n    // https://sensiblequery.com/#/ft/utxo/ac939f3cf7aba022d09f05e5448f1e635c81dbb3/598d220eaecb68cf783cbc6cc6295d042897874f/1FJCX1QG7KyaHpx1U2iVe4xoAWNVB1Wd3L\n    return `https://sensiblequery.com${test}/#/ft/utxo/${codehash}/${genesis}/${address}`\n}\n\n\n// 广播交易\nexport async function broadcastSensibleQeury(network: NetWork, rawtx: string) {\n    const apiPrefx = getSensibleApiPrefix(network)\n    console.log('sensible 交易广播', network, rawtx)\n    const res = await axios.post(`${apiPrefx}/tx/broadcast`, {\n        hex: rawtx,\n    })\n    const success = isSensibleSuccess(res)\n    if (success) {\n        return new mvc.Transaction(rawtx).hash\n    }\n    throw new Error('broadcast failed')\n}\n\n\n// 发送 token 交易\nconst mapBsvFeeError = (err: Error) => {\n    if (err.message === \"Insufficient balance.\") {\n        // 将模糊的错误信息转换\n        return new Error('Low mvc balance to pay miners')\n    }\n    return err\n}\nconst getCustomSigners = (codehash: string, genesis: string):SensibleSatotx[] => {\n    const findValue = customSatotxList.find(item => item.codehash === codehash && item.genesis === genesis)\n    if (findValue) {\n        return findValue.satotxList\n    }\n    return []\n}\nconst selectNotNullSigners = (...signerList: SensibleSatotx[][]): SensibleSatotx[] =>  {\n    for (let signers of signerList) {\n        if (signers && signers.length > 0) {\n            return signers\n        }\n    }\n    return []\n}\nexport async function transferSensibleFt(network: NetWork, signers: SensibleSatotx[], senderWif: string, receivers: TransferReceiver[], codehash: string, genesis: string, utxos: any = false, noBroadcast: boolean = false){\n    \n    const customSigner = getCustomSigners(codehash, genesis)\n    signers = selectNotNullSigners(signers, customSigner)\n\n    console.log('signers', signers)\n    \n    const ft = new SensibleFT({\n        network: network as any,\n        purse: senderWif,\n        feeb: 1.0,\n    })\n    console.log('transferSensibleFt', receivers, network, codehash, genesis, signers)\n\n    try {\n        const {txid, tx, routeCheckTx} = await ft.transfer({\n            senderWif: senderWif,\n            receivers,\n            codehash,\n            genesis,\n            utxos: utxos,\n            noBroadcast,\n        })\n        if (noBroadcast === true) {\n            return {tx, routeCheckTx}\n        }\n        util.checkFeeRate(tx)\n        const txParseRes = parseTransaction(network, tx.serialize(true))\n        return {\n            txid,\n            outputs: txParseRes.outputs,\n        }\n    } catch (_err: any) {\n        const err = mapBsvFeeError(_err)\n        const errMsg = err.toString();\n        const isBsvAmountExceed =\n          errMsg.indexOf(\n            \"Mvc utxos should be no more than 3 in \"\n          ) > 0;\n        let isFtUtxoAmountExceed = errMsg.indexOf('Too many token-utxos') > 0;\n        console.log(\"broadcast sensible ft error\");\n        console.error(err);\n\n        if (!isBsvAmountExceed && !isFtUtxoAmountExceed) {\n            throw err;\n        }\n\n        // 如果 mvc utxo 先 merge mvc utxo\n        if (isBsvAmountExceed) {\n            try {\n                await mergeBsvUtxo(network, senderWif)\n                await sleep(3000)\n            } catch (err) {\n                console.log('merge mvc utxo fail')\n                console.error(err)\n                throw err\n            }\n\n            // merge 后重新发起 ft transfer 交易\n            try {\n                const {txid, tx} = await ft.transfer({\n                    senderWif: senderWif,\n                    receivers,\n                    codehash,\n                    genesis,\n                })\n                util.checkFeeRate(tx)\n                const txParseRes = parseTransaction(network, tx.serialize(true))\n                return {\n                    txid,\n                    outputs: txParseRes.outputs,\n                }\n            } catch (_err: any) {\n                const err = mapBsvFeeError(_err)\n                console.log('ft transfer fail after mvc utxo merge')\n                console.error(err)\n                const errMsg = err.toString()\n                isFtUtxoAmountExceed = errMsg.indexOf('Too many token-utxos') > 0;\n                if (!isFtUtxoAmountExceed) {\n                    throw err\n                }\n            }\n        }\n\n        if (isFtUtxoAmountExceed) {\n            // merge utxo\n            try {\n                //@ts-ignore\n                await ft.merge()\n                //util.checkFeeRate(tx)\n                await sleep(3000)\n            } catch (err) {\n                console.log('merge ft utxo fail')\n                console.error(err)\n                throw err\n            }\n\n            // merge 后重新发起 ft transfer 交易\n            try {\n                const {txid, tx} = await ft.transfer({\n                    senderWif: senderWif,\n                    receivers,\n                    codehash,\n                    genesis,\n                })\n                util.checkFeeRate(tx)\n                const txParseRes = parseTransaction(network, tx.serialize(true))\n                return {\n                    txid,\n                    outputs: txParseRes.outputs,\n                }\n            } catch (_err: any) {\n                const err = mapBsvFeeError(_err)\n                console.log('ft transfer fail after ft utxo merge')\n                console.error(err)\n                throw err\n            }\n        }\n    } \n}\n\nconst Signature = mvc.crypto.Signature;\nexport const sighashType = Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID;\n\n\n// p2pkh 解锁\nexport function unlockP2PKHInput(privateKey: mvc.PrivateKey, tx: mvc.Transaction, inputIndex: number, sigtype: number) {\n    const sig = new mvc.Transaction.Signature({\n      publicKey: privateKey.publicKey,\n      prevTxId: tx.inputs[inputIndex].prevTxId,\n      outputIndex: tx.inputs[inputIndex].outputIndex,\n      inputIndex,\n      signature: mvc.Transaction.Sighash.sign(\n        tx,\n        privateKey,\n        sigtype,\n        inputIndex,\n        tx.inputs[inputIndex].output.script,\n        tx.inputs[inputIndex].output.satoshisBN\n      ),\n      sigtype,\n    });\n  \n    tx.inputs[inputIndex].setScript(\n      mvc.Script.buildPublicKeyHashIn(\n        sig.publicKey,\n        sig.signature.toDER(),\n        sig.sigtype\n      )\n    );\n}\n\n// 发送 mvc 交易\nfunction checkBsvReceiversSatisfied(receivers: TransferReceiver[], tx: any, network: NetWork) {\n    let satified = true\n    const txAddressAmountMap: {[key: string]: number} = {}\n    const getKey = (address: string, amount: any) => {\n        return `${address}_${util.toString(amount)}`\n    }\n    tx.outputs.forEach((output: any) => {\n        const address = output.script.toAddress(network);\n        const amount = output.satoshis\n        const key = getKey(address, amount)\n        txAddressAmountMap[key] = (txAddressAmountMap[key] || 0) + 1\n    })\n    for (let i = 0; i < receivers.length; i++) {\n        const rece = receivers[i]\n        const key = getKey(rece.address, rece.amount)\n        if (!txAddressAmountMap[key]) {\n            satified = false\n            break\n        }\n        txAddressAmountMap[key] = txAddressAmountMap[key] - 1\n    }\n    return satified\n}\nexport async function transferBsv(network: NetWork, senderWif: string, receivers: TransferReceiver[], noBroadcast: boolean=false, allUtxos: boolean=false) {\n    // 1. 获取用户 utxo 列表\n    // 2. 判断 utxo 金额 是否 满足 receivers 金额\n    // 3. 构造交易\n    // 4. 广播交易\n    console.log('arguments', network, senderWif, receivers)\n    const address = new mvc.PrivateKey(senderWif, network).toAddress(network)\n    const balance = await getAddressBsvBalanceByUtxo(network, address)\n    const totalOutput = receivers.reduce((prev: any, cur) => util.plus(prev, cur.amount), '0')\n    if (util.lessThan(balance, totalOutput)) {\n        throw new Error('Insufficient_bsv_Balance')\n    }\n    let utxoValue: string = '0'\n    let selectedUtxoList = []\n\n    const tx = new mvc.Transaction()\n    tx.feePerKb(500)\n    const dust = 456\n\n    // input = output + fee + change\n    // 异常情况: 加上 change 后, fee 增加, 原本 input 不够了, 此时将所有输出移除, 然后，暂不考虑\n    \n    const pageSize = 16\n    for (let page = 1; ;page++) {\n        const utxoResList = await getAddressBsvUtxoList(network, address, page, pageSize)\n        for (let i = 0; i < utxoResList.length; i++) {\n            const item = utxoResList[i]\n            utxoValue = util.plus(utxoValue, item.satoshis)\n            selectedUtxoList.push(item)\n            tx.addInput(\n                new mvc.Transaction.Input.PublicKeyHash({\n                    output: new mvc.Transaction.Output({\n                        script: mvc.Script.buildPublicKeyHashOut(item.address),\n                        satoshis: item.satoshis,\n                    }),\n                    prevTxId: item.txId,\n                    outputIndex: item.outputIndex,\n                    script: mvc.Script.empty(),\n                })\n            );\n            if (!allUtxos && util.lessThanEqual(util.plus(totalOutput, dust), utxoValue)) {\n                break\n            }\n        }\n        if (!allUtxos && util.lessThanEqual(util.plus(totalOutput, dust), utxoValue)) {\n            break\n        }\n        if (utxoResList.length <= pageSize) {\n            break\n        }\n    }\n    receivers.forEach(item => {\n        tx.to(item.address, +item.amount)\n    })\n    if (util.greaterThan(util.minus(utxoValue, +totalOutput), 0)) {\n        tx.change(address)\n    }\n    // 如果 (utxo输入 - fee - 所有输出) = 找零 < dust，那么全部转出\n    if (util.lessThan(util.minus(utxoValue, tx.getFee(), totalOutput), dust)) {\n        // 全部转出\n        tx.clearOutputs()\n        receivers.forEach((item, index) => {\n            \n            if (receivers.length === index + 1) {\n                // 最后一个使用 change\n                tx.change(item.address)\n            } else {\n                tx.to(item.address, +item.amount)\n            }\n        })\n    }\n    tx.inputs.forEach((_: any, inputIndex: number) => {\n        const privateKey = new mvc.PrivateKey(senderWif)\n        unlockP2PKHInput(privateKey, tx, inputIndex, sighashType);\n    });\n    util.checkFeeRate(tx)\n    if (noBroadcast === true) {\n        return tx\n    }\n    const txid = await broadcastSensibleQeury(network, tx.serialize())\n    const txParseRes = parseTransaction(network, tx.serialize(true))\n\n    const amountSatified = checkBsvReceiversSatisfied(receivers, tx, network)\n    if (!amountSatified) {\n        console.log(util.safeJsonStringify({\n            type: 'bsvTransferAmountNotSatified',\n            txid: tx.hash,\n            receivers,\n            outputs: txParseRes.outputs,\n        }))\n        Sentry.captureMessage(`bsvTransferAmountNotSatified_${address}_${tx.hash}`);\n    }\n    return {\n        txid,\n        outputs: txParseRes.outputs,\n        fee: tx.getFee()\n    }\n}\n\n// 合并 mvc utxo, 合并一页\nexport async function mergeBsvUtxo(network: NetWork, senderWif: string) {\n    const address = new mvc.PrivateKey(senderWif, network).toAddress(network)\n    const utxolist = await getAddressBsvUtxoList(network, address, 1)\n    const tx = new mvc.Transaction()\n    tx.feePerKb(500)\n    utxolist.forEach(item => {\n        tx.addInput(new mvc.Transaction.Input.PublicKeyHash({\n            output: new mvc.Transaction.Output({\n                script: mvc.Script.buildPublicKeyHashOut(item.address),\n                satoshis: item.satoshis,\n            }),\n            prevTxId: item.txId,\n            outputIndex: item.outputIndex,\n            script: mvc.Script.empty(),\n        }))\n    })\n    tx.change(address)\n    tx.inputs.forEach((_: any, inputIndex: number) => {\n        const privateKey = new mvc.PrivateKey(senderWif)\n        unlockP2PKHInput(privateKey, tx, inputIndex, sighashType)\n    })\n    util.checkFeeRate(tx)\n    const txid = await broadcastSensibleQeury(network, tx.serialize())\n    const txParseRes = parseTransaction(network, tx.serialize(true))\n    return {\n        txid,\n        outputs: txParseRes.outputs,\n    }\n}\n\n\nconst parseTokenContractScript = function (scriptBuf: any, network: any = \"mainnet\") {\n    \n    //TODO: const parsed = SensibleFT.parseTokenScript(scriptBuf, network)\n    \n    return \n};\n\n\n\nexport function parseTransaction(network: NetWork, rawtx: string) {\n    let tx\n    try {\n        tx = new mvc.Transaction(rawtx)\n    } catch (err: any) {\n        return {\n            error: err.message\n        }\n    }\n\n    const inputs = tx.inputs.map((input: any, index: number) => {\n        const ftToken: any = parseTokenContractScript(input.script.toBuffer(), network);\n\n        let ret: any = {\n            index: index,\n            prevTxId: input.prevTxId.toString('hex'),\n            outputIndex: input.outputIndex,\n            script: input.script.toString('hex'),\n        }\n        try {\n            const addr = input.script.toAddress(network);\n            if (addr) {\n                ret.address = addr.toString()\n            }\n        } catch (err) {}\n        if (!ftToken) {\n            return ret\n        }\n        if (ftToken.tokenAmount <= 0) {\n            return ret\n        }\n        ret = {\n            ...ret,\n            isFt: true,\n            ftDetail: {\n                genesis: ftToken.genesis,\n                codehash: ftToken.codehash,\n                address: ftToken.tokenAddress,\n                decimal: ftToken.decimalNum,\n                name: ftToken.tokenName,\n                symbol: ftToken.tokenSymbol,\n            }\n        }\n        return ret\n    })\n    const outputs = tx.outputs.map((output: any, index: number) => {\n        const ftToken: any = parseTokenContractScript(output.script.toBuffer(), network);\n        let ret: any = {\n            index: index,\n            satoshis: output.satoshis,\n            script: output.script.toString('hex')\n        }\n        try {\n            const addr = output.script.toAddress(network);\n            if (addr) {\n                ret.address = addr.toString()\n            }\n        } catch (err) {}\n        if (!ftToken) {\n            return ret\n        }\n        if (ftToken.tokenAmount <= 0) {\n            return ret\n        }\n        ret = {\n            ...ret,\n            isFt: true,\n            ftDetail: {\n                genesis: ftToken.genesis,\n                codehash: ftToken.codehash,\n                address: ftToken.tokenAddress,\n                decimal: ftToken.decimalNum,\n                name: ftToken.tokenName,\n                symbol: ftToken.tokenSymbol,\n                amount: ftToken.tokenAmount,\n            }\n        }\n        return ret\n    })\n\n    return {\n        inputs: inputs,\n        outputs: outputs,\n        txid: tx.hash,\n    }\n    \n}\n\n\n(window as any).transferBsv = transferBsv;\n(window as any).signAnyTx = signAnyTx;","import { createGlobalState } from \"react-hooks-global-state\";\nimport {State, SensibleSatotx} from './stateType'\n\nconst defaultSatotx: SensibleSatotx = {\n    satotxApiPrefix: 'https://api.satotx.com', \n    satotxPubKey: '25108ec89eb96b99314619eb5b124f11f00307a833cda48f5ab1865a04d4cfa567095ea4dd47cdf5c7568cd8efa77805197a67943fe965b0a558216011c374aa06a7527b20b0ce9471e399fa752e8c8b72a12527768a9fc7092f1a7057c1a1514b59df4d154df0d5994ff3b386a04d819474efbd99fb10681db58b1bd857f6d5'\n}\n\n// app state\nconst initialState: State = {\n    account: null,\n    key: null,\n    bsvBalance: null,\n    sensibleFtList: [],\n    satotxConfigMap: new Map()\n};\ninitialState.satotxConfigMap.set(\n    '5b3bfa8e7600d701e70551075573ea28fd16c25a39fe2bdafdc3e08b11ca76b800000000', \n    [defaultSatotx, defaultSatotx, defaultSatotx]\n)\nconst { useGlobalState, getGlobalState, setGlobalState } = createGlobalState(initialState);\n\nexport {\n    useGlobalState,\n    getGlobalState,\n    setGlobalState,\n    defaultSatotx,\n}\n","import {setGlobalState, getGlobalState } from './state'\nimport {generateKeysFromEmailPassword, getAddressSensibleFtList, getAddressBsvBalanceByUtxo, signAnyTx} from '../lib'\nimport {Account, BalanceBsv, Key, SensibleFt} from './stateType'\nimport * as createPostMsg from 'post-msg';\nimport { SensibleFT } from 'meta-contract';\nimport { signTx, mvc, toHex } from 'mvc-scrypt';\n\n// local account storage\nconst accountStorageKey = 'accountStorageKey'\n// localStorage.removeItem(accountStorageKey)\nfunction saveAccountStorage(account: Account | null) {\n    const str = account ? JSON.stringify(account) : ''\n    localStorage.setItem(accountStorageKey, str)\n    // do not save account !!!\n}\nfunction getAccountStorage(): Account | null {\n    const str = localStorage.getItem(accountStorageKey)\n    if (!str) {\n        return null\n    }\n    return JSON.parse(str)\n}\n\nfunction isSupportToken(codehash: string) {\n    //return SensibleFT.isSupportedToken(codehash)\n    return true\n}\n\n// app action\nlet pollingBsvTimer = 0\nlet pollingSensibleFtTimer = 0\nexport async function pollingBsvBalance(){\n    clearInterval(pollingBsvTimer)\n    const fn = async () => {\n        const account = getGlobalState('account')\n        const key = getGlobalState('key')\n        if (!account || !key) {\n            return\n        }\n        try {\n            const balance = await getAddressBsvBalanceByUtxo(account.network, key.address)\n            setGlobalState('bsvBalance', {balance})\n        } catch (err) {\n            console.log('getAddressBsvBalance err', account.network, key.address, err)\n        }\n    }\n    await fn()\n    pollingBsvTimer = window.setInterval(fn, 5000)\n}\nexport async function pollingSensibleFtBalance() {\n    clearInterval(pollingSensibleFtTimer)\n    const fn = async () => {\n        const account = getGlobalState('account')\n        const key = getGlobalState('key')\n        if (!account || !key) {\n            return\n        }\n        try {\n            const sensibleFtList = await getAddressSensibleFtList(account.network, key.address)\n            const valid_sensibleFtList = sensibleFtList.filter(item => isSupportToken(item.codehash));\n            setGlobalState('sensibleFtList', valid_sensibleFtList);\n        } catch (err) {\n            console.log('getAddressSensibleFtList err', account.network, key.address, err)\n        }\n    }\n    await fn()\n    pollingSensibleFtTimer = window.setInterval(fn, 5000)\n}\n\nexport async function saveAccount(account: Account | null) {\n    saveAccountStorage(account)\n    if (account) {\n        const key = generateKeysFromEmailPassword(account.email, account.password, account.network)\n        setGlobalState('account', account)\n        setGlobalState('key', key)\n        await pollingSensibleFtBalance()\n        pollingBsvBalance()\n    } else {\n        setGlobalState(\"account\", null)\n        setGlobalState('key', null)\n    }\n}\n\nexport function recoverAccountFromStorage() {\n    const account = getAccountStorage()\n    saveAccount(account)\n}\n\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))\n\n// iframe action\nexport async function runIframeTask() {\n    if (window === window.top) {\n        return\n    }\n    const hashdata = JSON.parse(decodeURIComponent(window.location.hash.substr(1)))\n    const postMsg = createPostMsg(window.top, '*')\n    const id = hashdata.id\n\n    let preAccount: Account | null = null\n    let preBsvBalance: BalanceBsv | null = null\n    let preSensibleFtBalance: SensibleFt[] = []\n    let accountKey: Key | null = null\n    // let lastBsvBalance: \n\n    postMsg.emit(id, {\n        type: 'ready'\n    })\n\n    const isBsvBalanceEqual = (b1: BalanceBsv | null, b2: BalanceBsv | null) => {\n        if (!b1 && !b2) {\n            return true\n        }\n        return b1?.balance === b2?.balance\n    }\n    const isSensibleFtBalanceEqual = (b1: SensibleFt[], b2: SensibleFt[]) => {\n        if (b1.length !== b2.length) {\n            return false\n        }\n        b1.sort((item1, item2) => item1.genesis.localeCompare(item2.genesis))\n        b2.sort((item1, item2) => item1.genesis.localeCompare(item2.genesis))\n\n        for (let i = 0; i < b1.length; i++) {\n            const item1 = b1[i]\n            const item2 = b2[i]\n            if (item1.genesis !== item2.genesis) {\n                return false\n            }\n            if (item1.balance !== item2.balance) {\n                return false\n            }\n        }                \n        return true\n    }\n    const isAccountEqual = (b1: Account | null, b2: Account | null) => {\n        return (\n            b1?.email === b2?.email &&\n            b1?.network === b2?.network &&\n            b1?.password === b2?.password\n        )\n    }\n    const requestLatestData = async () => {\n        const latestAccount = getAccountStorage()\n        if (!(isAccountEqual(latestAccount, preAccount))) {\n            postMsg.emit(id, {\n                type: 'account',\n                data: latestAccount\n            })\n        }\n        preAccount = latestAccount;\n        if (preAccount) {\n            // get balance\n            accountKey = generateKeysFromEmailPassword(preAccount.email, preAccount.password, preAccount.network)\n            try {\n                const latestBalance = await getAddressBsvBalanceByUtxo(preAccount.network, accountKey.address)\n                const equal = isBsvBalanceEqual(preBsvBalance, {balance: latestBalance})\n                preBsvBalance = {balance: latestBalance}\n                if (!equal) {\n                    postMsg.emit(id, {\n                        type: 'bsvBalance', \n                        data: preBsvBalance,\n                    })\n                }\n            } catch (err) {}\n            try {\n                const latestBalance = await getAddressSensibleFtList(preAccount.network, accountKey.address)\n                const equal = isSensibleFtBalanceEqual(preSensibleFtBalance, latestBalance)\n                preSensibleFtBalance = latestBalance\n                if (!equal) {\n                    postMsg.emit(id, {\n                        type: 'sensibleFtBalance',\n                        data: preSensibleFtBalance\n                    })\n                }\n            } catch (err) {}\n            return true\n        } else {\n            return false\n        }\n    }\n\n    const handleRequest = (method: string, fn: Function) => {\n        postMsg.on(id, async function (_: any, eventData: any) {\n            const {type, data} = eventData\n            if (type === 'request' && data?.method === method) {\n                const requestId = data.requestId\n                try {\n                    const res = await fn(data.params)\n                    postMsg.emit(id, {\n                        type: 'response',\n                        data: {\n                            requestId,\n                            method,\n                            response: res,\n                        }\n                    })\n                } catch (err: any) {\n                    postMsg.emit(id, {\n                        type: 'response',\n                        data: {\n                            requestId,\n                            method,\n                            error: err.toString()\n                        }\n                    })\n                }\n            }\n        })\n    }\n\n    handleRequest('getAccount', async () => {\n        await requestLatestData()\n        if (!preAccount) {\n            return null\n        }\n        return {\n            name: preAccount.email,\n            email: preAccount.email,\n            network: preAccount.network,\n        }\n    });\n    handleRequest('getBsvBalance', async () => {\n        await requestLatestData()\n        return preBsvBalance\n    })\n    handleRequest('getSensibleFtBalance', async () => {\n        await requestLatestData()\n        return preSensibleFtBalance\n    })\n    handleRequest('getAddress', async () => {\n        await requestLatestData()\n        if (!accountKey) {\n            return null\n        }\n        return accountKey.address\n    })\n    handleRequest('signTx', async (options: any) => {\n        // 参数 (address + sighash)\n        // sighash: tx, sigtype, inputIndex, input.output.script, input.output,satoshisBN\n\n        // mvc-scrypt: signTx(tx, privateKey, lockingScriptASM: string, inputAmount: number, inputIndex: number, sighashType = DEFAULT_SIGHASH_TYPE, flags=DEFAULT_FLAGS): Signature.toTxFormat()\n\n        // mvc: mvc.Transaction.sighash.sign(tx: Transaction, privateKey: PrivateKey, sighashType: number, inputIndex: string, subscript: Script, satoshisBN: BN): Signature\n\n        // sCrypt params: tx(Transaciton object), inputIndex(number), sigHashType(SigType), onlySig?(boolean) 成功返回 unlockingScript 或者 Signature string\n\n        // options: {txHex, scriptHex, inputIndex, privateKey, publicKey, address, satoshis}\n\n        const {address} = options\n        if (!accountKey) {\n            throw new Error('not_login')\n        }\n        if (address !== accountKey.address) {\n            throw new Error('not_my_address')\n        }\n        return signAnyTx({\n            ...options,\n            privateKey: new mvc.PrivateKey(accountKey.privateKey, preAccount?.network ),\n            publicKey: new mvc.PublicKey(accountKey.publicKey, preAccount?.network)\n        })\n    })\n    handleRequest('logout', async () => {\n        saveAccountStorage(null)\n    })\n    handleRequest('ping', () => {\n        return null;\n    })\n\n    for (;;) {\n        const signed = await requestLatestData()\n        await sleep(signed ? 3000 : 500)\n    }\n\n}","import { useRef, useEffect } from \"react\";\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    let id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport function useOnceCall(cb, condition = true) {\n  const isCalledRef = useRef(false);\n  useEffect(() => {\n    if (condition && !isCalledRef.current) {\n      isCalledRef.current = true;\n      cb();\n    }\n  }, [cb, condition]);\n}\n","import {\n  Button,\n  Popover,\n  Card,\n  Form,\n  Input,\n  Select,\n  List,\n  Row,\n  Col,\n  message,\n  InputNumber,\n  Space,\n  Modal,\n} from \"antd\";\nimport {\n  UserOutlined,\n  LockOutlined,\n  MinusOutlined,\n  PlusOutlined,\n  LeftOutlined,\n} from \"@ant-design/icons\";\nimport { useState, useEffect } from \"react\";\nimport * as QRCode from \"qrcode.react\";\nimport { mvc } from \"mvc-scrypt\";\nimport {\n  getWocAddressUrl,\n  formatValue,\n  isValidAddress,\n  transferBsv,\n  transferSensibleFt,\n  getWocTransactionUrl,\n  getSensibleFtHistoryUrl,\n  parseTransaction,\n  broadcastSensibleQeury,\n} from \"./lib\";\nimport * as createPostMsg from \"post-msg\";\nimport { useGlobalState } from \"./state/state\";\nimport * as actions from \"./state/action\";\nimport { useOnceCall } from \"./hooks\";\nimport \"./App.css\";\nimport * as util from \"./lib/util\";\nimport * as Sentry from \"@sentry/react\";\nimport axios from \"axios\";\n\n//const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst { Option } = Select;\n\nfunction Header() {\n  const [account] = useGlobalState(\"account\");\n  const [key] = useGlobalState(\"key\");\n  const [decodeModalVisible, setDecodeModalVisible] = useState(false);\n  const [rawtx, setRawtx] = useState(\"\");\n  const [network, setNetwork] = useState(\"\");\n  const [resultModalVisible, setResultModalVisible] = useState(false);\n\n  const handleLogout = () => {\n    actions.saveAccount(null);\n  };\n  const handleHistory = () => {\n    let url = getWocAddressUrl(account.network, key.address);\n    window.open(url);\n  };\n  const handleSourceCode = () => {\n    window.open(\"http://github.com\");\n  };\n\n  const decodeTx = () => {\n    const res = parseTransaction(network, rawtx);\n    console.log(\"decodeTx res\", res);\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"logo\">Web Wallet</div>\n      {account && (\n        <Popover\n          title=\"\"\n          content={\n            <>\n              <Button type=\"link\" onClick={handleLogout}>\n                Logout\n              </Button>\n              <br />\n              <Button type=\"link\" onClick={handleHistory}>\n                History\n              </Button>\n              <br />\n              <Button type=\"link\" onClick={handleSourceCode}>\n                Source Code\n              </Button>\n              <br />\n              <Button type=\"link\" onClick={() => setDecodeModalVisible(true)}>\n                decode rawtx\n              </Button>\n            </>\n          }\n        >\n          <Button type=\"link\">{account.email}</Button>\n        </Popover>\n      )}\n      <Modal\n        visible={decodeModalVisible}\n        onCancel={() => setDecodeModalVisible(false)}\n      >\n        <Input.TextArea\n          rows={4}\n          value={rawtx}\n          onChange={(e) => setRawtx(e.target.value)}\n        ></Input.TextArea>\n        <Select\n          style={{ width: 180 }}\n          placeholder=\"Select network\"\n          value={network}\n          onChange={(value) => setNetwork(value)}\n        >\n          <Option value=\"mainnet\">mainnet</Option>\n          <Option value=\"testnet\">testnet</Option>\n        </Select>\n        <Button type=\"primary\" onClick={decodeTx}>\n          decode\n        </Button>\n      </Modal>\n      <Modal\n        visible={resultModalVisible}\n        onCancel={() => setResultModalVisible(false)}\n      ></Modal>\n    </div>\n  );\n}\n\nfunction LoginPanel() {\n  const [account] = useGlobalState(\"account\");\n  const [form] = Form.useForm();\n\n  const handleOnFinish = () => {\n    Modal.confirm({\n      title: \"安全注意\",\n      content: (\n        <div>\n          Web钱包的私钥是通过用户的邮箱和密码实时计算得到，不会上传服务器，也不会保存在本地(代码见\n          <a\n            href=\"https://github.com/klouskingsley/mvc-web-wallet\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            github\n          </a>\n          )。仅供方便用户测试之用，不适合存放大量资金，建议用户妥善保管邮箱+密码组合以防资金丢失，或在使用完成之后将剩余资金转移。邮箱+密码组合丢失(忘记，被盗等情形)会导致资产丢失\n        </div>\n      ),\n      onOk: () => {\n        const account = form.getFieldsValue();\n        actions.saveAccount(account);\n      },\n    });\n  };\n  if (account) {\n    return null;\n  }\n\n  return (\n    <Card className=\"card\" title=\"Login\" bordered={false}>\n      <Form form={form} layout=\"vertical\" onFinish={handleOnFinish}>\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              type: \"email\",\n              required: true,\n              message: \"Please input a valid Email!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Email\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[\n            { required: true, message: \"Please input your Password!\" },\n            {\n              min: 6,\n              message: \"Password at least 6 chars\",\n              transform: (value) => value && value.trim(),\n            },\n          ]}\n        >\n          <Input.Password\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            type=\"password\"\n            visibilityToggle={true}\n            placeholder=\"Password\"\n          />\n        </Form.Item>\n        <Form.Item name=\"network\" label=\"Network\" rules={[{ required: true }]}>\n          <Select placeholder=\"Select network\">\n            <Option value=\"mainnet\">mainnet</Option>\n            <Option value=\"testnet\">testnet</Option>\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          说明：Web钱包的私钥是通过用户的邮箱和密码实时计算得到(无需注册)，每次输入相同的邮箱和密码登录即可计算出相同的私钥，私钥不会上传服务器，也不会保存在本地，仅供方便用户测试之用，不适合存放大量资金，建议用户妥善保管邮箱+密码组合以防资金丢失。\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            Log in\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nfunction AccountInfoPanel({ onWithDraw, onTransfer }) {\n  const [key] = useGlobalState(\"key\");\n  const [account] = useGlobalState(\"account\");\n  const [bsvBalance] = useGlobalState(\"bsvBalance\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n\n  if (!key || !account) {\n    return null;\n  }\n  const handleHistory = () => {\n    let url = getWocAddressUrl(account.network, key.address);\n    window.open(url);\n  };\n  const handleTransfer = (genesis) => {\n    if (!genesis) {\n      return onTransfer(\"\");\n    }\n    // if (!satotxConfigMap.has(genesis)) {\n    //   return message.error(\"rabin api not set or found\");\n    // }\n    return onTransfer(genesis);\n  };\n  return [\n    <Card\n      className=\"card\"\n      title=\"Account Info\"\n      bordered={false}\n      actions={\n        <>\n          <Button type=\"link\" onClick={handleHistory}>\n            history\n          </Button>\n          ,\n          <Button type=\"link\" onClick={onWithDraw}>\n            withdraw\n          </Button>\n          ,\n        </>\n      }\n    >\n      <Form layout=\"vertical\">\n        <Form.Item label={`${account.network} address`}>\n          <Input value={key.address} />\n          <div style={{ margin: 20 }}>\n            <QRCode value={key.address} />\n          </div>\n        </Form.Item>\n        <Form.Item label=\"privateKey\">\n          <Input.Password visibilityToggle={true} value={key.privateKey} />\n        </Form.Item>\n      </Form>\n    </Card>,\n    <Card className=\"card\" title=\"Asset\" bordered={false}>\n      <Form layout=\"vertical\">\n        {bsvBalance && (\n          <Form.Item label=\"SPACE balance\">\n            <Row justify=\"space-between\">\n              <Col span={16}>\n                <div>{formatValue(bsvBalance.balance, 8)}</div>\n              </Col>\n              <Col span={7}>\n                <Button type=\"link\" onClick={() => handleTransfer(\"\")}>\n                  Transfer SPACE\n                </Button>\n              </Col>\n            </Row>\n          </Form.Item>\n        )}\n        {sensibleFtList.length > 0 && (\n          <Form.Item label=\"Fungible Token\">\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={sensibleFtList}\n              renderItem={(item) => {\n                return (\n                  <List.Item\n                    key={item.genesis}\n                    actions={\n                      <>\n                        <Popover\n                          placement=\"topRight\"\n                          content={\n                            <>\n                              <div>codehash: {item.codehash}</div>,\n                              <div>genesis: {item.genesis}</div>,\n                            </>\n                          }\n                        >\n                          <a\n                            key=\"list-loadmore-more\"\n                            href={getSensibleFtHistoryUrl(\n                              account.network,\n                              key.address,\n                              item.genesis,\n                              item.codehash\n                            )}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                          >\n                            more info\n                          </a>\n                        </Popover>\n                      </>\n                    }\n                  >\n                    <List.Item.Meta\n                      title={item.tokenSymbol}\n                      description={item.tokenName}\n                    />\n                    <Row>\n                      <Col>\n                        <div\n                          style={{\n                            height: \"100%\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          Balance:{\" \"}\n                          {formatValue(item.balance, item.tokenDecimal)}\n                        </div>\n                      </Col>\n                      <Col>\n                        <Button\n                          type=\"link\"\n                          onClick={() => handleTransfer(item.genesis)}\n                        >\n                          Go Transfer\n                        </Button>\n                      </Col>\n                    </Row>\n                  </List.Item>\n                );\n              }}\n            ></List>\n          </Form.Item>\n        )}\n      </Form>\n    </Card>,\n  ];\n}\n\nfunction getRabinPubKeys(url) {\n  return axios.get(url);\n}\n\nasync function getRabins(rabinApis = []) {\n  let promises = [],\n    rabins = [];\n  rabinApis.forEach((rabinApi) => {\n    promises.push(getRabinPubKeys(rabinApi));\n  });\n  return new Promise((resolve) => {\n    axios.all(promises).then((res) => {\n      // console.log(res);\n      res.forEach((item, index) => {\n        rabins.push({\n          satotxApiPrefix: rabinApis[index],\n          satotxPubKey: item.data.data.pubKey,\n        });\n      });\n\n      resolve(rabins);\n    });\n  });\n}\n\nfunction TransferAllPanel({ initDatas = [], onCancel, onTransferCallback }) {\n  const [key] = useGlobalState(\"key\");\n  const [bsvBalance] = useGlobalState(\"bsvBalance\");\n  const [account] = useGlobalState(\"account\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  useOnceCall(() => {\n    const values = {};\n    initDatas.forEach((data, index) => {\n      const isBsv = !data.genesis;\n      const token = sensibleFtList.find(\n        (item) => item.genesis === data.genesis\n      );\n      const decimal = isBsv ? 8 : token.tokenDecimal;\n      values[`receiverList${index}`] = data.receivers.map((item) => {\n        return {\n          address: item.address,\n          amount: util.div(item.amount, util.getDecimalString(decimal)),\n        };\n      });\n    });\n    form.setFieldsValue(values);\n  }, key && bsvBalance);\n\n  if (!key) {\n    return null;\n  }\n  if (!bsvBalance) {\n    return null;\n  }\n\n  const handleSubmit = async () => {\n    const receiverLists = form.getFieldsValue();\n\n    const broadcastBsv = async ({ formatReceiverList, noBroadcast }) => {\n      setLoading(true);\n      let transferRes;\n      let txid = \"\";\n      try {\n        if (noBroadcast === true) {\n          const allUtxos = true;\n          const tx = await await transferBsv(\n            account.network,\n            key.privateKey,\n            formatReceiverList,\n            noBroadcast,\n            allUtxos\n          );\n          return tx;\n        }\n        const res = await await transferBsv(\n          account.network,\n          key.privateKey,\n          formatReceiverList\n        );\n        transferRes = res;\n        txid = res.txid;\n      } catch (err) {\n        const msg = \"broadcast error: \" + err.toString();\n        Sentry.captureException(err);\n        Sentry.captureMessage(`bsvTransferFail_${key.address}`);\n        onTransferCallback({\n          error: msg,\n        });\n        console.log(\"broadcast mvc error \");\n        console.error(err);\n        message.error(err.toString());\n      }\n      Sentry.captureMessage(`bsvTransferSuccess_${key.address}_${txid}`);\n      return transferRes;\n    };\n\n    const broadcastSensibleFt = async ({\n      formatReceiverList,\n      token,\n      decimal,\n      genesis,\n      rabinApis,\n      utxos,\n      noBroadcast,\n    }) => {\n      setLoading(true);\n      let transferRes;\n      try {\n        const rabins = await getRabins(rabinApis);\n        const res = await transferSensibleFt(\n          account.network,\n          // signers,\n          rabins,\n          key.privateKey,\n          formatReceiverList,\n          token.codehash,\n          token.genesis,\n          utxos,\n          noBroadcast || false\n        );\n        transferRes = res;\n      } catch (err) {\n        Sentry.captureException(err);\n        Sentry.captureMessage(\n          `ftTransferFail_${key.address}_${token.genesis}_${token.genesis}`\n        );\n        onTransferCallback({\n          error: \"broadcast sensible ft error, \" + err.toString(),\n        });\n        console.log(\"broadcast sensible ft error \");\n        console.error(err);\n        message.error(err.toString());\n      }\n      return transferRes;\n    };\n\n    const broadcastBsvAndToken = async () => {\n      const txs = [];\n      const transferRes = [];\n      let utxos = [];\n      // mvc transaction must be the first one\n      for (let i = 0; i < initDatas.length; i++) {\n        const data = initDatas[i];\n        const isBsv = !data.genesis;\n        const token = sensibleFtList.find(\n          (item) => item.genesis === data.genesis\n        );\n        const decimal = isBsv ? 8 : token.tokenDecimal;\n        const balance = isBsv ? bsvBalance.balance : token.balance;\n        const rabinApis = data.rabinApis;\n        const totalOutputValueFloatDuck = receiverLists[\n          `receiverList${i}`\n        ].reduce((prev, cur) => util.plus(prev, cur.amount), 0);\n\n        const totalOutputValue = util.multi(\n          totalOutputValueFloatDuck,\n          util.getDecimalString(decimal)\n        );\n        if (util.lessThan(balance, totalOutputValue)) {\n          const msg = \"Insufficient ft balance\";\n          onTransferCallback({\n            error: msg,\n          });\n          return message.error(msg);\n        }\n        const formatReceiverList = data.receivers.map((item) => {\n          return {\n            address: item.address,\n            // amount: util.multi(item.amount, util.getDecimalString(decimal)),\n            amount: item.amount,\n          };\n        });\n        if (isBsv) {\n          const tx = await broadcastBsv({\n            formatReceiverList,\n            noBroadcast: true,\n          });\n          const outputIndex = tx.outputs.length - 1;\n          //TODO: check res outputs\n          if (outputIndex !== 1) {\n            const msg = \"Insufficient ft balance\";\n            onTransferCallback({\n              error: msg,\n            });\n            return message.error(msg);\n          }\n          const output = tx.outputs[outputIndex];\n          txs.push({\n            tx: tx,\n            isBsv: true,\n            noBroadcast: !!data.noBroadcast,\n          });\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new mvc.PrivateKey(\n              key.privateKey,\n              account.network\n            ).toAddress(account.network),\n          });\n        } else {\n          const { routeCheckTx, tx } = await broadcastSensibleFt({\n            formatReceiverList,\n            token,\n            decimal,\n            genesis: data.genesis,\n            rabinApis,\n            utxos,\n            noBroadcast: true,\n          });\n          txs.push({\n            tx,\n            routeCheckTx,\n            isBsv: false,\n            noBroadcast: !!data.noBroadcast,\n          });\n          const outputIndex = tx.outputs.length - 1;\n          const output = tx.outputs[outputIndex];\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new mvc.PrivateKey(\n              key.privateKey,\n              account.network\n            ).toAddress(account.network),\n          });\n        }\n      }\n\n      for (const txInfo of txs) {\n        if (!txInfo.noBroadcast) {\n          if (txInfo.routeCheckTx) {\n            await broadcastSensibleQeury(\n              account.network,\n              txInfo.routeCheckTx.serialize(true)\n            );\n          }\n          if (txInfo.tx) {\n            await broadcastSensibleQeury(\n              account.network,\n              txInfo.tx.serialize(true)\n            );\n          }\n        }\n\n        var resItem = {\n          txid: txInfo.tx.hash,\n          outputs: parseTransaction(account.network, txInfo.tx.serialize(true))\n            .outputs,\n          fee: txInfo.tx.getFee(),\n          isBsv: txInfo.isBsv,\n          txHex: txInfo.tx.serialize(true),\n        };\n        if (!resItem.isBsv) {\n          resItem.routeCheckTxid = txInfo.routeCheckTx.hash;\n          resItem.routeCheckTxHex = txInfo.routeCheckTx.serialize(true);\n          resItem.routeCheckOutputs = parseTransaction(\n            account.network,\n            txInfo.routeCheckTx.serialize(true)\n          ).outputs;\n        }\n\n        transferRes.push(resItem);\n      }\n\n      setLoading(false);\n      onTransferCallback({\n        response: {\n          ...transferRes,\n        },\n      });\n    };\n\n    const buildBsvAndTokenTx = async () => {\n      const txs = {};\n      let utxos = [];\n      // mvc transaction must be the first one\n      for (let i = 0; i < initDatas.length; i++) {\n        const data = initDatas[i];\n        const isBsv = !data.genesis;\n        const token = sensibleFtList.find(\n          (item) => item.genesis === data.genesis\n        );\n        const decimal = isBsv ? 8 : token.tokenDecimal;\n        const balance = isBsv ? bsvBalance.balance : token.balance;\n        const rabinApis = data.rabinApis;\n        const totalOutputValueFloatDuck = receiverLists[\n          `receiverList${i}`\n        ].reduce((prev, cur) => util.plus(prev, cur.amount), 0);\n\n        const totalOutputValue = util.multi(\n          totalOutputValueFloatDuck,\n          util.getDecimalString(decimal)\n        );\n        if (util.lessThan(balance, totalOutputValue)) {\n          const msg = \"Insufficient ft balance\";\n          onTransferCallback({\n            error: msg,\n          });\n          return message.error(msg);\n        }\n        const formatReceiverList = data.receivers.map((item) => {\n          return {\n            address: item.address,\n            // amount: util.multi(item.amount, util.getDecimalString(decimal)),\n            amount: item.amount,\n          };\n        });\n        if (isBsv) {\n          const tx = await broadcastBsv({\n            formatReceiverList,\n            noBroadcast: true,\n          });\n          const outputIndex = tx.outputs.length - 1;\n          //TODO: check res outputs\n          if (outputIndex !== 1) {\n            const msg = \"Insufficient ft balance\";\n            onTransferCallback({\n              error: msg,\n            });\n            return message.error(msg);\n          }\n          const output = tx.outputs[outputIndex];\n          txs.bsvRawTx = tx.toString();\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new mvc.PrivateKey(\n              key.privateKey,\n              account.network\n            ).toAddress(account.network),\n          });\n        } else {\n          const { amountCheckTx, tx } = await broadcastSensibleFt({\n            formatReceiverList,\n            token,\n            decimal,\n            genesis: data.genesis,\n            rabinApis,\n            utxos,\n            noBroadcast: true,\n          });\n          txs.amountCheckRawTx = amountCheckTx.toString();\n          txs.tokenRawTx = tx.toString();\n          const outputIndex = tx.outputs.length - 1;\n          const output = tx.outputs[outputIndex];\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new mvc.PrivateKey(\n              key.privateKey,\n              account.network\n            ).toAddress(account.network),\n          });\n        }\n      }\n\n      setLoading(false);\n      onTransferCallback({\n        response: txs,\n      });\n    };\n\n    Modal.confirm({\n      title: \"Confirm the transaction\",\n      onOk: () => {\n        //broadcastAll();\n        broadcastBsvAndToken();\n      },\n    });\n  };\n  const handleBack = () => {\n    onCancel();\n  };\n  return (\n    <Card\n      className=\"card\"\n      title={\n        <div style={{ cursor: \"pointer\" }} onClick={handleBack}>\n          <LeftOutlined />\n          Transfer\n        </div>\n      }\n      loading={loading}\n      bordered={false}\n    >\n      <Form form={form} layout=\"vertical\" onFinish={handleSubmit}>\n        {initDatas.map((data, index) => {\n          const isBsv = !data.genesis;\n          const token = sensibleFtList.find(\n            (item) => item.genesis === data.genesis\n          );\n\n          if (!isBsv && !token) {\n            return null;\n          }\n          const tokenSymbol = isBsv ? \"SPACE\" : token.tokenSymbol;\n          const decimal = isBsv ? 8 : token.tokenDecimal;\n          const balance = isBsv ? bsvBalance.balance : token.balance;\n          const formatBalance = formatValue(balance, decimal);\n          const canEdit = !(data.receivers.length > 0);\n          return (\n            <div key={index}>\n              <div className=\"transfer-line\">\n                {isBsv ? `Coin: ${tokenSymbol}` : `Token: ${tokenSymbol}`}\n              </div>\n              {!isBsv && (\n                <div className=\"transfer-line\">Genesis: {token.genesis}</div>\n              )}\n              {!isBsv && (\n                <div className=\"transfer-line\">Codehash: {token.codehash}</div>\n              )}\n              <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n                <Col span={14}>\n                  <div style={{ fontWeight: 700 }}>Input</div>\n                </Col>\n              </Row>\n              <div className=\"transfer-line\">{`Balance: ${formatBalance}`}</div>\n              <div className=\"transfer-line\">{`From Address: ${key.address}`}</div>\n              <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n                <Col span={14}>\n                  <div style={{ fontWeight: 700 }}>Output</div>\n                </Col>\n              </Row>\n              <Form.List name={`receiverList${index}`}>\n                {(fields, { add, remove }) => (\n                  <>\n                    {fields.map((key, name, fieldKey, ...restField) => {\n                      return (\n                        <Space\n                          key={key.fieldKey}\n                          style={{ display: \"flex\", marginBottom: 8 }}\n                          align=\"baseline\"\n                        >\n                          <Form.Item\n                            {...restField}\n                            name={[name, \"address\"]}\n                            fieldKey={[fieldKey, \"address\"]}\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Please input the address\",\n                              },\n                              {\n                                message: \"invalid address\",\n                                validator: (_, value) =>\n                                  isValidAddress(account.network, value)\n                                    ? Promise.resolve()\n                                    : Promise.reject(),\n                              },\n                            ]}\n                          >\n                            <Input\n                              placeholder=\"Input the address\"\n                              disabled={!canEdit}\n                            />\n                          </Form.Item>\n                          <Form.Item\n                            {...restField}\n                            name={[name, \"amount\"]}\n                            fieldKey={[fieldKey, \"amount\"]}\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Please input amount\",\n                              },\n                            ]}\n                          >\n                            <InputNumber\n                              placeholder=\"Amount\"\n                              min={0}\n                              disabled={!canEdit}\n                            />\n                          </Form.Item>\n                          <Button\n                            disabled={!canEdit}\n                            size=\"small\"\n                            onClick={() => remove(name)}\n                            shape=\"circle\"\n                            icon={<MinusOutlined />}\n                          />\n                        </Space>\n                      );\n                    })}\n\n                    <Form.Item>\n                      <Button\n                        type=\"dashed\"\n                        onClick={() => add()}\n                        icon={<PlusOutlined />}\n                        disabled={!canEdit}\n                      >\n                        Add Output\n                      </Button>\n                    </Form.Item>\n                  </>\n                )}\n              </Form.List>\n            </div>\n          );\n        })}\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" block>\n            Transfer\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nfunction TransferPanel({\n  genesis = \"\",\n  initReceivers = [],\n  rabinApis = [],\n  onCancel,\n  onTransferCallback,\n  noBroadcast,\n}) {\n  const [key] = useGlobalState(\"key\");\n  const [bsvBalance] = useGlobalState(\"bsvBalance\");\n  const [account] = useGlobalState(\"account\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const canEdit = !(initReceivers.length > 0);\n\n  useOnceCall(() => {\n    const isBsv = genesis === \"\";\n    const token = sensibleFtList.find((item) => item.genesis === genesis);\n    const decimal = isBsv ? 8 : token.tokenDecimal;\n    console.log(\n      \"initReceivers\",\n      initReceivers,\n      initReceivers.map((item) => {\n        return {\n          address: item.address,\n          amount: util.multi(item.amount, util.getDecimalString(decimal)),\n        };\n      })\n    );\n    form.setFieldsValue({\n      receiverList: initReceivers.map((item) => {\n        return {\n          address: item.address,\n          amount: util.div(item.amount, util.getDecimalString(decimal)),\n        };\n      }),\n    });\n  }, key && bsvBalance && initReceivers.length);\n\n  if (!key) {\n    return null;\n  }\n  if (!bsvBalance) {\n    return null;\n  }\n  if (genesis && !sensibleFtList.length) {\n    return null;\n  }\n\n  const isBsv = genesis === \"\";\n  const token = sensibleFtList.find((item) => item.genesis === genesis);\n\n  if (!isBsv && !token) {\n    return null;\n  }\n  const tokenSymbol = isBsv ? \"SPACE\" : token.tokenSymbol;\n  const decimal = isBsv ? 8 : token.tokenDecimal;\n  const balance = isBsv ? bsvBalance.balance : token.balance;\n  const formatBalance = formatValue(balance, decimal);\n\n  const handleSubmit = async () => {\n    const { receiverList } = form.getFieldsValue();\n    const totalOutputValueFloatDuck = receiverList.reduce(\n      (prev, cur) => util.plus(prev, cur.amount),\n      0\n    );\n\n    const totalOutputValue = util.multi(\n      totalOutputValueFloatDuck,\n      util.getDecimalString(decimal)\n    );\n    if (util.lessThan(balance, totalOutputValue)) {\n      const msg = \"Insufficient ft balance\";\n      onTransferCallback({\n        error: msg,\n      });\n      return message.error(msg);\n    }\n    const formatReceiverList = receiverList.map((item) => {\n      return {\n        address: item.address,\n        amount: util.multi(item.amount, util.getDecimalString(decimal)),\n      };\n    });\n\n    const broadcastBsv = async () => {\n      setLoading(true);\n      let txid = \"\";\n      let transferRes;\n      try {\n        const res = await transferBsv(\n          account.network,\n          key.privateKey,\n          formatReceiverList,\n          noBroadcast\n        );\n        if (noBroadcast) {\n          transferRes = {\n            txid: res.hash,\n            txHex: res.serialize(true),\n            outputs: parseTransaction(account.network, res.serialize(true))\n              .outputs,\n            fee: res.getFee(),\n          };\n          txid = res.hash;\n        } else {\n          transferRes = res;\n          txid = res.txid;\n        }\n      } catch (err) {\n        const msg = \"broadcast error: \" + err.toString();\n        console.log(\n          util.safeJsonStringify({\n            type: \"bsvTransferFail\",\n            msg,\n            account: {\n              network: account.network,\n              address: key.address,\n            },\n            receivers: formatReceiverList,\n          })\n        );\n        Sentry.captureException(err);\n        Sentry.captureMessage(`bsvTransferFail_${key.address}`);\n        onTransferCallback({\n          error: msg,\n        });\n        console.log(\"broadcast mvc error \");\n        console.error(err);\n        message.error(err.toString());\n      }\n      setLoading(false);\n      if (txid) {\n        console.log(\n          util.safeJsonStringify({\n            type: \"bsvTransferSuccess\",\n            account: {\n              network: account.network,\n              address: key.address,\n            },\n            receivers: formatReceiverList,\n            txid,\n            ...transferRes,\n          })\n        );\n        Sentry.captureMessage(`bsvTransferSuccess_${key.address}_${txid}`);\n        onTransferCallback({\n          response: {\n            ...transferRes,\n          },\n        });\n        Modal.success({\n          title: \"Transaction broadcast success\",\n          content: (\n            <div>\n              txid:{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={getWocTransactionUrl(account.network, txid)}\n              >\n                {txid}\n              </a>\n            </div>\n          ),\n        });\n      }\n    };\n\n    const broadcastSensibleFt = async () => {\n      setLoading(true);\n      let txid = \"\";\n      let transferRes;\n      try {\n        const rabins = await getRabins(rabinApis);\n\n        const res = await transferSensibleFt(\n          account.network,\n          // signers,\n          rabins,\n          key.privateKey,\n          formatReceiverList,\n          token.codehash,\n          token.genesis,\n          false,\n          noBroadcast\n        );\n        if (noBroadcast) {\n          transferRes = {\n            txid: res.tx.hash,\n            outputs: parseTransaction(account.network, res.tx.serialize(true))\n              .outputs,\n            fee: res.tx.getFee(),\n            routeCheckTxid: res.routeCheckTx.hash,\n            txHex: res.tx.serialize(true),\n            routeCheckTxHex: res.routeCheckTx.serialize(true),\n            routeCheckOutputs: parseTransaction(\n              account.network,\n              res.routeCheckTx.serialize(true)\n            ).outputs,\n          };\n          txid = res.tx.hash;\n        } else {\n          transferRes = res;\n          txid = res.txid;\n        }\n      } catch (err) {\n        console.log(\"broadcast sensible ft error \");\n        console.error(err);\n        message.error(err.toString());\n        console.log(\n          util.safeJsonStringify({\n            type: \"ftTransferFail\",\n            msg: util.safeJsonStringify(err.message),\n            account: {\n              network: account.network,\n              address: key.address,\n            },\n            genesis: token.genesis,\n            codehash: token.codehash,\n            receivers: formatReceiverList,\n          })\n        );\n        Sentry.captureException(err);\n        Sentry.captureMessage(\n          `ftTransferFail_${key.address}_${token.genesis}_${token.genesis}`\n        );\n        onTransferCallback({\n          error: err.toString(),\n        });\n      }\n      setLoading(false);\n      if (txid) {\n        console.log(\n          util.safeJsonStringify({\n            type: \"ftTransferSuccess,\",\n            account: {\n              network: account.network,\n              address: key.address,\n              genesis: token.genesis,\n              codehash: token.codehash,\n            },\n            receivers: formatReceiverList,\n            txid,\n            ...transferRes,\n          })\n        );\n        Sentry.captureMessage(`ftTransferSuccess_${key.address}_${txid}`);\n        onTransferCallback({\n          response: {\n            ...transferRes,\n          },\n        });\n        Modal.success({\n          title: \"Transaction broadcast success\",\n          content: (\n            <div>\n              txid:{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={getWocTransactionUrl(account.network, txid)}\n              >\n                {txid}\n              </a>\n            </div>\n          ),\n        });\n      }\n    };\n\n    Modal.confirm({\n      title: \"Confirm the transaction\",\n      onOk: () => {\n        isBsv ? broadcastBsv() : broadcastSensibleFt();\n      },\n    });\n  };\n  const handleBack = () => {\n    onCancel();\n  };\n\n  return (\n    <Card\n      className=\"card\"\n      title={\n        <div style={{ cursor: \"pointer\" }} onClick={handleBack}>\n          <LeftOutlined />\n          Transfer\n        </div>\n      }\n      loading={loading}\n      bordered={false}\n    >\n      <Form form={form} layout=\"vertical\" onFinish={handleSubmit}>\n        <div className=\"transfer-line\">\n          {isBsv ? `Coin: ${tokenSymbol}` : `Token: ${tokenSymbol}`}\n        </div>\n        {!isBsv && (\n          <div className=\"transfer-line\">Genesis: {token.genesis}</div>\n        )}\n        {!isBsv && (\n          <div className=\"transfer-line\">Codehash: {token.codehash}</div>\n        )}\n        <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n          <Col span={14}>\n            <div style={{ fontWeight: 700 }}>Input</div>\n          </Col>\n        </Row>\n        <div className=\"transfer-line\">{`Balance: ${formatBalance}`}</div>\n        <div className=\"transfer-line\">{`From Address: ${key.address}`}</div>\n        <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n          <Col span={14}>\n            <div style={{ fontWeight: 700 }}>Output</div>\n          </Col>\n        </Row>\n        <Form.List name=\"receiverList\">\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map((key, name, fieldKey, ...restField) => {\n                return (\n                  <Space\n                    key={key.fieldKey}\n                    style={{ display: \"flex\", marginBottom: 8 }}\n                    align=\"baseline\"\n                  >\n                    <Form.Item\n                      {...restField}\n                      name={[name, \"address\"]}\n                      fieldKey={[fieldKey, \"address\"]}\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please input the address\",\n                        },\n                        {\n                          message: \"invalid address\",\n                          validator: (_, value) =>\n                            isValidAddress(account.network, value)\n                              ? Promise.resolve()\n                              : Promise.reject(),\n                        },\n                      ]}\n                    >\n                      <Input\n                        placeholder=\"Input the address\"\n                        disabled={!canEdit}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      {...restField}\n                      name={[name, \"amount\"]}\n                      fieldKey={[fieldKey, \"amount\"]}\n                      rules={[\n                        { required: true, message: \"Please input amount\" },\n                      ]}\n                    >\n                      <InputNumber\n                        placeholder=\"Amount\"\n                        min={0}\n                        disabled={!canEdit}\n                      />\n                    </Form.Item>\n                    <Button\n                      disabled={!canEdit}\n                      size=\"small\"\n                      onClick={() => remove(name)}\n                      shape=\"circle\"\n                      icon={<MinusOutlined />}\n                    />\n                  </Space>\n                );\n              })}\n\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => add()}\n                  icon={<PlusOutlined />}\n                  disabled={!canEdit}\n                >\n                  Add Output\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" block>\n            Transfer\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    actions.recoverAccountFromStorage();\n  }, []);\n\n  const [trasfering, setTransfering] = useState(false);\n  const [trasferSensibleFtGenesis, setTrasferSensibleFtGenesis] = useState(\"\");\n  const [account] = useGlobalState(\"account\");\n  const [key] = useGlobalState(\"key\");\n  const [bsvBalance] = useGlobalState(\"bsvBalance\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n  const [initReceivers, setInitReceivers] = useState([]);\n  const [initDatas, setInitDatas] = useState([]);\n  const [initRabins, setRabins] = useState([]);\n  const [initNoBroadcast, setInitNoBroadcast] = useState(false);\n\n  const handleTransfer = (genesis) => {\n    setTransfering(true);\n    genesis && setTrasferSensibleFtGenesis(genesis);\n  };\n  const handleCancelTransfer = () => {\n    setTransfering(false);\n    setTrasferSensibleFtGenesis(\"\");\n  };\n\n  const getHashData = () => {\n    if (!window.opener) {\n      return null;\n    }\n    const hash = window.location.hash.substr(1);\n    try {\n      const data = JSON.parse(decodeURIComponent(hash));\n      if (data.type === \"popup\") {\n        if (typeof data.data === \"object\") {\n          return data;\n        }\n      }\n    } catch (err) {}\n    return null;\n  };\n  const handlePopResponseCallback = (resObj) => {\n    const data = getHashData();\n    if (!data) {\n      return;\n    }\n    const postMsg = createPostMsg(window.opener, \"*\");\n    postMsg.emit(data.id, {\n      type: \"response\",\n      data: {\n        ...data.data.data,\n        ...resObj,\n      },\n    });\n  };\n\n  // todo 数值计算 使用 bignumber\n  // todo 此处接收 postMessage 消息，处理登录,transfer\n  const requestAccountCondition = key?.address && account?.network;\n  const transferBsvCondition =\n    requestAccountCondition &&\n    bsvBalance &&\n    util.greaterThanEqual(bsvBalance.balance, 0);\n  useOnceCall(() => {\n    const data = getHashData();\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"requestAccount\") {\n      return;\n    }\n    Modal.confirm({\n      title: \"Connect\",\n      content: (\n        <div>\n          Allow <b>{params.name}</b> to connect your web wallet\n        </div>\n      ),\n      onOk: () => {\n        handlePopResponseCallback({ response: true });\n      },\n      onCancel: () => {\n        handlePopResponseCallback({ error: \"user reject\" });\n      },\n    });\n  }, !!requestAccountCondition);\n  useOnceCall(() => {\n    const data = getHashData();\n    console.log(\"mvc hash data\", data);\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"transferBsv\") {\n      return;\n    }\n    // balance check\n    const outputTotal = params.receivers.reduce(\n      (prev, cur) => util.plus(prev, cur.amount),\n      0\n    );\n    if (util.greaterThan(outputTotal, bsvBalance.balance)) {\n      handlePopResponseCallback({ error: \"insufficient mvc balance\" });\n      return;\n    }\n    setTransfering(true);\n    setInitReceivers(params.receivers);\n    setInitNoBroadcast(params.noBroadcast);\n  }, !!transferBsvCondition);\n  useOnceCall(() => {\n    const data = getHashData();\n    console.log(\"hashdata\", data);\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"transferSensibleFt\") {\n      return;\n    }\n    // sensibleft balance check\n    const outputTotal = params.receivers.reduce(\n      (prev, cur) => util.plus(prev, cur.amount),\n      0\n    );\n    console.log(\"outputTotal\", outputTotal);\n    const ft = sensibleFtList.find((item) => item.genesis === params.genesis);\n    console.log(\"ft\", ft);\n    if (!ft) {\n      handlePopResponseCallback({ error: \"insufficient ft balance\" });\n      return;\n    }\n    if (util.greaterThan(outputTotal, ft.balance)) {\n      handlePopResponseCallback({ error: \"insufficient ft balance\" });\n      return;\n    }\n    setTransfering(true);\n    setTrasferSensibleFtGenesis(params.genesis);\n    setInitReceivers(params.receivers);\n    setRabins(params.rabinApis);\n    setInitNoBroadcast(params.noBroadcast);\n  }, !!transferBsvCondition);\n  useOnceCall(() => {\n    const data = getHashData();\n    console.log(\"mvc hash data\", data);\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"transferAll\") {\n      return;\n    }\n    // balance check\n    params.datas.forEach((item) => {\n      // balance check\n      const isBsv = !item.genesis;\n      const ft = sensibleFtList.find((v) => v.genesis === item.genesis);\n\n      const outputTotal = item.receivers.reduce(\n        (prev, cur) => util.plus(prev, cur.amount),\n        0\n      );\n      if (isBsv && util.greaterThan(outputTotal, bsvBalance.balance)) {\n        handlePopResponseCallback({ error: \"insufficient mvc balance\" });\n        return;\n      }\n      if (ft && util.greaterThan(outputTotal, ft.balance)) {\n        handlePopResponseCallback({ error: \"insufficient ft balance\" });\n        return;\n      }\n      setTransfering(true);\n      setInitDatas(params.datas);\n    });\n  }, !!transferBsvCondition);\n  useEffect(() => {\n    const obu = window.onbeforeunload;\n    window.onbeforeunload = function (event) {\n      handlePopResponseCallback({ error: \"use closed\" });\n      return obu && obu(event);\n    };\n  });\n  return (\n    <div className=\"App\" style={{ overflow: \"hidden\" }}>\n      <Header accountName=\"harry\" />\n      <LoginPanel />\n      {!trasfering && <AccountInfoPanel onTransfer={handleTransfer} />}\n      {trasfering &&\n        (!initDatas || initDatas.length < 1 ? (\n          <TransferPanel\n            genesis={trasferSensibleFtGenesis}\n            rabinApis={initRabins}\n            onCancel={handleCancelTransfer}\n            onTransferCallback={handlePopResponseCallback}\n            initReceivers={initReceivers}\n            noBroadcast={initNoBroadcast}\n          />\n        ) : (\n          <TransferAllPanel\n            onCancel={handleCancelTransfer}\n            onTransferCallback={handlePopResponseCallback}\n            initDatas={initDatas}\n          />\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as actions from \"./state/action\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\nimport { SensibleApi } from \"meta-contract\";\nimport { mvc } from \"mvc-scrypt\";\n\n(function () {\n  /*const originBroadcast = SensibleApi.prototype.broadcast;\n  SensibleApi.prototype.broadcast = async function (hex) {\n    const txid = new mvc.Transaction(hex).hash;\n    const txMsg = `txid: ${txid}; rawtx: ${hex}`;\n    console.log(\"meta-contract 广播\", txMsg);\n    try {\n      const res = await originBroadcast.call(this, hex);\n      return res;\n    } catch (err) {\n      console.log(\"meta-contract 广播错误\", txMsg);\n      const newError = new Error(\n        `${err.message} meta-contract 广播错误 ${txMsg}`\n      );\n      setTimeout(() => {\n        throw newError;\n      }, 0);\n      throw err;\n    }\n  };*/\n})();\n\nconst isIframe = window === window.top;\n\nSentry.init({\n  dsn: \"https://d223c2a1d1bf44b6a657051ac9a99b16@o877284.ingest.sentry.io/5827823\",\n  integrations: [new Integrations.BrowserTracing()],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n});\n\nif (isIframe) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n} else {\n  actions.runIframeTask();\n}\n\n// delete account when page/iframe exit\n(function () {\n  const obu = window.onbeforeunload;\n  window.onbeforeunload = function (event) {\n    const isPopup = !!window.opener;\n    if (!isPopup) {\n      actions.saveAccount(null);\n    }\n    return obu && obu(event);\n  };\n})();\n\n// alert(window === window.top);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\nexport enum NetWork {\n  Testnet = 'testnet',\n  Mainnet = 'mainnet',\n  STN = 'STN'\n}\n\n"],"sourceRoot":""}