{"version":3,"sources":["lib/util.ts","lib/index.ts","state/state.ts","state/action.ts","hooks.js","App.js","reportWebVitals.js","index.js","web3/wallet.ts"],"names":["div","a","biga","BigNumber","i","arguments","length","undefined","toString","multi","multipliedBy","plus","minus","getDecimalString","decimalNum","pow","lessThan","b","lt","lessThanEqual","lte","greaterThan","gt","greaterThanEqual","gte","checkFeeRate","tx","minFeeRate","size","toBuffer","feeRate","getFee","msg","concat","message","error","Error","safeJsonStringify","data","JSON","parse","stringify","key","value","SCAN_URL","SCAN_URL_TESTNET","getSensibleApiPrefix","network","NetWork","Mainnet","isSensibleSuccess","res","status","sleep","ms","Promise","resolve","setTimeout","formatValue","decimal","util","isValidAddress","address","mvc","Address","_","generateKeysFromEmailPassword","email","pass","Testnet","s","regchars","match","regupchars","bufferS","Buffer","from","crypto","Hash","sha256","tmp","hex","privateKey","PrivateKey","toAddress","publicKey","toPublicKey","getSensibleFtHistoryUrl","genesis","codehash","test","getWocAddressUrl","url","getWocTransactionUrl","txid","signAnyTx","_x","_signAnyTx","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","txHex","scriptHex","inputIndex","satoshis","script","sig","wrap","_context","prev","next","Transaction","Script","fromBuffer","toHex","signTx","Number","abrupt","stop","getAddressSensibleFtList","_x2","_x3","_getAddressSensibleFtList","_callee2","pageSize","page","list","_context2","getAddressSensibleFtListByPage","sent","_toConsumableArray","t0","console","log","_x4","_x5","_x6","_getAddressSensibleFtListByPage","_callee3","apiPrefix","_args3","_context3","axios","get","map","item","codeHash","sensibleId","tokenName","name","tokenSymbol","symbol","tokenDecimal","balance","confirmedString","unconfirmedString","statusText","getAddressMvcUtxoList","_x7","_x8","_x9","_getAddressMvcUtxoList","_callee4","_args4","_context4","txId","outputIndex","outIndex","getAddressMvcBalance","_x10","_x11","_getAddressMvcBalance","_callee5","_context5","confirmed","unconfirmed","getAddressMvcBalanceByUtxo","_x12","_x13","_getAddressMvcBalanceByUtxo","_callee6","sum","utxoList","total","_context6","reduce","cur","broadcastSensibleQeury","_x22","_x23","_broadcastSensibleQeury","_callee9","rawtx","apiPrefx","_context9","post","hash","mapMvcFeeError","err","getCustomSigners","findValue","customSatotxList","find","satotxList","selectNotNullSigners","_len","signerList","Array","_key","_i","_signerList","signers","transferSensibleFt","_x24","_x25","_x26","_x27","_x28","_x29","_transferSensibleFt","_callee10","senderWif","receivers","utxos","noBroadcast","customSigner","ft","_yield$ft$transfer","routeCheckTx","txParseRes","errMsg","isMvcAmountExceed","isFtUtxoAmountExceed","_yield$ft$transfer2","_txid","_tx","_txParseRes","_err2","_errMsg","_yield$ft$transfer3","_txid2","_tx2","_txParseRes2","_err3","_args10","_context10","SensibleFT","purse","feeb","transfer","parseTransaction","serialize","outputs","indexOf","mergeMvcUtxo","t1","t2","merge","t3","t4","Signature","sighashType","SIGHASH_ALL","SIGHASH_FORKID","unlockP2PKHInput","sigtype","prevTxId","inputs","signature","Sighash","sign","output","satoshisBN","setScript","buildPublicKeyHashIn","toDER","checkMvcReceiversSatisfied","satified","txAddressAmountMap","getKey","amount","forEach","rece","transferMvc","_x30","_x31","_x32","_transferMvc","_callee11","allUtxos","totalOutput","utxoValue","selectedUtxoList","dust","utxoResList","_args11","_context11","feePerKb","push","addInput","Input","PublicKeyHash","Output","buildPublicKeyHashOut","empty","to","change","clearOutputs","index","type","Sentry","fee","_x33","_x34","_mergeMvcUtxo","_callee12","utxolist","_context12","parseTokenContractScript","scriptBuf","input","ftToken","ret","addr","tokenAmount","_objectSpread","isFt","ftDetail","tokenAddress","window","defaultSatotx","satotxApiPrefix","satotxPubKey","initialState","account","mvcBalance","sensibleFtList","satotxConfigMap","Map","set","_createGlobalState","createGlobalState","useGlobalState","getGlobalState","setGlobalState","accountStorageKey","saveAccountStorage","str","localStorage","setItem","getAccountStorage","getItem","pollingMvcTimer","pollingSensibleFtTimer","pollingMvcBalance","_pollingMvcBalance","fn","clearInterval","_ref","setInterval","pollingSensibleFtBalance","_pollingSensibleFtBalance","_ref2","valid_sensibleFtList","filter","saveAccount","_saveAccount","password","_runIframeTask","_callee14","hashdata","postMsg","id","preAccount","preMvcBalance","preSensibleFtBalance","accountKey","isMvcBalanceEqual","isSensibleFtBalanceEqual","isAccountEqual","requestLatestData","handleRequest","signed","_context14","top","decodeURIComponent","location","substr","createPostMsg","emit","b1","b2","sort","item1","item2","localeCompare","_ref3","latestAccount","latestBalance","equal","_latestBalance","_equal","method","on","_ref4","_callee7","eventData","requestId","_context7","params","response","_callee8","_context8","_ref9","_preAccount","_preAccount2","PublicKey","_callee13","_context13","useOnceCall","cb","condition","isCalledRef","useRef","useEffect","current","Option","Select","Header","_useGlobalState","_slicedToArray","_useGlobalState3","_useState","useState","_useState2","decodeModalVisible","setDecodeModalVisible","_useState3","_useState4","setRawtx","_useState5","_useState6","setNetwork","_useState7","_useState8","resultModalVisible","setResultModalVisible","_jsxs","className","children","_jsx","Popover","title","content","_Fragment","Button","onClick","actions","open","Modal","visible","onCancel","TextArea","rows","onChange","e","target","style","width","placeholder","LoginPanel","_useGlobalState5","_Form$useForm","Form","useForm","form","Card","bordered","layout","onFinish","confirm","href","rel","onOk","getFieldsValue","Item","rules","required","prefix","UserOutlined","min","transform","trim","Password","LockOutlined","visibilityToggle","label","htmlType","AccountInfoPanel","onWithDraw","onTransfer","_useGlobalState7","_useGlobalState9","_useGlobalState11","_useGlobalState13","handleTransfer","margin","QRCode","Row","justify","Col","span","List","itemLayout","dataSource","renderItem","placement","Meta","description","height","display","alignItems","getRabins","_getRabins","rabinApis","promises","rabins","rabinApi","all","then","pubKey","TransferAllPanel","_ref2$initDatas","initDatas","onTransferCallback","_useGlobalState15","_useGlobalState17","_useGlobalState19","_useGlobalState21","_Form$useForm3","_useState9","_useState10","loading","setLoading","values","isMvc","token","setFieldsValue","handleSubmit","receiverLists","broadcastMvc","broadcastSensibleFt","broadcastMvcAndToken","_ref5","formatReceiverList","transferRes","_ref7","_ref6","_ref8","txs","_loop","_ret","_txs","txInfo","resItem","totalOutputValueFloatDuck","totalOutputValue","_msg","_yield$broadcastSensi","_outputIndex","_output","v","wif","delegateYield","routeCheckTxid","routeCheckTxHex","routeCheckOutputs","_loop2","_ret2","_msg2","_yield$broadcastSensi2","amountCheckTx","_outputIndex2","_output2","mvcRawTx","amountCheckRawTx","tokenRawTx","cursor","LeftOutlined","formatBalance","canEdit","fontWeight","fields","_ref10","add","remove","fieldKey","restField","Space","marginBottom","align","validator","reject","disabled","InputNumber","shape","icon","MinusOutlined","PlusOutlined","block","TransferPanel","_ref11","_ref11$genesis","_ref11$initReceivers","initReceivers","_ref11$rabinApis","_useGlobalState23","_useGlobalState25","_useGlobalState27","_useGlobalState29","_Form$useForm5","_useState11","_useState12","receiverList","_ref12","_form$getFieldsValue","_ref13","_msg3","success","_ref14","_ref15","_len2","_key2","App","_useState13","_useState14","trasfering","setTransfering","_useState15","_useState16","trasferSensibleFtGenesis","setTrasferSensibleFtGenesis","_useGlobalState31","_useGlobalState33","_useGlobalState35","_useGlobalState37","_useState17","_useState18","setInitReceivers","_useState19","_useState20","setInitDatas","_useState21","_useState22","initRabins","setRabins","_useState23","_useState24","initNoBroadcast","setInitNoBroadcast","handleCancelTransfer","getHashData","opener","handlePopResponseCallback","resObj","requestAccountCondition","transferMvcCondition","_data$data$data","_data$data$data2","outputTotal","_data$data$data3","_data$data$data4","datas","obu","onbeforeunload","event","overflow","accountName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isIframe","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51c9340b.chunk.js","sourcesContent":["import BigNumber from \"bignumber.js\";\nimport {message} from 'antd'\n\n// 最大是253，那么全部用 string 吧\ntype NumberDuck = number | string\n\nexport function div (a: NumberDuck, ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.div(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function multi(a: NumberDuck,  ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.multipliedBy(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function plus(a: NumberDuck,  ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.plus(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function minus(a: NumberDuck,  ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.minus(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function getDecimalString(decimalNum: number): string {\n    return new BigNumber(10).pow(decimalNum).toString()\n}\n\nexport function lessThan(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.lt(new BigNumber(b))\n}\n\nexport function lessThanEqual(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.lte(new BigNumber(b))\n}\n\nexport function greaterThan(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.gt(new BigNumber(b))\n}\n\nexport function greaterThanEqual(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.gte(new BigNumber(b))\n}\n\nexport function equal(a: NumberDuck, b: NumberDuck): boolean {\n    let biga = new BigNumber(a)\n    return biga.eq(new BigNumber(b))\n}\n\nexport function toString(a: NumberDuck): string {\n    return new BigNumber(a).toString()\n}\n\nexport function checkFeeRate(tx: any, minFeeRate?: number) {\n    minFeeRate = minFeeRate || 0.5\n    const size = tx.toBuffer().length\n    const feeRate = tx.getFee() / size;\n    if (feeRate < minFeeRate) {\n        const msg = `The fee rate should not be less than ${minFeeRate}, but in the end it is ${feeRate}`\n        message.error(msg)\n        throw new Error(msg)\n    }\n}\n\nexport function safeJsonStringify(data: any) {\n    return JSON.parse(JSON.stringify(data, (key, value) =>\n        typeof value === 'bigint'\n            ? value.toString()\n            : value // return everything else unchanged\n    ));\n}\n\n// 传过来 string/int -> 显示(float) -> bigint\n","import { mvc, toHex, signTx } from 'mvc-scrypt';\nimport { NetWork } from '../web3';\nimport {Key, SensibleFt, SensibleSatotx, TransferReceiver, MvcUtxo} from '../state/stateType'\nimport axios from 'axios'\nimport {SensibleFT} from 'meta-contract'\nimport * as util from './util'\nimport * as Sentry from \"@sentry/react\";\nimport customSatotxList from './customSatotx.json'\n\nconst SCAN_URL = 'https://mvcscan.com'\nconst SCAN_URL_TESTNET = 'https://test.mvcscan.com'\n\nfunction getSensibleApiPrefix(network: NetWork) {\n    if (network === NetWork.Mainnet) {\n        return 'https://mainnet.mvcapi.com'\n    } else {\n        return 'https://testnet.mvcapi.com'\n    }\n}\nfunction isSensibleSuccess(res: any) {\n    return res.status === 200\n}\n\nfunction sleep(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport function formatValue(value: number, decimal: number) {\n    // const bigNum = mvc.crypto.BN.fromNumber(value)\n    // return bigNum.div(10**decimal).toString(10)\n    // return value / (10**decimal)\n    return util.div(value, util.getDecimalString(decimal))\n}\n\nexport function isValidAddress(network: NetWork, address: string) {\n    try {\n        new mvc.Address(address, network)\n        return true\n    } catch (_) {\n        return false\n    }\n}\n\nexport function generateKeysFromEmailPassword(email: string, pass: string, network: NetWork = NetWork.Testnet): Key {\n    let s: string = email\n    s += '|'+pass+'|';\n    s += s.length+'|!@'+((pass.length*7)+email.length)*7;\n    var regchars = (pass.match(/[a-z]+/g)) ? pass.match(/[a-z]+/g)!.length : 1;\n    var regupchars = (pass.match(/[A-Z]+/g)) ? pass.match(/[A-Z]+/g)!.length : 1;\n    var regnums = (pass.match(/[0-9]+/g)) ? pass.match(/[0-9]+/g)!.length : 1;\n    s += ((regnums+regchars)+regupchars)*pass.length+'3571';\n    s += (s+''+s);\n\n    let bufferS = Buffer.from(s)\n    bufferS = mvc.crypto.Hash.sha256(bufferS)\n\tfor(let i=0;i<=49;i++){\n        const tmp = Buffer.from(bufferS.toString('hex'))\n        bufferS = mvc.crypto.Hash.sha256(tmp)\n\t}\n    const hex = mvc.crypto.Hash.sha256(Buffer.from(bufferS.toString('hex'))).toString('hex')\n    \n    const privateKey = new mvc.PrivateKey(hex, network)\n    const address = privateKey.toAddress(network).toString()\n    \n    return {\n        address,\n        privateKey: privateKey.toString(),\n        publicKey: privateKey.toPublicKey().toString()\n    }\n}\n\nexport function getSensibleFtHistoryUrl(network: NetWork, address: string, genesis: string, codehash: string) {\n    // https://sensiblequery.com/#/ft/utxo/a1961d0c0ab39f1bd0f79c2f6ae27138cca0620c/d4266deb03b5fdb7c9af39fa71f86f4b1f6390422e9bcd1556399a3f0063965f00000000/1111111111111111111114oLvT2\n    const test = network === NetWork.Mainnet ? '' : '/test'\n    return `https://sensiblequery.com${test}/#/ft/utxo/${codehash}/${genesis}/${address}`\n}\n\nexport function getWocAddressUrl(network: NetWork, address: string) {\n    let url = ''\n    if (network === NetWork.Mainnet) {\n        url = SCAN_URL + '/address/'\n    } \n    if (network === NetWork.Testnet) {\n        url = SCAN_URL_TESTNET + '/address/'\n    }\n    if (!url) {\n        return url\n    }\n    url += address\n    return url\n}\n\nexport function getWocTransactionUrl(network: NetWork, txid: string) {\n    let url = ''\n    if (network === NetWork.Mainnet) {\n        url = SCAN_URL + '/tx/'\n    } \n    if (network === NetWork.Testnet) {\n        url = SCAN_URL_TESTNET + '/tx/'\n    }\n    if (!url) {\n        return url\n    }\n    url += txid\n    return url\n}\n\nexport async function signAnyTx(options: any) {\n    const {txHex, scriptHex, inputIndex, privateKey, publicKey, satoshis} = options\n    const tx = new mvc.Transaction(txHex)\n    const script = mvc.Script.fromBuffer(Buffer.from(scriptHex, 'hex'))\n    const sig = toHex(signTx(tx, privateKey , script, Number(satoshis), inputIndex))\n    \n    return {\n        publicKey: publicKey.toString(),\n        sig,\n    }\n}\n\n// todo 分页获取\nexport async function getAddressSensibleFtList(network: NetWork, address: string): Promise<SensibleFt[]> {\n    // todo remove next line\n    let res: SensibleFt[] = []\n    const pageSize = 20\n    try {\n        for (let page = 1; ; page++) {\n            const list = await getAddressSensibleFtListByPage(network, address, page, pageSize)\n            res = [...res, ...list]\n            if (list.length < pageSize) {\n                break\n            }\n        }\n    } catch (err) {\n        console.log('getAddressSensibleFtList error')\n        console.error(err)\n    }\n    return res;\n}\n\nexport async function getAddressSensibleFtListByPage(network: NetWork, address: string, page: number, pageSize: number = 20): Promise<SensibleFt[]> {\n    const apiPrefix = getSensibleApiPrefix(network)\n\n    const res = await axios.get(`${apiPrefix}/contract/ft/address/${address}/balance`)\n    const success = isSensibleSuccess(res)\n\n    if (success) {\n        return (res.data || []).map((item: any) => {\n            return {\n                genesis: item.genesis,\n                codehash: item.codeHash,\n                sensibleId: item.sensibleId,\n                tokenName: item.name,\n                tokenSymbol: item.symbol,\n                tokenDecimal: item.decimal,\n                balance: util.plus(item.confirmedString, item.unconfirmedString),\n            }\n        })\n    }\n    throw new Error(res.statusText)\n}\n\n// 获取 mvc utxo\nexport async function getAddressMvcUtxoList(network: NetWork, address: string, page: number, pageSize: number=16): Promise<MvcUtxo[]> {\n    const cursor = (page - 1) * pageSize\n    const apiPrefix = getSensibleApiPrefix(network)\n    const res = await axios.get(`${apiPrefix}/address/${address}/utxo`)\n    const success = isSensibleSuccess(res)\n    if (success) {\n        return (res.data || []).map((item: any) => {\n            return {\n                txId: item.txid, \n                outputIndex: item.outIndex,\n                satoshis: item.value,\n                address: address,\n            }\n        })\n    }\n\n    // const fakeUtxoList: MvcUtxo[] = [\n    //     {\n    //         txId: '6a18f5b859fb4c281affaf8f6245a2fe0813867d4b7d24948da18e099462619b',\n    //         outputIndex: 0,\n    //         satoshis: 98775,\n    //         address,\n    //     },\n    //     {\n    //         txId: 'de980facfe7b10a84bfa658130b2b7725565510f967534459d63e6c9717a08e2',\n    //         outputIndex: 0,\n    //         satoshis: 98679,\n    //         address,\n    //     },\n    //     {\n    //         txId: '8ace8ab3995de63af867d929561b3a48bb499ea8d6e64c2ecefba29c6213764f',\n    //         outputIndex: 4,\n    //         satoshis: 4939535,\n    //         address,\n    //     },\n    //     {\n    //         txId: '74bec534becb77f894bcacaf2386604642a1ea00e371838b1780f5235a12bb9d',\n    //         outputIndex: 2,\n    //         satoshis: 45033315,\n    //         address,\n    //     }\n    // ]\n    // if (page === 1) {\n    //     return fakeUtxoList\n    // }\n    // return []\n    \n    throw new Error(res.statusText)\n}\n\n// 获取mvc 余额, 这里加入了ft utxo的值，暂时不能用\nexport async function getAddressMvcBalance(network: NetWork, address: string): Promise<string> {\n    const apiPrefix = getSensibleApiPrefix(network)\n    const res = await axios.get(`${apiPrefix}/address/${address}/balance`)\n    if (res.status == 200) {\n        return util.plus(res.data.confirmed, res.data.unconfirmed)\n    }\n    throw new Error(res.statusText)\n}\n\nexport async function getAddressMvcBalanceByUtxo(network: NetWork, address: string): Promise<string> {\n    let page = 1\n    const pageSize = 16\n    let sum: string = '0'\n    for (;;) {\n        const utxoList = await getAddressMvcUtxoList(network, address, page, pageSize)\n        const total = utxoList.reduce((prev: any, cur: any) => util.plus(prev, cur.satoshis), '0')\n        sum = util.plus(sum, total)\n        if (utxoList.length < pageSize) {\n            break\n        }\n        page++\n    }\n    console.log('balance', sum)\n    return sum\n}\n\n// 获取 sensible ft 余额\nexport async function getAddressSensibleFtBalance(network: NetWork, address: string, codehash: string, genesis: string): Promise<number> {\n    const apiPrefix = getSensibleApiPrefix(network)\n    const res = await axios.get(`${apiPrefix}/contract/ft/address/${address}/balance?codeHash=${codehash}&&genesis=${genesis}`)\n    const success = isSensibleSuccess(res)\n    if (success) {\n        return Number(util.plus(res.data[0].confirmedString, res.data[0].unconfirmedString))\n    }\n    throw new Error(res.statusText)\n}\n\n// 获取 sensible 余额 地址\nexport async function getSensibleAddressUrl(network: NetWork, address: string, codehash: string, genesis: string) {\n    const test = network === NetWork.Mainnet ? '' : '/test'\n    // https://sensiblequery.com/#/ft/utxo/ac939f3cf7aba022d09f05e5448f1e635c81dbb3/598d220eaecb68cf783cbc6cc6295d042897874f/1FJCX1QG7KyaHpx1U2iVe4xoAWNVB1Wd3L\n    return `https://sensiblequery.com${test}/#/ft/utxo/${codehash}/${genesis}/${address}`\n}\n\n\n// 广播交易\nexport async function broadcastSensibleQeury(network: NetWork, rawtx: string) {\n    const apiPrefx = getSensibleApiPrefix(network)\n    console.log('sensible 交易广播', network, rawtx)\n    const res = await axios.post(`${apiPrefx}/tx/broadcast`, {\n        hex: rawtx,\n    })\n    const success = isSensibleSuccess(res)\n    if (success) {\n        return new mvc.Transaction(rawtx).hash\n    }\n    throw new Error('broadcast failed')\n}\n\n\n// 发送 token 交易\nconst mapMvcFeeError = (err: Error) => {\n    if (err.message === \"Insufficient balance.\") {\n        // 将模糊的错误信息转换\n        return new Error('Low mvc balance to pay miners')\n    }\n    return err\n}\nconst getCustomSigners = (codehash: string, genesis: string):SensibleSatotx[] => {\n    const findValue = customSatotxList.find(item => item.codehash === codehash && item.genesis === genesis)\n    if (findValue) {\n        return findValue.satotxList\n    }\n    return []\n}\nconst selectNotNullSigners = (...signerList: SensibleSatotx[][]): SensibleSatotx[] =>  {\n    for (let signers of signerList) {\n        if (signers && signers.length > 0) {\n            return signers\n        }\n    }\n    return []\n}\nexport async function transferSensibleFt(network: NetWork, signers: SensibleSatotx[], senderWif: string, receivers: TransferReceiver[], codehash: string, genesis: string, utxos: any = false, noBroadcast: boolean = false){\n    \n    const customSigner = getCustomSigners(codehash, genesis)\n    signers = selectNotNullSigners(signers, customSigner)\n\n    console.log('signers', signers)\n    \n    const ft = new SensibleFT({\n        network: network as any,\n        purse: senderWif,\n        feeb: 1.0,\n    })\n    console.log('transferSensibleFt', receivers, network, codehash, genesis, signers)\n\n    try {\n        const {txid, tx, routeCheckTx} = await ft.transfer({\n            senderWif: senderWif,\n            receivers,\n            codehash,\n            genesis,\n            utxos: utxos,\n            noBroadcast,\n        })\n        if (noBroadcast === true) {\n            return {tx, routeCheckTx}\n        }\n        util.checkFeeRate(tx)\n        const txParseRes = parseTransaction(network, tx.serialize(true))\n        return {\n            txid,\n            outputs: txParseRes.outputs,\n        }\n    } catch (_err: any) {\n        const err = mapMvcFeeError(_err)\n        const errMsg = err.toString();\n        const isMvcAmountExceed =\n          errMsg.indexOf(\n            \"Mvc utxos should be no more than 3 in \"\n          ) > 0;\n        let isFtUtxoAmountExceed = errMsg.indexOf('Too many token-utxos') > 0;\n        console.log(\"broadcast sensible ft error\");\n        console.error(err);\n\n        if (!isMvcAmountExceed && !isFtUtxoAmountExceed) {\n            throw err;\n        }\n\n        // 如果 mvc utxo 先 merge mvc utxo\n        if (isMvcAmountExceed) {\n            try {\n                await mergeMvcUtxo(network, senderWif)\n                await sleep(3000)\n            } catch (err) {\n                console.log('merge mvc utxo fail')\n                console.error(err)\n                throw err\n            }\n\n            // merge 后重新发起 ft transfer 交易\n            try {\n                const {txid, tx} = await ft.transfer({\n                    senderWif: senderWif,\n                    receivers,\n                    codehash,\n                    genesis,\n                })\n                util.checkFeeRate(tx)\n                const txParseRes = parseTransaction(network, tx.serialize(true))\n                return {\n                    txid,\n                    outputs: txParseRes.outputs,\n                }\n            } catch (_err: any) {\n                const err = mapMvcFeeError(_err)\n                console.log('ft transfer fail after mvc utxo merge')\n                console.error(err)\n                const errMsg = err.toString()\n                isFtUtxoAmountExceed = errMsg.indexOf('Too many token-utxos') > 0;\n                if (!isFtUtxoAmountExceed) {\n                    throw err\n                }\n            }\n        }\n\n        if (isFtUtxoAmountExceed) {\n            // merge utxo\n            try {\n                //@ts-ignore\n                await ft.merge()\n                //util.checkFeeRate(tx)\n                await sleep(3000)\n            } catch (err) {\n                console.log('merge ft utxo fail')\n                console.error(err)\n                throw err\n            }\n\n            // merge 后重新发起 ft transfer 交易\n            try {\n                const {txid, tx} = await ft.transfer({\n                    senderWif: senderWif,\n                    receivers,\n                    codehash,\n                    genesis,\n                })\n                util.checkFeeRate(tx)\n                const txParseRes = parseTransaction(network, tx.serialize(true))\n                return {\n                    txid,\n                    outputs: txParseRes.outputs,\n                }\n            } catch (_err: any) {\n                const err = mapMvcFeeError(_err)\n                console.log('ft transfer fail after ft utxo merge')\n                console.error(err)\n                throw err\n            }\n        }\n    } \n}\n\nconst Signature = mvc.crypto.Signature;\nexport const sighashType = Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID;\n\n\n// p2pkh 解锁\nexport function unlockP2PKHInput(privateKey: mvc.PrivateKey, tx: mvc.Transaction, inputIndex: number, sigtype: number) {\n    const sig = new mvc.Transaction.Signature({\n      publicKey: privateKey.publicKey,\n      prevTxId: tx.inputs[inputIndex].prevTxId,\n      outputIndex: tx.inputs[inputIndex].outputIndex,\n      inputIndex,\n      signature: mvc.Transaction.Sighash.sign(\n        tx,\n        privateKey,\n        sigtype,\n        inputIndex,\n        tx.inputs[inputIndex].output.script,\n        tx.inputs[inputIndex].output.satoshisBN\n      ),\n      sigtype,\n    });\n  \n    tx.inputs[inputIndex].setScript(\n      mvc.Script.buildPublicKeyHashIn(\n        sig.publicKey,\n        sig.signature.toDER(),\n        sig.sigtype\n      )\n    );\n}\n\n// 发送 mvc 交易\nfunction checkMvcReceiversSatisfied(receivers: TransferReceiver[], tx: any, network: NetWork) {\n    let satified = true\n    const txAddressAmountMap: {[key: string]: number} = {}\n    const getKey = (address: string, amount: any) => {\n        return `${address}_${util.toString(amount)}`\n    }\n    tx.outputs.forEach((output: any) => {\n        const address = output.script.toAddress(network);\n        const amount = output.satoshis\n        const key = getKey(address, amount)\n        txAddressAmountMap[key] = (txAddressAmountMap[key] || 0) + 1\n    })\n    for (let i = 0; i < receivers.length; i++) {\n        const rece = receivers[i]\n        const key = getKey(rece.address, rece.amount)\n        if (!txAddressAmountMap[key]) {\n            satified = false\n            break\n        }\n        txAddressAmountMap[key] = txAddressAmountMap[key] - 1\n    }\n    return satified\n}\nexport async function transferMvc(network: NetWork, senderWif: string, receivers: TransferReceiver[], noBroadcast: boolean=false, allUtxos: boolean=false) {\n    // 1. 获取用户 utxo 列表\n    // 2. 判断 utxo 金额 是否 满足 receivers 金额\n    // 3. 构造交易\n    // 4. 广播交易\n    console.log('arguments', network, senderWif, receivers)\n    const address = new mvc.PrivateKey(senderWif, network).toAddress(network)\n    const balance = await getAddressMvcBalanceByUtxo(network, address)\n    const totalOutput = receivers.reduce((prev: any, cur) => util.plus(prev, cur.amount), '0')\n    if (util.lessThan(balance, totalOutput)) {\n        throw new Error('Insufficient_mvc_Balance')\n    }\n    let utxoValue: string = '0'\n    let selectedUtxoList = []\n\n    const tx = new mvc.Transaction()\n    tx.feePerKb(500)\n    const dust = 456\n\n    // input = output + fee + change\n    // 异常情况: 加上 change 后, fee 增加, 原本 input 不够了, 此时将所有输出移除, 然后，暂不考虑\n    \n    const pageSize = 16\n    for (let page = 1; ;page++) {\n        const utxoResList = await getAddressMvcUtxoList(network, address, page, pageSize)\n        for (let i = 0; i < utxoResList.length; i++) {\n            const item = utxoResList[i]\n            utxoValue = util.plus(utxoValue, item.satoshis)\n            selectedUtxoList.push(item)\n            tx.addInput(\n                new mvc.Transaction.Input.PublicKeyHash({\n                    output: new mvc.Transaction.Output({\n                        script: mvc.Script.buildPublicKeyHashOut(item.address),\n                        satoshis: item.satoshis,\n                    }),\n                    prevTxId: item.txId,\n                    outputIndex: item.outputIndex,\n                    script: mvc.Script.empty(),\n                })\n            );\n            if (!allUtxos && util.lessThanEqual(util.plus(totalOutput, dust), utxoValue)) {\n                break\n            }\n        }\n        if (!allUtxos && util.lessThanEqual(util.plus(totalOutput, dust), utxoValue)) {\n            break\n        }\n        if (utxoResList.length <= pageSize) {\n            break\n        }\n    }\n    receivers.forEach(item => {\n        tx.to(item.address, +item.amount)\n    })\n    if (util.greaterThan(util.minus(utxoValue, +totalOutput), 0)) {\n        tx.change(address)\n    }\n    // 如果 (utxo输入 - fee - 所有输出) = 找零 < dust，那么全部转出\n    if (util.lessThan(util.minus(utxoValue, tx.getFee(), totalOutput), dust)) {\n        // 全部转出\n        tx.clearOutputs()\n        receivers.forEach((item, index) => {\n            \n            if (receivers.length === index + 1) {\n                // 最后一个使用 change\n                tx.change(item.address)\n            } else {\n                tx.to(item.address, +item.amount)\n            }\n        })\n    }\n    tx.inputs.forEach((_: any, inputIndex: number) => {\n        const privateKey = new mvc.PrivateKey(senderWif)\n        unlockP2PKHInput(privateKey, tx, inputIndex, sighashType);\n    });\n    util.checkFeeRate(tx)\n    if (noBroadcast === true) {\n        return tx\n    }\n    const txid = await broadcastSensibleQeury(network, tx.serialize())\n    const txParseRes = parseTransaction(network, tx.serialize(true))\n\n    const amountSatified = checkMvcReceiversSatisfied(receivers, tx, network)\n    if (!amountSatified) {\n        console.log(util.safeJsonStringify({\n            type: 'mvcTransferAmountNotSatified',\n            txid: tx.hash,\n            receivers,\n            outputs: txParseRes.outputs,\n        }))\n        Sentry.captureMessage(`mvcTransferAmountNotSatified_${address}_${tx.hash}`);\n    }\n    return {\n        txid,\n        outputs: txParseRes.outputs,\n        fee: tx.getFee()\n    }\n}\n\n// 合并 mvc utxo, 合并一页\nexport async function mergeMvcUtxo(network: NetWork, senderWif: string) {\n    const address = new mvc.PrivateKey(senderWif, network).toAddress(network)\n    const utxolist = await getAddressMvcUtxoList(network, address, 1)\n    const tx = new mvc.Transaction()\n    tx.feePerKb(500)\n    utxolist.forEach(item => {\n        tx.addInput(new mvc.Transaction.Input.PublicKeyHash({\n            output: new mvc.Transaction.Output({\n                script: mvc.Script.buildPublicKeyHashOut(item.address),\n                satoshis: item.satoshis,\n            }),\n            prevTxId: item.txId,\n            outputIndex: item.outputIndex,\n            script: mvc.Script.empty(),\n        }))\n    })\n    tx.change(address)\n    tx.inputs.forEach((_: any, inputIndex: number) => {\n        const privateKey = new mvc.PrivateKey(senderWif)\n        unlockP2PKHInput(privateKey, tx, inputIndex, sighashType)\n    })\n    util.checkFeeRate(tx)\n    const txid = await broadcastSensibleQeury(network, tx.serialize())\n    const txParseRes = parseTransaction(network, tx.serialize(true))\n    return {\n        txid,\n        outputs: txParseRes.outputs,\n    }\n}\n\n\nconst parseTokenContractScript = function (scriptBuf: any, network: any = \"mainnet\") {\n    \n    //TODO: const parsed = SensibleFT.parseTokenScript(scriptBuf, network)\n    \n    return \n};\n\n\n\nexport function parseTransaction(network: NetWork, rawtx: string) {\n    let tx\n    try {\n        tx = new mvc.Transaction(rawtx)\n    } catch (err: any) {\n        return {\n            error: err.message\n        }\n    }\n\n    const inputs = tx.inputs.map((input: any, index: number) => {\n        const ftToken: any = parseTokenContractScript(input.script.toBuffer(), network);\n\n        let ret: any = {\n            index: index,\n            prevTxId: input.prevTxId.toString('hex'),\n            outputIndex: input.outputIndex,\n            script: input.script.toString('hex'),\n        }\n        try {\n            const addr = input.script.toAddress(network);\n            if (addr) {\n                ret.address = addr.toString()\n            }\n        } catch (err) {}\n        if (!ftToken) {\n            return ret\n        }\n        if (ftToken.tokenAmount <= 0) {\n            return ret\n        }\n        ret = {\n            ...ret,\n            isFt: true,\n            ftDetail: {\n                genesis: ftToken.genesis,\n                codehash: ftToken.codehash,\n                address: ftToken.tokenAddress,\n                decimal: ftToken.decimalNum,\n                name: ftToken.tokenName,\n                symbol: ftToken.tokenSymbol,\n                sensibleId: ftToken.sensibleId,\n            }\n        }\n        return ret\n    })\n    const outputs = tx.outputs.map((output: any, index: number) => {\n        const ftToken: any = parseTokenContractScript(output.script.toBuffer(), network);\n        let ret: any = {\n            index: index,\n            satoshis: output.satoshis,\n            script: output.script.toString('hex')\n        }\n        try {\n            const addr = output.script.toAddress(network);\n            if (addr) {\n                ret.address = addr.toString()\n            }\n        } catch (err) {}\n        if (!ftToken) {\n            return ret\n        }\n        if (ftToken.tokenAmount <= 0) {\n            return ret\n        }\n        ret = {\n            ...ret,\n            isFt: true,\n            ftDetail: {\n                genesis: ftToken.genesis,\n                codehash: ftToken.codehash,\n                address: ftToken.tokenAddress,\n                decimal: ftToken.decimalNum,\n                name: ftToken.tokenName,\n                symbol: ftToken.tokenSymbol,\n                amount: ftToken.tokenAmount,\n                sensibleId: ftToken.sensibleId,\n            }\n        }\n        return ret\n    })\n\n    return {\n        inputs: inputs,\n        outputs: outputs,\n        txid: tx.hash,\n    }\n    \n}\n\n\n(window as any).transferMvc = transferMvc;\n(window as any).signAnyTx = signAnyTx;\n","import { createGlobalState } from \"react-hooks-global-state\";\nimport {State, SensibleSatotx} from './stateType'\n\nconst defaultSatotx: SensibleSatotx = {\n    satotxApiPrefix: 'https://api.satotx.com', \n    satotxPubKey: '25108ec89eb96b99314619eb5b124f11f00307a833cda48f5ab1865a04d4cfa567095ea4dd47cdf5c7568cd8efa77805197a67943fe965b0a558216011c374aa06a7527b20b0ce9471e399fa752e8c8b72a12527768a9fc7092f1a7057c1a1514b59df4d154df0d5994ff3b386a04d819474efbd99fb10681db58b1bd857f6d5'\n}\n\n// app state\nconst initialState: State = {\n    account: null,\n    key: null,\n    mvcBalance: null,\n    sensibleFtList: [],\n    satotxConfigMap: new Map()\n};\ninitialState.satotxConfigMap.set(\n    '5b3bfa8e7600d701e70551075573ea28fd16c25a39fe2bdafdc3e08b11ca76b800000000', \n    [defaultSatotx, defaultSatotx, defaultSatotx]\n)\nconst { useGlobalState, getGlobalState, setGlobalState } = createGlobalState(initialState);\n\nexport {\n    useGlobalState,\n    getGlobalState,\n    setGlobalState,\n    defaultSatotx,\n}\n","import {setGlobalState, getGlobalState } from './state'\nimport {generateKeysFromEmailPassword, getAddressSensibleFtList, getAddressMvcBalanceByUtxo, signAnyTx, getAddressMvcBalance} from '../lib'\nimport {Account, BalanceMvc, Key, SensibleFt} from './stateType'\nimport * as createPostMsg from 'post-msg';\nimport { mvc } from 'mvc-scrypt';\n\n// local account storage\nconst accountStorageKey = 'accountStorageKey'\n// localStorage.removeItem(accountStorageKey)\nfunction saveAccountStorage(account: Account | null) {\n    const str = account ? JSON.stringify(account) : ''\n    localStorage.setItem(accountStorageKey, str)\n    // do not save account !!!\n}\nfunction getAccountStorage(): Account | null {\n    const str = localStorage.getItem(accountStorageKey)\n    if (!str) {\n        return null\n    }\n    return JSON.parse(str)\n}\n\nfunction isSupportToken(codehash: string) {\n    //return SensibleFT.isSupportedToken(codehash)\n    return true\n}\n\n// app action\nlet pollingMvcTimer = 0\nlet pollingSensibleFtTimer = 0\nexport async function pollingMvcBalance(){\n    clearInterval(pollingMvcTimer)\n    const fn = async () => {\n        const account = getGlobalState('account')\n        const key = getGlobalState('key')\n        if (!account || !key) {\n            return\n        }\n        try {\n            const balance = await getAddressMvcBalance(account.network, key.address)\n            setGlobalState('mvcBalance', {balance})\n        } catch (err) {\n            console.log('getAddressMvcBalance err', account.network, key.address, err)\n        }\n    }\n    await fn()\n    pollingMvcTimer = window.setInterval(fn, 5000)\n}\nexport async function pollingSensibleFtBalance() {\n    clearInterval(pollingSensibleFtTimer)\n    const fn = async () => {\n        const account = getGlobalState('account')\n        const key = getGlobalState('key')\n        if (!account || !key) {\n            return\n        }\n        try {\n            const sensibleFtList = await getAddressSensibleFtList(account.network, key.address)\n            const valid_sensibleFtList = sensibleFtList.filter(item => isSupportToken(item.codehash));\n            setGlobalState('sensibleFtList', valid_sensibleFtList);\n        } catch (err) {\n            console.log('getAddressSensibleFtList err', account.network, key.address, err)\n        }\n    }\n    await fn()\n    pollingSensibleFtTimer = window.setInterval(fn, 5000)\n}\n\nexport async function saveAccount(account: Account | null) {\n    saveAccountStorage(account)\n    if (account) {\n        const key = generateKeysFromEmailPassword(account.email, account.password, account.network)\n        setGlobalState('account', account)\n        setGlobalState('key', key)\n        await pollingSensibleFtBalance()\n        pollingMvcBalance()\n    } else {\n        setGlobalState(\"account\", null)\n        setGlobalState('key', null)\n    }\n}\n\nexport function recoverAccountFromStorage() {\n    const account = getAccountStorage()\n    saveAccount(account)\n}\n\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))\n\n// iframe action\nexport async function runIframeTask() {\n    if (window === window.top) {\n        return\n    }\n    const hashdata = JSON.parse(decodeURIComponent(window.location.hash.substr(1)))\n    const postMsg = createPostMsg(window.top, '*')\n    const id = hashdata.id\n\n    let preAccount: Account | null = null\n    let preMvcBalance: BalanceMvc | null = null\n    let preSensibleFtBalance: SensibleFt[] = []\n    let accountKey: Key | null = null\n    // let lastMvcBalance: \n\n    postMsg.emit(id, {\n        type: 'ready'\n    })\n\n    const isMvcBalanceEqual = (b1: BalanceMvc | null, b2: BalanceMvc | null) => {\n        if (!b1 && !b2) {\n            return true\n        }\n        return b1?.balance === b2?.balance\n    }\n    const isSensibleFtBalanceEqual = (b1: SensibleFt[], b2: SensibleFt[]) => {\n        if (b1.length !== b2.length) {\n            return false\n        }\n        b1.sort((item1, item2) => item1.genesis.localeCompare(item2.genesis))\n        b2.sort((item1, item2) => item1.genesis.localeCompare(item2.genesis))\n\n        for (let i = 0; i < b1.length; i++) {\n            const item1 = b1[i]\n            const item2 = b2[i]\n            if (item1.genesis !== item2.genesis) {\n                return false\n            }\n            if (item1.balance !== item2.balance) {\n                return false\n            }\n        }                \n        return true\n    }\n    const isAccountEqual = (b1: Account | null, b2: Account | null) => {\n        return (\n            b1?.email === b2?.email &&\n            b1?.network === b2?.network &&\n            b1?.password === b2?.password\n        )\n    }\n    const requestLatestData = async () => {\n        const latestAccount = getAccountStorage()\n        if (!(isAccountEqual(latestAccount, preAccount))) {\n            postMsg.emit(id, {\n                type: 'account',\n                data: latestAccount\n            })\n        }\n        preAccount = latestAccount;\n        if (preAccount) {\n            // get balance\n            accountKey = generateKeysFromEmailPassword(preAccount.email, preAccount.password, preAccount.network)\n            try {\n                const latestBalance = await getAddressMvcBalanceByUtxo(preAccount.network, accountKey.address)\n                const equal = isMvcBalanceEqual(preMvcBalance, {balance: latestBalance})\n                preMvcBalance = {balance: latestBalance}\n                if (!equal) {\n                    postMsg.emit(id, {\n                        type: 'mvcBalance', \n                        data: preMvcBalance,\n                    })\n                }\n            } catch (err) {}\n            try {\n                const latestBalance = await getAddressSensibleFtList(preAccount.network, accountKey.address)\n                const equal = isSensibleFtBalanceEqual(preSensibleFtBalance, latestBalance)\n                preSensibleFtBalance = latestBalance\n                if (!equal) {\n                    postMsg.emit(id, {\n                        type: 'sensibleFtBalance',\n                        data: preSensibleFtBalance\n                    })\n                }\n            } catch (err) {}\n            return true\n        } else {\n            return false\n        }\n    }\n\n    const handleRequest = (method: string, fn: Function) => {\n        postMsg.on(id, async function (_: any, eventData: any) {\n            const {type, data} = eventData\n            if (type === 'request' && data?.method === method) {\n                const requestId = data.requestId\n                try {\n                    const res = await fn(data.params)\n                    postMsg.emit(id, {\n                        type: 'response',\n                        data: {\n                            requestId,\n                            method,\n                            response: res,\n                        }\n                    })\n                } catch (err: any) {\n                    postMsg.emit(id, {\n                        type: 'response',\n                        data: {\n                            requestId,\n                            method,\n                            error: err.toString()\n                        }\n                    })\n                }\n            }\n        })\n    }\n\n    handleRequest('getAccount', async () => {\n        await requestLatestData()\n        if (!preAccount) {\n            return null\n        }\n        return {\n            name: preAccount.email,\n            email: preAccount.email,\n            network: preAccount.network,\n        }\n    });\n    handleRequest('getMvcBalance', async () => {\n        await requestLatestData()\n        return preMvcBalance\n    })\n    handleRequest('getSensibleFtBalance', async () => {\n        await requestLatestData()\n        return preSensibleFtBalance\n    })\n    handleRequest('getAddress', async () => {\n        await requestLatestData()\n        if (!accountKey) {\n            return null\n        }\n        return accountKey.address\n    })\n    handleRequest('signTx', async (options: any) => {\n        // 参数 (address + sighash)\n        // sighash: tx, sigtype, inputIndex, input.output.script, input.output,satoshisBN\n\n        // mvc-scrypt: signTx(tx, privateKey, lockingScriptASM: string, inputAmount: number, inputIndex: number, sighashType = DEFAULT_SIGHASH_TYPE, flags=DEFAULT_FLAGS): Signature.toTxFormat()\n\n        // mvc: mvc.Transaction.sighash.sign(tx: Transaction, privateKey: PrivateKey, sighashType: number, inputIndex: string, subscript: Script, satoshisBN: BN): Signature\n\n        // sCrypt params: tx(Transaciton object), inputIndex(number), sigHashType(SigType), onlySig?(boolean) 成功返回 unlockingScript 或者 Signature string\n\n        // options: {txHex, scriptHex, inputIndex, privateKey, publicKey, address, satoshis}\n\n        const {address} = options\n        if (!accountKey) {\n            throw new Error('not_login')\n        }\n        if (address !== accountKey.address) {\n            throw new Error('not_my_address')\n        }\n        return signAnyTx({\n            ...options,\n            privateKey: new mvc.PrivateKey(accountKey.privateKey, preAccount?.network ),\n            publicKey: new mvc.PublicKey(accountKey.publicKey, preAccount?.network)\n        })\n    })\n    handleRequest('logout', async () => {\n        saveAccountStorage(null)\n    })\n    handleRequest('ping', () => {\n        return null;\n    })\n\n    for (;;) {\n        const signed = await requestLatestData()\n        await sleep(signed ? 3000 : 500)\n    }\n\n}","import { useRef, useEffect } from \"react\";\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    let id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport function useOnceCall(cb, condition = true) {\n  const isCalledRef = useRef(false);\n  useEffect(() => {\n    if (condition && !isCalledRef.current) {\n      isCalledRef.current = true;\n      cb();\n    }\n  }, [cb, condition]);\n}\n","import {\n  Button,\n  Popover,\n  Card,\n  Form,\n  Input,\n  Select,\n  List,\n  Row,\n  Col,\n  message,\n  InputNumber,\n  Space,\n  Modal,\n} from \"antd\";\nimport {\n  UserOutlined,\n  LockOutlined,\n  MinusOutlined,\n  PlusOutlined,\n  LeftOutlined,\n} from \"@ant-design/icons\";\nimport { useState, useEffect } from \"react\";\nimport * as QRCode from \"qrcode.react\";\nimport { mvc } from \"mvc-scrypt\";\nimport {\n  getWocAddressUrl,\n  formatValue,\n  isValidAddress,\n  transferMvc,\n  transferSensibleFt,\n  getWocTransactionUrl,\n  getSensibleFtHistoryUrl,\n  parseTransaction,\n  broadcastSensibleQeury,\n} from \"./lib\";\nimport * as createPostMsg from \"post-msg\";\nimport { useGlobalState } from \"./state/state\";\nimport * as actions from \"./state/action\";\nimport { useOnceCall } from \"./hooks\";\nimport \"./App.css\";\nimport * as util from \"./lib/util\";\nimport * as Sentry from \"@sentry/react\";\nimport axios from \"axios\";\n\n//const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst { Option } = Select;\n\nfunction Header() {\n  const [account] = useGlobalState(\"account\");\n  const [key] = useGlobalState(\"key\");\n  const [decodeModalVisible, setDecodeModalVisible] = useState(false);\n  const [rawtx, setRawtx] = useState(\"\");\n  const [network, setNetwork] = useState(\"\");\n  const [resultModalVisible, setResultModalVisible] = useState(false);\n\n  const handleLogout = () => {\n    actions.saveAccount(null);\n  };\n  const handleHistory = () => {\n    let url = getWocAddressUrl(account.network, key.address);\n    window.open(url);\n  };\n  const handleSourceCode = () => {\n    window.open(\"https://github.com/mvc-swap/web-wallet\");\n  };\n\n  const decodeTx = () => {\n    const res = parseTransaction(network, rawtx);\n    console.log(\"decodeTx res\", res);\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"logo\">Web Wallet</div>\n      {account && (\n        <Popover\n          title=\"\"\n          content={\n            <>\n              <Button type=\"link\" onClick={handleLogout}>\n                Logout\n              </Button>\n              <br />\n              <Button type=\"link\" onClick={handleHistory}>\n                History\n              </Button>\n              <br />\n              <Button type=\"link\" onClick={handleSourceCode}>\n                Source Code\n              </Button>\n              <br />\n              <Button type=\"link\" onClick={() => setDecodeModalVisible(true)}>\n                decode rawtx\n              </Button>\n            </>\n          }\n        >\n          <Button type=\"link\">{account.email}</Button>\n        </Popover>\n      )}\n      <Modal\n        visible={decodeModalVisible}\n        onCancel={() => setDecodeModalVisible(false)}\n      >\n        <Input.TextArea\n          rows={4}\n          value={rawtx}\n          onChange={(e) => setRawtx(e.target.value)}\n        ></Input.TextArea>\n        <Select\n          style={{ width: 180 }}\n          placeholder=\"Select network\"\n          value={network}\n          onChange={(value) => setNetwork(value)}\n        >\n          <Option value=\"mainnet\">mainnet</Option>\n          <Option value=\"testnet\">testnet</Option>\n        </Select>\n        <Button type=\"primary\" onClick={decodeTx}>\n          decode\n        </Button>\n      </Modal>\n      <Modal\n        visible={resultModalVisible}\n        onCancel={() => setResultModalVisible(false)}\n      ></Modal>\n    </div>\n  );\n}\n\nfunction LoginPanel() {\n  const [account] = useGlobalState(\"account\");\n  const [form] = Form.useForm();\n\n  const handleOnFinish = () => {\n    Modal.confirm({\n      title: \"Attention\",\n      content: (\n        <div>\n          The private key of the web wallet is calculated in real-time through the user's email address and password, and will not be uploaded to the server or stored locally (see&nbsp; \n          <a\n            href=\"https://github.com/mvc-swap/web-wallet\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            github\n          </a>\n          &nbsp;for the code). It is only for the convenience of user testing and is not suitable for depositing a large number of funds. It is recommended that users keep the email + password combination properly to prevent the loss of funds or transfer the remaining funds after use. Loss of mailbox + password combination (forgotten, stolen, etc.) will lead to asset loss.\n        </div>\n      ),\n      onOk: () => {\n        const account = form.getFieldsValue();\n        actions.saveAccount(account);\n      },\n    });\n  };\n  if (account) {\n    return null;\n  }\n\n  return (\n    <Card className=\"card\" title=\"Login\" bordered={false}>\n      <Form form={form} layout=\"vertical\" onFinish={handleOnFinish}>\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              type: \"email\",\n              required: true,\n              message: \"Please input a valid Email!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Email\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[\n            { required: true, message: \"Please input your Password!\" },\n            {\n              min: 6,\n              message: \"Password at least 6 chars\",\n              transform: (value) => value && value.trim(),\n            },\n          ]}\n        >\n          <Input.Password\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            type=\"password\"\n            visibilityToggle={true}\n            placeholder=\"Password\"\n          />\n        </Form.Item>\n        <Form.Item name=\"network\" label=\"Network\" rules={[{ required: true }]}>\n          <Select placeholder=\"Select network\">\n            <Option value=\"mainnet\">mainnet</Option>\n            <Option value=\"testnet\">testnet</Option>\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          Note: The private key of the web wallet is calculated in real time through the user's email address and password (no registration required), and the same private key can be calculated every time you enter the same email address and password to log in. The private key will not be uploaded to the server, nor will it Saved locally, it is only for the convenience of users for testing, and is not suitable for storing large amounts of funds. It is recommended that users keep the email + password combination properly to prevent loss of funds. \n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            Log in\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nfunction AccountInfoPanel({ onWithDraw, onTransfer }) {\n  const [key] = useGlobalState(\"key\");\n  const [account] = useGlobalState(\"account\");\n  const [mvcBalance] = useGlobalState(\"mvcBalance\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n\n  if (!key || !account) {\n    return null;\n  }\n  const handleHistory = () => {\n    let url = getWocAddressUrl(account.network, key.address);\n    window.open(url);\n  };\n  const handleTransfer = (genesis) => {\n    if (!genesis) {\n      return onTransfer(\"\");\n    }\n    // if (!satotxConfigMap.has(genesis)) {\n    //   return message.error(\"rabin api not set or found\");\n    // }\n    return onTransfer(genesis);\n  };\n  return [\n    <Card\n      className=\"card\"\n      title=\"Account Info\"\n      bordered={false}\n      actions={\n        <>\n          <Button type=\"link\" onClick={handleHistory}>\n            history\n          </Button>\n          ,\n          <Button type=\"link\" onClick={onWithDraw}>\n            withdraw\n          </Button>\n          ,\n        </>\n      }\n    >\n      <Form layout=\"vertical\">\n        <Form.Item label={`${account.network} address`}>\n          <Input value={key.address} />\n          <div style={{ margin: 20 }}>\n            <QRCode value={key.address} />\n          </div>\n        </Form.Item>\n        <Form.Item label=\"privateKey\">\n          <Input.Password visibilityToggle={true} value={key.privateKey} />\n        </Form.Item>\n      </Form>\n    </Card>,\n    <Card className=\"card\" title=\"Asset\" bordered={false}>\n      <Form layout=\"vertical\">\n        {mvcBalance && (\n          <Form.Item label=\"SPACE balance\">\n            <Row justify=\"space-between\">\n              <Col span={16}>\n                <div>{formatValue(mvcBalance.balance, 8)}</div>\n              </Col>\n              <Col span={7}>\n                <Button type=\"link\" onClick={() => handleTransfer(\"\")}>\n                  Transfer SPACE\n                </Button>\n              </Col>\n            </Row>\n          </Form.Item>\n        )}\n        {sensibleFtList.length > 0 && (\n          <Form.Item label=\"Fungible Token\">\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={sensibleFtList}\n              renderItem={(item) => {\n                return (\n                  <List.Item\n                    key={item.genesis}\n                    actions={\n                      <>\n                        <Popover\n                          placement=\"topRight\"\n                          content={\n                            <>\n                              <div>codehash: {item.codehash}</div>,\n                              <div>genesis: {item.genesis}</div>,\n                            </>\n                          }\n                        >\n                          <a\n                            key=\"list-loadmore-more\"\n                            href={getSensibleFtHistoryUrl(\n                              account.network,\n                              key.address,\n                              item.genesis,\n                              item.codehash\n                            )}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                          >\n                            more info\n                          </a>\n                        </Popover>\n                      </>\n                    }\n                  >\n                    <List.Item.Meta\n                      title={item.tokenSymbol}\n                      description={item.tokenName}\n                    />\n                    <Row>\n                      <Col>\n                        <div\n                          style={{\n                            height: \"100%\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          Balance:{\" \"}\n                          {formatValue(item.balance, item.tokenDecimal)}\n                        </div>\n                      </Col>\n                      <Col>\n                        <Button\n                          type=\"link\"\n                          onClick={() => handleTransfer(item.genesis)}\n                        >\n                          Go Transfer\n                        </Button>\n                      </Col>\n                    </Row>\n                  </List.Item>\n                );\n              }}\n            ></List>\n          </Form.Item>\n        )}\n      </Form>\n    </Card>,\n  ];\n}\n\nfunction getRabinPubKeys(url) {\n  return axios.get(url);\n}\n\nasync function getRabins(rabinApis = []) {\n  let promises = [],\n    rabins = [];\n  rabinApis.forEach((rabinApi) => {\n    promises.push(getRabinPubKeys(rabinApi));\n  });\n  return new Promise((resolve) => {\n    axios.all(promises).then((res) => {\n      // console.log(res);\n      res.forEach((item, index) => {\n        rabins.push({\n          satotxApiPrefix: rabinApis[index],\n          satotxPubKey: item.data.data.pubKey,\n        });\n      });\n\n      resolve(rabins);\n    });\n  });\n}\n\nfunction TransferAllPanel({ initDatas = [], onCancel, onTransferCallback }) {\n  const [key] = useGlobalState(\"key\");\n  const [mvcBalance] = useGlobalState(\"mvcBalance\");\n  const [account] = useGlobalState(\"account\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  useOnceCall(() => {\n    const values = {};\n    initDatas.forEach((data, index) => {\n      const isMvc = !data.genesis;\n      const token = sensibleFtList.find(\n        (item) => item.genesis === data.genesis\n      );\n      const decimal = isMvc ? 8 : token.tokenDecimal;\n      values[`receiverList${index}`] = data.receivers.map((item) => {\n        return {\n          address: item.address,\n          amount: util.div(item.amount, util.getDecimalString(decimal)),\n        };\n      });\n    });\n    form.setFieldsValue(values);\n  }, key && mvcBalance);\n\n  if (!key) {\n    return null;\n  }\n  if (!mvcBalance) {\n    return null;\n  }\n\n  const handleSubmit = async () => {\n    const receiverLists = form.getFieldsValue();\n\n    const broadcastMvc = async ({ formatReceiverList, noBroadcast }) => {\n      setLoading(true);\n      let transferRes;\n      let txid = \"\";\n      try {\n        if (noBroadcast === true) {\n          const allUtxos = true;\n          const tx = await await transferMvc(\n            account.network,\n            key.privateKey,\n            formatReceiverList,\n            noBroadcast,\n            allUtxos\n          );\n          return tx;\n        }\n        const res = await await transferMvc(\n          account.network,\n          key.privateKey,\n          formatReceiverList\n        );\n        transferRes = res;\n        txid = res.txid;\n      } catch (err) {\n        const msg = \"broadcast error: \" + err.toString();\n        Sentry.captureException(err);\n        Sentry.captureMessage(`mvcTransferFail_${key.address}`);\n        onTransferCallback({\n          error: msg,\n        });\n        console.log(\"broadcast mvc error \");\n        console.error(err);\n        message.error(err.toString());\n      }\n      Sentry.captureMessage(`mvcTransferSuccess_${key.address}_${txid}`);\n      return transferRes;\n    };\n\n    const broadcastSensibleFt = async ({\n      formatReceiverList,\n      token,\n      decimal,\n      genesis,\n      rabinApis,\n      utxos,\n      noBroadcast,\n    }) => {\n      setLoading(true);\n      let transferRes;\n      try {\n        const rabins = await getRabins(rabinApis);\n        const res = await transferSensibleFt(\n          account.network,\n          // signers,\n          rabins,\n          key.privateKey,\n          formatReceiverList,\n          token.codehash,\n          token.genesis,\n          utxos,\n          noBroadcast || false\n        );\n        transferRes = res;\n      } catch (err) {\n        Sentry.captureException(err);\n        Sentry.captureMessage(\n          `ftTransferFail_${key.address}_${token.genesis}_${token.genesis}`\n        );\n        onTransferCallback({\n          error: \"broadcast sensible ft error, \" + err.toString(),\n        });\n        console.log(\"broadcast sensible ft error \");\n        console.error(err);\n        message.error(err.toString());\n      }\n      return transferRes;\n    };\n\n    const broadcastMvcAndToken = async () => {\n      const txs = [];\n      const transferRes = [];\n      let utxos = [];\n      // mvc transaction must be the first one\n      for (let i = 0; i < initDatas.length; i++) {\n        const data = initDatas[i];\n        const isMvc = !data.genesis;\n        const token = sensibleFtList.find(\n          (item) => item.genesis === data.genesis\n        );\n        const decimal = isMvc ? 8 : token.tokenDecimal;\n        const balance = isMvc ? mvcBalance.balance : token.balance;\n        const rabinApis = data.rabinApis;\n        const totalOutputValueFloatDuck = receiverLists[\n          `receiverList${i}`\n        ].reduce((prev, cur) => util.plus(prev, cur.amount), 0);\n\n        const totalOutputValue = util.multi(\n          totalOutputValueFloatDuck,\n          util.getDecimalString(decimal)\n        );\n        if (util.lessThan(balance, totalOutputValue)) {\n          const msg = \"Insufficient ft balance\";\n          onTransferCallback({\n            error: msg,\n          });\n          return message.error(msg);\n        }\n        const formatReceiverList = data.receivers.map((item) => {\n          return {\n            address: item.address,\n            // amount: util.multi(item.amount, util.getDecimalString(decimal)),\n            amount: item.amount,\n          };\n        });\n        if (isMvc) {\n          const tx = await broadcastMvc({\n            formatReceiverList,\n            noBroadcast: true,\n          });\n          const outputIndex = tx.outputs.length - 1;\n          //TODO: check res outputs\n          if (outputIndex !== 1) {\n            const msg = \"Insufficient ft balance\";\n            onTransferCallback({\n              error: msg,\n            });\n            return message.error(msg);\n          }\n          const output = tx.outputs[outputIndex];\n          txs.push({\n            tx: tx,\n            isMvc: true,\n            noBroadcast: !!data.noBroadcast,\n          });\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new mvc.PrivateKey(\n              key.privateKey,\n              account.network\n            ).toAddress(account.network),\n          });\n        } else {\n          const { routeCheckTx, tx } = await broadcastSensibleFt({\n            formatReceiverList,\n            token,\n            decimal,\n            genesis: data.genesis,\n            rabinApis,\n            utxos,\n            noBroadcast: true,\n          });\n          txs.push({\n            tx,\n            routeCheckTx,\n            isMvc: false,\n            noBroadcast: !!data.noBroadcast,\n          });\n          const outputIndex = tx.outputs.length - 1;\n          const output = tx.outputs[outputIndex];\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new mvc.PrivateKey(\n              key.privateKey,\n              account.network\n            ).toAddress(account.network),\n          });\n        }\n      }\n\n      for (const txInfo of txs) {\n        if (!txInfo.noBroadcast) {\n          if (txInfo.routeCheckTx) {\n            await broadcastSensibleQeury(\n              account.network,\n              txInfo.routeCheckTx.serialize(true)\n            );\n          }\n          if (txInfo.tx) {\n            await broadcastSensibleQeury(\n              account.network,\n              txInfo.tx.serialize(true)\n            );\n          }\n        }\n\n        var resItem = {\n          txid: txInfo.tx.hash,\n          outputs: parseTransaction(account.network, txInfo.tx.serialize(true))\n            .outputs,\n          fee: txInfo.tx.getFee(),\n          isMvc: txInfo.isMvc,\n          txHex: txInfo.tx.serialize(true),\n        };\n        if (!resItem.isMvc) {\n          resItem.routeCheckTxid = txInfo.routeCheckTx.hash;\n          resItem.routeCheckTxHex = txInfo.routeCheckTx.serialize(true);\n          resItem.routeCheckOutputs = parseTransaction(\n            account.network,\n            txInfo.routeCheckTx.serialize(true)\n          ).outputs;\n        }\n\n        transferRes.push(resItem);\n      }\n\n      setLoading(false);\n      onTransferCallback({\n        response: {\n          ...transferRes,\n        },\n      });\n    };\n\n    const buildMvcAndTokenTx = async () => {\n      const txs = {};\n      let utxos = [];\n      // mvc transaction must be the first one\n      for (let i = 0; i < initDatas.length; i++) {\n        const data = initDatas[i];\n        const isMvc = !data.genesis;\n        const token = sensibleFtList.find(\n          (item) => item.genesis === data.genesis\n        );\n        const decimal = isMvc ? 8 : token.tokenDecimal;\n        const balance = isMvc ? mvcBalance.balance : token.balance;\n        const rabinApis = data.rabinApis;\n        const totalOutputValueFloatDuck = receiverLists[\n          `receiverList${i}`\n        ].reduce((prev, cur) => util.plus(prev, cur.amount), 0);\n\n        const totalOutputValue = util.multi(\n          totalOutputValueFloatDuck,\n          util.getDecimalString(decimal)\n        );\n        if (util.lessThan(balance, totalOutputValue)) {\n          const msg = \"Insufficient ft balance\";\n          onTransferCallback({\n            error: msg,\n          });\n          return message.error(msg);\n        }\n        const formatReceiverList = data.receivers.map((item) => {\n          return {\n            address: item.address,\n            // amount: util.multi(item.amount, util.getDecimalString(decimal)),\n            amount: item.amount,\n          };\n        });\n        if (isMvc) {\n          const tx = await broadcastMvc({\n            formatReceiverList,\n            noBroadcast: true,\n          });\n          const outputIndex = tx.outputs.length - 1;\n          //TODO: check res outputs\n          if (outputIndex !== 1) {\n            const msg = \"Insufficient ft balance\";\n            onTransferCallback({\n              error: msg,\n            });\n            return message.error(msg);\n          }\n          const output = tx.outputs[outputIndex];\n          txs.mvcRawTx = tx.toString();\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new mvc.PrivateKey(\n              key.privateKey,\n              account.network\n            ).toAddress(account.network),\n          });\n        } else {\n          const { amountCheckTx, tx } = await broadcastSensibleFt({\n            formatReceiverList,\n            token,\n            decimal,\n            genesis: data.genesis,\n            rabinApis,\n            utxos,\n            noBroadcast: true,\n          });\n          txs.amountCheckRawTx = amountCheckTx.toString();\n          txs.tokenRawTx = tx.toString();\n          const outputIndex = tx.outputs.length - 1;\n          const output = tx.outputs[outputIndex];\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new mvc.PrivateKey(\n              key.privateKey,\n              account.network\n            ).toAddress(account.network),\n          });\n        }\n      }\n\n      setLoading(false);\n      onTransferCallback({\n        response: txs,\n      });\n    };\n\n    Modal.confirm({\n      title: \"Confirm the transaction\",\n      onOk: () => {\n        //broadcastAll();\n        broadcastMvcAndToken();\n      },\n    });\n  };\n  const handleBack = () => {\n    onCancel();\n  };\n  return (\n    <Card\n      className=\"card\"\n      title={\n        <div style={{ cursor: \"pointer\" }} onClick={handleBack}>\n          <LeftOutlined />\n          Transfer\n        </div>\n      }\n      loading={loading}\n      bordered={false}\n    >\n      <Form form={form} layout=\"vertical\" onFinish={handleSubmit}>\n        {initDatas.map((data, index) => {\n          const isMvc = !data.genesis;\n          const token = sensibleFtList.find(\n            (item) => item.genesis === data.genesis\n          );\n\n          if (!isMvc && !token) {\n            return null;\n          }\n          const tokenSymbol = isMvc ? \"SPACE\" : token.tokenSymbol;\n          const decimal = isMvc ? 8 : token.tokenDecimal;\n          const balance = isMvc ? mvcBalance.balance : token.balance;\n          const formatBalance = formatValue(balance, decimal);\n          const canEdit = !(data.receivers.length > 0);\n          return (\n            <div key={index}>\n              <div className=\"transfer-line\">\n                {isMvc ? `Coin: ${tokenSymbol}` : `Token: ${tokenSymbol}`}\n              </div>\n              {!isMvc && (\n                <div className=\"transfer-line\">Genesis: {token.genesis}</div>\n              )}\n              {!isMvc && (\n                <div className=\"transfer-line\">Codehash: {token.codehash}</div>\n              )}\n              <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n                <Col span={14}>\n                  <div style={{ fontWeight: 700 }}>Input</div>\n                </Col>\n              </Row>\n              <div className=\"transfer-line\">{`Balance: ${formatBalance}`}</div>\n              <div className=\"transfer-line\">{`From Address: ${key.address}`}</div>\n              <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n                <Col span={14}>\n                  <div style={{ fontWeight: 700 }}>Output</div>\n                </Col>\n              </Row>\n              <Form.List name={`receiverList${index}`}>\n                {(fields, { add, remove }) => (\n                  <>\n                    {fields.map((key, name, fieldKey, ...restField) => {\n                      return (\n                        <Space\n                          key={key.fieldKey}\n                          style={{ display: \"flex\", marginBottom: 8 }}\n                          align=\"baseline\"\n                        >\n                          <Form.Item\n                            {...restField}\n                            name={[name, \"address\"]}\n                            fieldKey={[fieldKey, \"address\"]}\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Please input the address\",\n                              },\n                              {\n                                message: \"invalid address\",\n                                validator: (_, value) =>\n                                  isValidAddress(account.network, value)\n                                    ? Promise.resolve()\n                                    : Promise.reject(),\n                              },\n                            ]}\n                          >\n                            <Input\n                              placeholder=\"Input the address\"\n                              disabled={!canEdit}\n                            />\n                          </Form.Item>\n                          <Form.Item\n                            {...restField}\n                            name={[name, \"amount\"]}\n                            fieldKey={[fieldKey, \"amount\"]}\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Please input amount\",\n                              },\n                            ]}\n                          >\n                            <InputNumber\n                              placeholder=\"Amount\"\n                              min={0}\n                              disabled={!canEdit}\n                            />\n                          </Form.Item>\n                          <Button\n                            disabled={!canEdit}\n                            size=\"small\"\n                            onClick={() => remove(name)}\n                            shape=\"circle\"\n                            icon={<MinusOutlined />}\n                          />\n                        </Space>\n                      );\n                    })}\n\n                    <Form.Item>\n                      <Button\n                        type=\"dashed\"\n                        onClick={() => add()}\n                        icon={<PlusOutlined />}\n                        disabled={!canEdit}\n                      >\n                        Add Output\n                      </Button>\n                    </Form.Item>\n                  </>\n                )}\n              </Form.List>\n            </div>\n          );\n        })}\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" block>\n            Transfer\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nfunction TransferPanel({\n  genesis = \"\",\n  initReceivers = [],\n  rabinApis = [],\n  onCancel,\n  onTransferCallback,\n  noBroadcast,\n}) {\n  const [key] = useGlobalState(\"key\");\n  const [mvcBalance] = useGlobalState(\"mvcBalance\");\n  const [account] = useGlobalState(\"account\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const canEdit = !(initReceivers.length > 0);\n\n  useOnceCall(() => {\n    const isMvc = genesis === \"\";\n    const token = sensibleFtList.find((item) => item.genesis === genesis);\n    const decimal = isMvc ? 8 : token.tokenDecimal;\n    console.log(\n      \"initReceivers\",\n      initReceivers,\n      initReceivers.map((item) => {\n        return {\n          address: item.address,\n          amount: util.multi(item.amount, util.getDecimalString(decimal)),\n        };\n      })\n    );\n    form.setFieldsValue({\n      receiverList: initReceivers.map((item) => {\n        return {\n          address: item.address,\n          amount: util.div(item.amount, util.getDecimalString(decimal)),\n        };\n      }),\n    });\n  }, key && mvcBalance && initReceivers.length);\n\n  if (!key) {\n    return null;\n  }\n  if (!mvcBalance) {\n    return null;\n  }\n  if (genesis && !sensibleFtList.length) {\n    return null;\n  }\n\n  const isMvc = genesis === \"\";\n  const token = sensibleFtList.find((item) => item.genesis === genesis);\n\n  if (!isMvc && !token) {\n    return null;\n  }\n  const tokenSymbol = isMvc ? \"SPACE\" : token.tokenSymbol;\n  const decimal = isMvc ? 8 : token.tokenDecimal;\n  const balance = isMvc ? mvcBalance.balance : token.balance;\n  const formatBalance = formatValue(balance, decimal);\n\n  const handleSubmit = async () => {\n    const { receiverList } = form.getFieldsValue();\n    const totalOutputValueFloatDuck = receiverList.reduce(\n      (prev, cur) => util.plus(prev, cur.amount),\n      0\n    );\n\n    const totalOutputValue = util.multi(\n      totalOutputValueFloatDuck,\n      util.getDecimalString(decimal)\n    );\n    if (util.lessThan(balance, totalOutputValue)) {\n      const msg = \"Insufficient ft balance\";\n      onTransferCallback({\n        error: msg,\n      });\n      return message.error(msg);\n    }\n    const formatReceiverList = receiverList.map((item) => {\n      return {\n        address: item.address,\n        amount: util.multi(item.amount, util.getDecimalString(decimal)),\n      };\n    });\n\n    const broadcastMvc = async () => {\n      setLoading(true);\n      let txid = \"\";\n      let transferRes;\n      try {\n        const res = await transferMvc(\n          account.network,\n          key.privateKey,\n          formatReceiverList,\n          noBroadcast\n        );\n        if (noBroadcast) {\n          transferRes = {\n            txid: res.hash,\n            txHex: res.serialize(true),\n            outputs: parseTransaction(account.network, res.serialize(true))\n              .outputs,\n            fee: res.getFee(),\n          };\n          txid = res.hash;\n        } else {\n          transferRes = res;\n          txid = res.txid;\n        }\n      } catch (err) {\n        const msg = \"broadcast error: \" + err.toString();\n        console.log(\n          util.safeJsonStringify({\n            type: \"mvcTransferFail\",\n            msg,\n            account: {\n              network: account.network,\n              address: key.address,\n            },\n            receivers: formatReceiverList,\n          })\n        );\n        Sentry.captureException(err);\n        Sentry.captureMessage(`mvcTransferFail_${key.address}`);\n        onTransferCallback({\n          error: msg,\n        });\n        console.log(\"broadcast mvc error \");\n        console.error(err);\n        message.error(err.toString());\n      }\n      setLoading(false);\n      if (txid) {\n        console.log(\n          util.safeJsonStringify({\n            type: \"mvcTransferSuccess\",\n            account: {\n              network: account.network,\n              address: key.address,\n            },\n            receivers: formatReceiverList,\n            txid,\n            ...transferRes,\n          })\n        );\n        Sentry.captureMessage(`mvcTransferSuccess_${key.address}_${txid}`);\n        onTransferCallback({\n          response: {\n            ...transferRes,\n          },\n        });\n        Modal.success({\n          title: \"Transaction broadcast success\",\n          content: (\n            <div>\n              txid:{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={getWocTransactionUrl(account.network, txid)}\n              >\n                {txid}\n              </a>\n            </div>\n          ),\n        });\n      }\n    };\n\n    const broadcastSensibleFt = async () => {\n      setLoading(true);\n      let txid = \"\";\n      let transferRes;\n      try {\n        const rabins = await getRabins(rabinApis);\n\n        const res = await transferSensibleFt(\n          account.network,\n          // signers,\n          rabins,\n          key.privateKey,\n          formatReceiverList,\n          token.codehash,\n          token.genesis,\n          false,\n          noBroadcast\n        );\n        if (noBroadcast) {\n          transferRes = {\n            txid: res.tx.hash,\n            outputs: parseTransaction(account.network, res.tx.serialize(true))\n              .outputs,\n            fee: res.tx.getFee(),\n            routeCheckTxid: res.routeCheckTx.hash,\n            txHex: res.tx.serialize(true),\n            routeCheckTxHex: res.routeCheckTx.serialize(true),\n            routeCheckOutputs: parseTransaction(\n              account.network,\n              res.routeCheckTx.serialize(true)\n            ).outputs,\n          };\n          txid = res.tx.hash;\n        } else {\n          transferRes = res;\n          txid = res.txid;\n        }\n      } catch (err) {\n        console.log(\"broadcast sensible ft error \");\n        console.error(err);\n        message.error(err.toString());\n        console.log(\n          util.safeJsonStringify({\n            type: \"ftTransferFail\",\n            msg: util.safeJsonStringify(err.message),\n            account: {\n              network: account.network,\n              address: key.address,\n            },\n            genesis: token.genesis,\n            codehash: token.codehash,\n            receivers: formatReceiverList,\n          })\n        );\n        Sentry.captureException(err);\n        Sentry.captureMessage(\n          `ftTransferFail_${key.address}_${token.genesis}_${token.genesis}`\n        );\n        onTransferCallback({\n          error: err.toString(),\n        });\n      }\n      setLoading(false);\n      if (txid) {\n        console.log(\n          util.safeJsonStringify({\n            type: \"ftTransferSuccess,\",\n            account: {\n              network: account.network,\n              address: key.address,\n              genesis: token.genesis,\n              codehash: token.codehash,\n            },\n            receivers: formatReceiverList,\n            txid,\n            ...transferRes,\n          })\n        );\n        Sentry.captureMessage(`ftTransferSuccess_${key.address}_${txid}`);\n        onTransferCallback({\n          response: {\n            ...transferRes,\n          },\n        });\n        Modal.success({\n          title: \"Transaction broadcast success\",\n          content: (\n            <div>\n              txid:{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={getWocTransactionUrl(account.network, txid)}\n              >\n                {txid}\n              </a>\n            </div>\n          ),\n        });\n      }\n    };\n\n    Modal.confirm({\n      title: \"Confirm the transaction\",\n      onOk: () => {\n        isMvc ? broadcastMvc() : broadcastSensibleFt();\n      },\n    });\n  };\n  const handleBack = () => {\n    onCancel();\n  };\n\n  return (\n    <Card\n      className=\"card\"\n      title={\n        <div style={{ cursor: \"pointer\" }} onClick={handleBack}>\n          <LeftOutlined />\n          Transfer\n        </div>\n      }\n      loading={loading}\n      bordered={false}\n    >\n      <Form form={form} layout=\"vertical\" onFinish={handleSubmit}>\n        <div className=\"transfer-line\">\n          {isMvc ? `Coin: ${tokenSymbol}` : `Token: ${tokenSymbol}`}\n        </div>\n        {!isMvc && (\n          <div className=\"transfer-line\">Genesis: {token.genesis}</div>\n        )}\n        {!isMvc && (\n          <div className=\"transfer-line\">Codehash: {token.codehash}</div>\n        )}\n        {!isMvc && (\n          <div className=\"transfer-line\">SensibleId: {token.sensibleId}</div>\n        )}\n        <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n          <Col span={14}>\n            <div style={{ fontWeight: 700 }}>Input</div>\n          </Col>\n        </Row>\n        <div className=\"transfer-line\">{`Balance: ${formatBalance}`}</div>\n        <div className=\"transfer-line\">{`From Address: ${key.address}`}</div>\n        <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n          <Col span={14}>\n            <div style={{ fontWeight: 700 }}>Output</div>\n          </Col>\n        </Row>\n        <Form.List name=\"receiverList\">\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map((key, name, fieldKey, ...restField) => {\n                return (\n                  <Space\n                    key={key.fieldKey}\n                    style={{ display: \"flex\", marginBottom: 8 }}\n                    align=\"baseline\"\n                  >\n                    <Form.Item\n                      {...restField}\n                      name={[name, \"address\"]}\n                      fieldKey={[fieldKey, \"address\"]}\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please input the address\",\n                        },\n                        {\n                          message: \"invalid address\",\n                          validator: (_, value) =>\n                            isValidAddress(account.network, value)\n                              ? Promise.resolve()\n                              : Promise.reject(),\n                        },\n                      ]}\n                    >\n                      <Input\n                        placeholder=\"Input the address\"\n                        disabled={!canEdit}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      {...restField}\n                      name={[name, \"amount\"]}\n                      fieldKey={[fieldKey, \"amount\"]}\n                      rules={[\n                        { required: true, message: \"Please input amount\" },\n                      ]}\n                    >\n                      <InputNumber\n                        placeholder=\"Amount\"\n                        min={0}\n                        disabled={!canEdit}\n                      />\n                    </Form.Item>\n                    <Button\n                      disabled={!canEdit}\n                      size=\"small\"\n                      onClick={() => remove(name)}\n                      shape=\"circle\"\n                      icon={<MinusOutlined />}\n                    />\n                  </Space>\n                );\n              })}\n\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => add()}\n                  icon={<PlusOutlined />}\n                  disabled={!canEdit}\n                >\n                  Add Output\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" block>\n            Transfer\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    actions.recoverAccountFromStorage();\n  }, []);\n\n  const [trasfering, setTransfering] = useState(false);\n  const [trasferSensibleFtGenesis, setTrasferSensibleFtGenesis] = useState(\"\");\n  const [account] = useGlobalState(\"account\");\n  const [key] = useGlobalState(\"key\");\n  const [mvcBalance] = useGlobalState(\"mvcBalance\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n  const [initReceivers, setInitReceivers] = useState([]);\n  const [initDatas, setInitDatas] = useState([]);\n  const [initRabins, setRabins] = useState([]);\n  const [initNoBroadcast, setInitNoBroadcast] = useState(false);\n\n  const handleTransfer = (genesis) => {\n    setTransfering(true);\n    genesis && setTrasferSensibleFtGenesis(genesis);\n  };\n  const handleCancelTransfer = () => {\n    setTransfering(false);\n    setTrasferSensibleFtGenesis(\"\");\n  };\n\n  const getHashData = () => {\n    if (!window.opener) {\n      return null;\n    }\n    const hash = window.location.hash.substr(1);\n    try {\n      const data = JSON.parse(decodeURIComponent(hash));\n      if (data.type === \"popup\") {\n        if (typeof data.data === \"object\") {\n          return data;\n        }\n      }\n    } catch (err) {}\n    return null;\n  };\n  const handlePopResponseCallback = (resObj) => {\n    const data = getHashData();\n    if (!data) {\n      return;\n    }\n    const postMsg = createPostMsg(window.opener, \"*\");\n    postMsg.emit(data.id, {\n      type: \"response\",\n      data: {\n        ...data.data.data,\n        ...resObj,\n      },\n    });\n  };\n\n  // todo 数值计算 使用 bignumber\n  // todo 此处接收 postMessage 消息，处理登录,transfer\n  const requestAccountCondition = key?.address && account?.network;\n  const transferMvcCondition =\n    requestAccountCondition &&\n    mvcBalance &&\n    util.greaterThanEqual(mvcBalance.balance, 0);\n  useOnceCall(() => {\n    const data = getHashData();\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"requestAccount\") {\n      return;\n    }\n    Modal.confirm({\n      title: \"Connect\",\n      content: (\n        <div>\n          Allow <b>{params.name}</b> to connect your web wallet\n        </div>\n      ),\n      onOk: () => {\n        handlePopResponseCallback({ response: true });\n      },\n      onCancel: () => {\n        handlePopResponseCallback({ error: \"user reject\" });\n      },\n    });\n  }, !!requestAccountCondition);\n  useOnceCall(() => {\n    const data = getHashData();\n    console.log(\"mvc hash data\", data);\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"transferMvc\") {\n      return;\n    }\n    // balance check\n    const outputTotal = params.receivers.reduce(\n      (prev, cur) => util.plus(prev, cur.amount),\n      0\n    );\n    if (util.greaterThan(outputTotal, mvcBalance.balance)) {\n      handlePopResponseCallback({ error: \"insufficient mvc balance\" });\n      return;\n    }\n    setTransfering(true);\n    setInitReceivers(params.receivers);\n    setInitNoBroadcast(params.noBroadcast);\n  }, !!transferMvcCondition);\n  useOnceCall(() => {\n    const data = getHashData();\n    console.log(\"hashdata\", data);\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"transferSensibleFt\") {\n      return;\n    }\n    // sensibleft balance check\n    const outputTotal = params.receivers.reduce(\n      (prev, cur) => util.plus(prev, cur.amount),\n      0\n    );\n    console.log(\"outputTotal\", outputTotal);\n    const ft = sensibleFtList.find((item) => item.genesis === params.genesis);\n    console.log(\"ft\", ft);\n    if (!ft) {\n      handlePopResponseCallback({ error: \"insufficient ft balance\" });\n      return;\n    }\n    if (util.greaterThan(outputTotal, ft.balance)) {\n      handlePopResponseCallback({ error: \"insufficient ft balance\" });\n      return;\n    }\n    setTransfering(true);\n    setTrasferSensibleFtGenesis(params.genesis);\n    setInitReceivers(params.receivers);\n    setRabins(params.rabinApis);\n    setInitNoBroadcast(params.noBroadcast);\n  }, !!transferMvcCondition);\n  useOnceCall(() => {\n    const data = getHashData();\n    console.log(\"mvc hash data\", data);\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"transferAll\") {\n      return;\n    }\n    // balance check\n    params.datas.forEach((item) => {\n      // balance check\n      const isMvc = !item.genesis;\n      const ft = sensibleFtList.find((v) => v.genesis === item.genesis);\n\n      const outputTotal = item.receivers.reduce(\n        (prev, cur) => util.plus(prev, cur.amount),\n        0\n      );\n      if (isMvc && util.greaterThan(outputTotal, mvcBalance.balance)) {\n        handlePopResponseCallback({ error: \"insufficient mvc balance\" });\n        return;\n      }\n      if (ft && util.greaterThan(outputTotal, ft.balance)) {\n        handlePopResponseCallback({ error: \"insufficient ft balance\" });\n        return;\n      }\n      setTransfering(true);\n      setInitDatas(params.datas);\n    });\n  }, !!transferMvcCondition);\n  useEffect(() => {\n    const obu = window.onbeforeunload;\n    window.onbeforeunload = function (event) {\n      handlePopResponseCallback({ error: \"use closed\" });\n      return obu && obu(event);\n    };\n  });\n  return (\n    <div className=\"App\" style={{ overflow: \"hidden\" }}>\n      <Header accountName=\"harry\" />\n      <LoginPanel />\n      {!trasfering && <AccountInfoPanel onTransfer={handleTransfer} />}\n      {trasfering &&\n        (!initDatas || initDatas.length < 1 ? (\n          <TransferPanel\n            genesis={trasferSensibleFtGenesis}\n            rabinApis={initRabins}\n            onCancel={handleCancelTransfer}\n            onTransferCallback={handlePopResponseCallback}\n            initReceivers={initReceivers}\n            noBroadcast={initNoBroadcast}\n          />\n        ) : (\n          <TransferAllPanel\n            onCancel={handleCancelTransfer}\n            onTransferCallback={handlePopResponseCallback}\n            initDatas={initDatas}\n          />\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as actions from \"./state/action\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\nimport { SensibleApi } from \"meta-contract\";\nimport { mvc } from \"mvc-scrypt\";\n\n(function () {\n  /*const originBroadcast = SensibleApi.prototype.broadcast;\n  SensibleApi.prototype.broadcast = async function (hex) {\n    const txid = new mvc.Transaction(hex).hash;\n    const txMsg = `txid: ${txid}; rawtx: ${hex}`;\n    console.log(\"meta-contract 广播\", txMsg);\n    try {\n      const res = await originBroadcast.call(this, hex);\n      return res;\n    } catch (err) {\n      console.log(\"meta-contract 广播错误\", txMsg);\n      const newError = new Error(\n        `${err.message} meta-contract 广播错误 ${txMsg}`\n      );\n      setTimeout(() => {\n        throw newError;\n      }, 0);\n      throw err;\n    }\n  };*/\n})();\n\nconst isIframe = window === window.top;\n\nSentry.init({\n  dsn: \"https://d223c2a1d1bf44b6a657051ac9a99b16@o877284.ingest.sentry.io/5827823\",\n  integrations: [new Integrations.BrowserTracing()],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n});\n\nif (isIframe) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n} else {\n  actions.runIframeTask();\n}\n\n// delete account when page/iframe exit\n(function () {\n  const obu = window.onbeforeunload;\n  window.onbeforeunload = function (event) {\n    const isPopup = !!window.opener;\n    if (!isPopup) {\n      actions.saveAccount(null);\n    }\n    return obu && obu(event);\n  };\n})();\n\n// alert(window === window.top);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\nexport enum NetWork {\n  Testnet = 'testnet',\n  Mainnet = 'mainnet',\n  STN = 'STN'\n}\n\n"],"sourceRoot":""}